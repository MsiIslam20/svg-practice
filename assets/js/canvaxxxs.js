function inIframe() {
    try {
        return window.self !== window.top
    } catch (e) {
        return !0
    }
}

function addClickAction() {
    var e;
    e = iOS || isAndroid || null != isWin && 0 != isWin ? $('<img class="clickAction" src="' + window.assetURL + '/assets/images/touch.svg" />') : $('<img class="clickAction" src="' + window.assetURL + '/assets/images/click.svg" />'), $("body").append(e);
    var t = !1;
    $(document).one("mousedown touchstart", function() {
        t || e.fadeOut(function() {
            e.remove()
        })
    }), setTimeout(function() {
        t || e.fadeOut(function() {
            e.remove()
        })
    }, 4e3)
}

function loadInitAssets(e) {
    0 == initAssetsLoadedCount && (initAssetsToLoad = $(window).width() <= 768 ? assetsToLoadMobile : assetsToLoadDesktop), initAssetsLoadedCount == initAssetsToLoad.length ? (initAssetsLoaded = !0, e()) : $("<img />").load(function() {
        initAssetsLoadedCount++, loadInitAssets(e)
    }).attr("src", window.assetURL + "/assets/" + initAssetsToLoad[initAssetsLoadedCount])
}

function init() {
    webglAvailable() ? $("html").addClass("webgl") : (window.location = "/static/nowebgl/?c=" + getURIParameter("c"), $("html").addClass("no-webgl")), window.sessionID = guid(), $(function() {
        $(".staticContent").append('<div id="awwwards" class="sotd white right outside"><a href="http://www.awwwards.com" target="_blank">Awwwards</a></div>'), $.ajax({
            dataType: "json",
            url: "https://weareastral.s3.eu-central-1.amazonaws.com/xmas/static/faces/all.json",
            complete: function(e) {
                var t = $.parseJSON(e.responseText);
                window.visionData = t, $("#awwwards").removeClass("outside"), preloadVisionTemplate()
            }
        })
    })
}

function preloadVisionTemplate() {
    var e;
    e = "1" == window.isLive ? "data.json" : "?json=true", $.ajax({
        dataType: "json",
        url: "/vision/" + e,
        complete: function(e) {
            var t = $.parseJSON(e.responseText);
            window.sitemap.vision.json = t, loadInitAssets(function() {
                handleMobileClass(), onDomReady()
            })
        }
    })
}

function isIE() {
    var e = window.navigator.userAgent,
        t = e.indexOf("MSIE ");
    return !!(t > 0 || navigator.userAgent.match(/Trident.*rv\:11\./));
    return !1
}

function webglAvailable() {
    if (isIE()) return !1;
    try {
        var e = document.createElement("canvas");
        return !!window.WebGLRenderingContext && (e.getContext("webgl") || e.getContext("experimental-webgl"))
    } catch (e) {
        return !1
    }
}

function onDomReady() {
    $loadingLayer = $(".loadingLayer"), iOS || isAndroid || null != isWin && 0 != isWin ? $(".startIntroButton").css("display", "block").one("click", function() {
        return $("#awwwards").addClass("outside"), initAudio(), onDomReadyNow(), $(this).fadeOut(function() {
            $(this).remove()
        }), !1
    }) : (initAudio(), onDomReadyNow()), $loadingLayer.fadeOut(function() {
        return $loadingLayer.remove(), !1
    })
}

function onDomReadyNow() {
    var e = !0;
    if (loadVisionOverviewData(), $.pageFlow({
            sitemap: window.sitemap,
            currentSite: window.currentSite,
            templates: window.siteTemplates,
            baseURL: window.siteURL,
            onBeforeLoad: function(e) {
                $("html").addClass("loading"), initAssetsLoaded ? e() : loadInitAssets(e)
            },
            onContentLoaded: function(t) {
                e && (e = !1, $("html").removeClass("firstLoad"), $("html").removeClass("loading").removeClass("loadingNoIcon")), setTimeout(function() {
                    t()
                }, 300)
            },
            onBeforeContentAdded: function(t, n, i) {
                e && (e = !1, $("html").removeClass("firstLoad")), pauseContent(n), prepareContent(t, n, i)
            },
            onContentAdded: function(e, t, n, i) {
                resetContent(t), initContent(e, t, n, i)
            }
        }), window.useFallback = !1, "" != currentSite[0], !1) return window.jumpIn = currentSite, window.jumpID = getURIParameter("id"), window.jumpDark = getURIParameter("dark"), window.parent && window.parent.postMessage && window.parent.postMessage("scroll-to", "*"), "true" == window.jumpDark && toggleDayNight(), initAssetsLoaded && window.openAppURL("/"), !1
}

function prepareContent(e, t, n) {
    void 0 != t && t.length > 0 && t.find(".scrollExplore").off("DOMMouseScroll mousewheel"), $active = n
}

function toggleFullscreenButton() {
    screenfull.isFullscreen ? $(".fullscreenBtn").html("&#xe910;") : $(".fullscreenBtn").html("&#xe90f;")
}

function toggleAudioButton() {
    window.globalVolume > 0 ? $(".muteBtn").html("&#xe900;") : $(".muteBtn").html("&#xe901;")
}

function toggleDayNightButton() {
    return !(iOS || isAndroid || isWin) && void($("html").hasClass("darkSide") ? $(".dayNightBtn").html("&#xe911;") : $(".dayNightBtn").html("&#xe912;"))
}

function toggleDayNight() {
    return !(iOS || isAndroid || isWin) && ($("html").hasClass("darkSide") ? $("html").removeClass("darkSide") : $("html").addClass("darkSide"), void toggleDayNightButton())
}

function detectFlash() {
    var e = "Shockwave Flash",
        t = "ShockwaveFlash.ShockwaveFlash",
        n = "application/x-shockwave-flash",
        i = window,
        r = navigator,
        o = !1;
    if ("undefined" != typeof r.plugins && "object" == typeof r.plugins[e]) {
        var a = r.plugins[e].description;
        a && "undefined" != typeof r.mimeTypes && r.mimeTypes[n] && r.mimeTypes[n].enabledPlugin && (o = !0)
    } else if ("undefined" != typeof i.ActiveXObject) try {
        var s = new ActiveXObject(t);
        if (s) {
            var l = s.GetVariable("$version");
            l && (o = !0)
        }
    } catch (e) {}
    return o
}

function initContent(e, t, n, i) {
    n.find(".helper").on("click", function() {
        $(this).hide()
    }), n.find(".content_weiche").length > 0 ? (stepZero(1400, 1200), handleWeiche(n)) : n.find(".content_explore").length > 0 ? stepOne(1400, 1200) : n.find(".content_vision_detail").length > 0 || (n.find(".content_generate_finished").length > 0 ? stepThree(1400, 1200) : n.find(".content_generate_select").length > 0 && t && t.find(".content_explore").length > 0 ? stepTwo(3400, 1200) : stepTwo(1400, 1200)), (iOS || isAndroid || isWin) && $("html").addClass("touch");
    var r = navigator.userAgent.indexOf("Safari") > -1 && void 0 == window.chrome;
    (iOS || isAndroid || isWin || r && !detectFlash()) && (window.disableWebcam = !0, n.find(".link-internal").each(function() {
        var e = $(this).attr("href");
        e.indexOf("generate-select") > -1 && (e = e.replace("generate-select", "upload"), $(this).attr("href", e))
    }), n.find(".imageButton").remove()), iOS || isAndroid || isWin ? ($(".muteBtn").remove(), $(".fullscreenBtn").remove(), $(".dayNightBtn").remove()) : window.useFallback ? ($(".muteBtn").remove(), $(".fullscreenBtn").remove(), $(".dayNightBtn").css({
        right: "40px"
    }).on("click", function() {
        toggleDayNight()
    }), toggleDayNightButton()) : (screenfull.enabled ? ($(".fullscreenBtn").on("click", function() {
        screenfull.toggle($("body")[0])
    }), toggleFullscreenButton(), document.removeEventListener(screenfull.raw.fullscreenchange, toggleFullscreenButton), document.addEventListener(screenfull.raw.fullscreenchange, toggleFullscreenButton)) : $(".fullscreenBtn").remove(), $(".dayNightBtn").on("click", function() {
        toggleDayNight()
    }), toggleDayNightButton(), toggleAudioButton()), toggleVolume(n), void 0 != t && destroySpriteAnimation(t), $("html,body,.app-container,.scrollable-content").css({
        height: "100%"
    }), n.find(".content_explore").length > 0 ? (window.useFallback || $("body,html").css({
        overflow: "hidden"
    }), $("body").animate({
        scrollTop: 0
    }, "500")) : $("body,html").css({
        overflow: "auto"
    }), update3D(n), initProcessing(t, n), initSaveForm(t, n), initModifyVision(t, n), initMottoSelector(t, n), initWebcam(t, n), initUpload(n), makeUIAnimation(n), n.find("a,.btn,.flickity-prev-next-button").on("mouseover", function() {
        $(this).hasClass("inactive") || $(this).hasClass("active") || makeHoverSound()
    }), $("html").hasClass("keepLoading") || $("html").removeClass("loading").removeClass("loadingNoIcon"), $loadingLayer.remove(), n.append($loadingLayer), n.addClass("pt-page-current"), i()
}

function pauseContent(e) {}

function resetContent(e) {
    null != e && e.trigger("kill")
}

function handleMobileClass() {
    var e = $("html");
    enquire.register("screen and (max-width: 768px)", {
        match: function() {
            e.addClass("mobile").removeClass("desktop"), window.isMobileDevice = !0
        },
        unmatch: function() {
            e.addClass("desktop").removeClass("mobile"), window.isMobileDevice = !1
        }
    });
    var t = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
    t && e.addClass("ios"), (t || isAndroid || isWin) && e.addClass("no-webcam"), isAndroid && e.addClass("is-android")
}

function getURIParameter(e, t) {
    return document.location.search.substring(1).split("&").reduce(function(n, i) {
        var r = i.split("=", 2).map(function(e) {
            return decodeURIComponent(e)
        });
        return 0 == r.length || r[0] != e ? n instanceof Array && !t ? null : n : t ? n.concat(r.concat(!0)[1]) : r.concat(!0)[1]
    }, [])
}

function guid() {
    function e() {
        return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
    }
    return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e()
}

function getBetween(e, t, n) {
    return e + (t - e) / 100 * n
}

function handleWeiche(e) {
    $btns = e.find(".3dButton, .2dButton"), window.parent && window.parent.postMessage && window.parent.postMessage("auto", "*"), e.find(".content_weiche").css({
        opacity: 1
    }), window.jumpIn && void 0 != window.jumpIn[0] && "vision" == window.jumpIn[0], $btns.one("click", function() {
        if ($this = $(this), !$this.hasClass("3dButton") || !$("html").hasClass("no-webgl")) return $this.hasClass("3dButton") ? (iOS || isAndroid || null != isWin && 0 != isWin || initAudio(), window.useFallback = !1) : (window.useFallback = !0, $("html").addClass("is-fallback")), stepOne(), $(".content_weiche").velocity("stop").velocity({
            properties: {
                opacity: 0
            },
            options: {
                duration: 500,
                delay: 0,
                complete: function() {
                    void 0 != window.jumpIn ? ("vision" == window.jumpIn[0] ? window.openAppURL("/vision/?id=" + window.jumpID) : window.openAppURL("/explore"), window.jumpIn = void 0, window.jumpID = void 0, window.jumpDark = void 0) : window.openAppURL("/explore")
                }
            }
        }), !1
    })
}

function loadVisionOverviewData() {
    var e;
    e = void 0 == window.greetingsID || null == window.greetingsID ? "https://weareastral.s3.amazonaws.com/xmas/static/explore.json" : "/static/custom/" + window.greetingsID + "/explore.json", $.ajax({
        dataType: "json",
        url: e,
        complete: function(e) {
            window.visionOverviewData = $.parseJSON(e.responseText)
        }
    })
}

function update3D(e) {
    e.hasClass("content_weiche") || ($3dTrigger = e, texturesToLoad && loadedCount < texturesToLoad.length ? is3DLoading || (is3DLoading = !0, loadTextures(function() {
        is3DLoading = !1, update3DNow()
    })) : update3DNow())
}

function findGetParameter(e) {
    var t = null,
        n = [];
    return location.search.substr(1).split("&").forEach(function(i) {
        n = i.split("="), n[0] === e && (t = decodeURIComponent(n[1]))
    }), t
}

function loadTextures(e) {
    if (loadedCount < texturesToLoad.length) {
        var t = texturesToLoad[loadedCount],
            n = new THREE.TextureLoader;
        n.load(t.path, function(n) {
            loadedTextures[t.id] = n, loadedCount++, loadTextures(e)
        }, function(e) {}, function(e) {})
    } else e()
}

function init3dScene() {
    return void 0 != window.useFallback && void(window.useFallback ? (three = new SimpleThree, three.renderTo("renderView"), pManager = new ParticleManager, mainGroup = pManager.createGroup(), secondGroup = pManager.createGroup(), three.add(pManager)) : (three = new SimpleThree, three.renderTo("renderView"), pManager = new ParticleManager, mainGroup = pManager.createGroup(), secondGroup = pManager.createGroup(), three.add(pManager)))
}

function getActionID() {
    var e = !1;
    return 1 == $3dTrigger.find(".content_weiche").length ? (window.useGeneric = !0, e = "world") : 1 == $3dTrigger.find(".content_explore").length ? (window.useGeneric = !0, e = "explore") : 1 == $3dTrigger.find(".content_vision_detail").length ? (window.useGeneric = !0, e = "vision_detail") : 1 == $3dTrigger.find(".content_generate_intro").length ? (window.useGeneric = !0, e = "generate_intro") : 1 == $3dTrigger.find(".content_generate_select").length ? (window.useGeneric = !0, e = "generate_select") : 1 == $3dTrigger.find(".content_generate_upload").length ? (window.useGeneric = !0, e = "generate_upload") : 1 == $3dTrigger.find(".content_generate_webcam").length ? (window.useGeneric = !0, e = "generate_finished") : 1 == $3dTrigger.find(".content_generate_check").length ? (window.useGeneric = !1, e = "generate_check") : 1 == $3dTrigger.find(".content_generate_motto").length ? e = "generate_claim" : 1 == $3dTrigger.find(".content_generate_modify").length ? e = "generate_modify" : 1 == $3dTrigger.find(".content_generate_save").length ? e = "generate_save" : 1 == $3dTrigger.find(".content_generate_finished").length && (e = "generate_finished"), "explore" != e && (rndrHndlr.off("exploreLoop"), mainGroup.setTargetOpacity(1), secondGroup.setTargetOpacity(1)), e
}

function update3DNow() {
    if (particles_effect = particles_empty, void 0 == window.useFallback) return !1;
    var e;
    void 0 == three && init3dScene(), e = getActionID(), "generate_claim" != e && "generate_modify" != e && (mainGroup.clearModifyer("color"), secondGroup.clearModifyer("color")), void 0 == actions[e] || e == lastAction && "vision_detail" != e || actions[e](lastAction), "explore" == lastAction && clearExploreVisions(), 0 != e && (lastAction = e)
}

function getCountryByCode(e) {
    var t, n;
    n = e.split("_"), n = n[1];
    for (t in countryData)
        if (countryData[t].country == n) return countryData[t].name;
    return e
}

function getNextID(e) {
    var t, n, i, r;
    n = !1, i = !1, r = !1;
    for (t in visionOverviewData)
        if (r || (r = t), t == e) n = !0;
        else if (n) {
        i = t;
        break
    }
    return i || (i = r), i
}

function getVisionIndex(e) {
    var t, n;
    n = !1;
    var i = 0;
    for (t in visionOverviewData) {
        if (t == e) return i;
        i++
    }
    return i
}

function getPrevID(e) {
    var t, n;
    n = !1;
    for (t in visionOverviewData) {
        if (t == e && n !== !1) return n;
        n = t
    }
    return n
}

function fbShare(e) {
    var t = 575,
        n = 350,
        i = screen.height / 2 - n / 2,
        r = screen.width / 2 - t / 2;
    window.open("http://www.facebook.com/sharer.php?p[url]=" + e, "sharer", "top=" + i + ",left=" + r + ",toolbar=0,status=0,width=" + t + ",height=" + n)
}

function twitterShare(e) {
    var t = 575,
        n = 350,
        i = screen.height / 2 - n / 2,
        r = screen.width / 2 - t / 2;
    window.open("http://www.twitter.com/share?hashtags=next100&url=" + e, "sharer", "top=" + i + ",left=" + r + ",toolbar=0,status=0,width=" + t + ",height=" + n)
}

function googleShare(e) {
    var t = 575,
        n = 350,
        i = screen.height / 2 - n / 2,
        r = screen.width / 2 - t / 2;
    window.open("https://plus.google.com/share?url=" + e, "sharer", "top=" + i + ",left=" + r + ",toolbar=0,status=0,width=" + t + ",height=" + n)
}

function addShareFunctions(e, t) {
    var n = e.find(".socialFacebook"),
        i = e.find(".socialTwitter"),
        r = e.find(".socialGooglePlus"),
        o = function() {
            var e;
            return e = !!$("html").hasClass("darkSide"), window.shareURL + t + "%26dark=" + e
        };
    n.on("click", function() {
        fbShare(o())
    }), i.on("click", function() {
        twitterShare(o())
    }), r.on("click", function() {
        googleShare(o())
    })
}

function showVisionNotFound() {
    stepTwo(1400, 1200), $lContent = $3dTrigger.find(".loadedContent"), $lContent.find("h4").html('Leider widerspricht Ihr Foto unseren Richtlinien <span class="hideMobile" ><br /></span>und kann deshalb nicht veröffentlicht werden.'), $lContent.find("h5 .uName").html(""), $lContent.find("h6").html(""), $lContent.find(".dotNew").remove(), $3dTrigger.find(".prevBtn").remove(), $3dTrigger.find(".nextBtn").remove();
    var e = $(".toFadeIn");
    e = e.add($lContent), e.css({
        opacity: 0,
        display: "inline-block"
    }).velocity({
        properties: {
            opacity: 1
        },
        options: {
            duration: 600
        }
    }), $3dTrigger.find(".preloader").velocity({
        properties: {
            opacity: 0
        },
        options: {
            duration: 600,
            complete: function() {
                $(this).hide(), window.isDetailLoading = !1
            }
        }
    }), setTimeout(function() {
        e.css({
            opacity: 1,
            display: "inline-block"
        })
    }, 1300), $3dTrigger.find(".socialFacebook").remove(), $3dTrigger.find(".socialTwitter").remove(), $3dTrigger.find(".socialGooglePlus").remove(), window.useFallback ? $(".contentWrapper").prepend('<div class="fallbackBG"></div>') : (mainGroup.setHandler("depthColor", {
        data: particles_intro_layer,
        modulo: 1,
        delayMulti: 1,
        delayZ: 1,
        colorDelay: 50,
        dotsize: 10,
        opacity: 1,
        scaleZ: 4
    }), secondGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1
    }), window.lookAtZ = 1800, window.lookAtStrength = 5)
}

function showVisionDetail(e) {
    if ($lContent = $3dTrigger.find(".loadedContent"), window.useFallback) {
        addShareFunctions($3dTrigger, e.id);
        var t = window.mottoData[e.motto];
        $lContent.find("h4").html(t.mottoText), $lContent.find("h5 .uName").html(e.name), $lContent.find("h6").html(getCountryByCode(e.country)), $lContent.find(".dotNew").addClass("dot" + capitalizeFirstLetter(t.color));
        var n = $3dTrigger.find(".prevBtn"),
            i = $3dTrigger.find(".nextBtn"),
            r = $lContent.add(n);
        r = r.add($(".toFadeIn")), r = r.add(i), $cImg = $('<div class="visionDetailImage" style="background-image:url(' + e.imgLarge + ');" />'), $cImg.css({
            opacity: 0
        }), r = r.add($cImg), $lContent.parent().parent().prepend($cImg), n.on("click", function() {
            window.isDetailLoading || window.openAppURL("/vision/?id=" + getPrevID(e.id))
        }), i.on("click", function() {
            window.isDetailLoading || window.openAppURL("/vision/?id=" + getNextID(e.id))
        }), setTimeout(function() {
            r.css({
                opacity: 0,
                display: "inline-block"
            }).velocity({
                properties: {
                    opacity: 1
                },
                options: {
                    duration: 600
                }
            }), $3dTrigger.find(".preloader").velocity({
                properties: {
                    opacity: 0
                },
                options: {
                    duration: 600,
                    complete: function() {
                        $(this).hide(), window.isDetailLoading = !1
                    }
                }
            }), setTimeout(function() {
                r.css({
                    opacity: 1,
                    display: "inline-block"
                })
            }, 1300)
        }, 100)
    } else {
        ga("send", "event", "Faces", "show", e.info.id), window.visionShowCount % 2 == 0 ? (e.info.pos = "right", e.rotationY = "-0.5", e.width = -250) : (e.info.pos = "left", e.rotationY = "0.5", e.width = 1750), window.visionShowCount++, $lContent.addClass("pos-" + e.info.pos), $lContent.append('<div class="winfo" ><h3>' + e.info.name + "</h3><h3>" + e.info.dep + "</h3></div>");
        var o = !1,
            a = !1,
            s;
        s = void 0 == window.greetingsID || null == window.greetingsID ? "https://weareastral.s3.amazonaws.com/xmas/static/greetings/" + e.info.id + ".svg" : "/static/custom/" + window.greetingsID + "/greetings/" + e.info.id + ".svg", $('<img class="greeting" />').load(function() {
            o = !0, $lContent.append(this), a && l()
        }).attr("src", s), setTimeout(function() {
            a = !0, o && l()
        }, 500);
        var l = function() {
            var t = $3dTrigger.find(".prevBtn"),
                n = $3dTrigger.find(".nextBtn"),
                i = $lContent.add(t);
            i = i.add($(".toFadeIn")), i = i.add(n), i.css({
                opacity: 0,
                display: "inline-block"
            }).velocity({
                properties: {
                    opacity: 1
                },
                options: {
                    delay: 1e3,
                    duration: 300
                }
            }), $3dTrigger.find(".preloader").hide(), t.off("click").one("click", function() {
                window.openAppURL("/vision/?id=" + getPrevID(e.info.id))
            }), n.off("click").one("click", function() {
                window.openAppURL("/vision/?id=" + getNextID(e.info.id))
            })
        };
        mainGroup.positionDelay = 10, mainGroup.rotationDelay = 10, secondGroup.setHandler("depthColor", {
            data: particles_empty,
            modulo: 1,
            delayMulti: 1,
            dotsize: 10,
            opacity: 1
        }), isAndroid ? mainGroup.setHandler("depthColor", {
            data: e,
            modulo: 1,
            delayMulti: 0,
            dotsize: e.dotsize,
            opacity: 1,
            resModulo: 1
        }) : mainGroup.setHandler("depthColor", {
            data: e,
            modulo: 1,
            delayMulti: 1,
            dotsize: e.dotsize,
            opacity: 1,
            resModulo: 1
        }), mainGroup.setTargetPosition(0, 0, 1400), mainGroup.setTargetRotation(e.rotationX, e.rotationY, e.rotationZ), window.lookAtZ = 1800, window.lookAtStrength = 25
    }
}

function capitalizeFirstLetter(e) {
    return e.charAt(0).toUpperCase() + e.slice(1)
}

function getRandomRotation() {
    var e = Math.random() / 2;
    return e < .1 && (e = .1), lastRandom > 0 && (e *= -1), lastRandom = e, e
}

function addClaim(e) {
    activeClaim = new THREE.Mesh(new THREE.PlaneGeometry(102.4, 12.8), new THREE.MeshBasicMaterial({
        map: loadedTextures["c" + e],
        transparent: !0,
        opacity: 0
    })), activeClaim.position.z = -3e3, activeClaim.rotation.z = claimRot[e - 1], three.addToScene(activeClaim), camRotation = claimRot[e - 1]
}

function hideClaim() {
    var e = activeClaim;
    three.removeFromScene(e)
}

function getVisionData(e, t) {
    var n, i;
    if (t) {
        if (i = !1, 0 == tmpVisions.length) {
            for (n in window.visionOverviewData) tmpVisions.push(window.visionOverviewData[n]);
            tmpVisions = AstralHelper.shuffleArray(tmpVisions)
        }
        return i = tmpVisions[tmpVisions.length - 1], tmpVisions.pop(), i
    }
    if (void 0 == pToIndex[e]) {
        if (0 == tmpVisions.length) {
            for (n in window.visionOverviewData) tmpVisions.push(window.visionOverviewData[n]);
            tmpVisions = AstralHelper.shuffleArray(tmpVisions)
        }
        pToIndex[e] = tmpVisions[tmpVisions.length - 1], tmpVisions.pop()
    }
    return pToIndex[e]
}

function updateVolume(e) {
    var t;
    globalVolume = e;
    for (t in sounds) setSoundVolume(t, sounds[t].volume)
}

function initAudio() {
    audioIsActive = !0;
    var e = getURIParameter("c");
    void 0 == e || null == e || "" == e ? (initSound("base_3_default", 0, !0), initSound("intro_claim", 0, !1), fadeSoundTo("base_3_default", 1)) : (initSound("base_3", 0, !0), initSound("intro_claim", 0, !1), fadeSoundTo("base_3", 1))
}

function fadeSoundTo(e, t) {
    if (!audioIsActive) return !1;
    var n = 0,
        i = sounds[e].volume,
        r = sounds[e].cntrl;
    sounds[e].int && clearInterval(sounds[e].int), i < t ? sounds[e].int = setInterval(function() {
        i += .01, i >= t && (clearInterval(sounds[e].int), sounds[e].int = !1), setSoundVolume(e, i)
    }, 16) : i > t && (sounds[e].int = setInterval(function() {
        i -= .01, i <= t && (clearInterval(sounds[e].int), sounds[e].int = !1), setSoundVolume(e, i)
    }, 16))
}

function setSoundVolume(e, t) {
    return !!audioIsActive && (sounds[e].cntrl.jPlayer("option", "volume", t * globalVolume), void(sounds[e].volume = t))
}

function makeHoverSound() {
    if (!audioIsActive) return !1
}

function makeClaimSound() {
    return !!audioIsActive && void playSound("intro_claim", 1)
}

function makeVisionHoverSound() {
    return !!audioIsActive && void playSound("hover", .15)
}

function playSound(e, t, n) {
    return !!audioIsActive && ("ease" != e && "boost" != e && void(sounds[e] ? (sounds[e].cntrl.jPlayer("option", "volume", t * globalVolume), sounds[e].cntrl.jPlayer("playHead", 0), sounds[e].cntrl.jPlayer("play")) : initSound(e, t, n)))
}

function pauseSound(e) {
    return !!audioIsActive && ("ease" != e && "boost" != e && void(sounds[e] && sounds[e].cntrl.jPlayer("pause")))
}

function replaySound(e) {
    return !!audioIsActive && ("ease" != e && "boost" != e && void(sounds[e] && sounds[e].cntrl.jPlayer("play")))
}

function initSound(e, t, n) {
    if (!audioIsActive) return !1;
    var i = $('<div class="sound" ></div>');
    sounds[e] = {
        cntrl: i,
        volume: t
    }, i.jPlayer({
        volume: t * globalVolume,
        ready: function() {
            $(this).jPlayer("setMedia", {
                mp3: "https://weareastral.s3.amazonaws.com/xmas/assets/sound/" + e + ".mp3"
            }).jPlayer("play")
        },
        loop: n
    })
}

function toggleVolume(e) {
    var t = !0;
    e.find(".muteBtn").length > 0 && e.find(".muteBtn").click(function() {
        1 == t ? ($("html").addClass("sound-inactive"), $("html").removeClass("sound-active"), $(this).html("&#xe901;"), updateVolume(0), t = !1, soundIsActiveGlobal = !1) : 0 == t && ($("html").removeClass("sound-inactive"), $("html").addClass("sound-active"), $(this).html("&#xe900;"), updateVolume(1), t = !0, soundIsActiveGlobal = !0)
    })
}

function addRandomVisions(e) {
    var t, n = 0,
        i = 12e3,
        r = i - n,
        o = r / randCount;
    for (t = 0; t < randCount; t++) createVisionPreview(e, n + o * t, n + o * (t + 1), t)
}

function clearExploreVisions() {
    return !1;
    var e;
    setVisionInactive(), $(".app-container").removeClass("noSelect");
    for (e in interactiveDots) three.removeFromScene(interactiveDots[e].obj), rndrHndlr.off(interactiveDots[e].id);
    interactiveDots = [], window.hammertime && (hammertime.destroy(), hammertime = null), window.parent && window.parent.postMessage && window.parent.postMessage("auto", "*")
}

function onHoverInVision(e) {
    var t;
    for (var n in interactiveDots) e.object === interactiveDots[n].obj && (t = interactiveDots[n]);
    activeHoverObj === t || (activeHoverObj && activeHoverObj !== t ? (setVisionInactive(activeHoverObj), setVisionActive(t)) : setVisionActive(t))
}

function onShowVision(e) {
    e.opacity = 1
}

function onHideVision(e) {
    e.opacity = 0
}

function onHoverOutVision() {
    setVisionInactive(activeHoverObj)
}

function setVisionActive(e) {
    activeHoverObj = e, activeHoverObj.opacity = 1, $(".dragExplore, .scrollExplore").css({
        cursor: "pointer"
    }), tSpeed = 0, $(".dragExplore, .scrollExplore").one("click", function() {
        window.blockClick || (tSpeed = 40, window.openAppURL("/vision/?id=" + activeHoverObj.clickID), setVisionInactive())
    }), makeVisionHoverSound()
}

function setVisionInactive() {
    activeHoverObj && (tSpeed = exploreBaseSpeed, activeHoverObj.opacity = 0, activeHoverObj = !1, $(".dragExplore, .scrollExplore").css({
        cursor: ""
    }), $(".dragExplore, .scrollExplore").off("click"))
}

function createVisionPreview(e, t, n, i) {
    setTimeout(function() {
        createVisionPreviewNow(e, t, n)
    }, 30 * i)
}

function createVisionPreviewNow(e, t, n) {
    var i = getVisionData(0, !0),
        r = createText(i.name, getCountryByCode(i.country)),
        o = getRandomParticle(e, t, n, -1, -1),
        a = window.mottoData[i.motto];
    if (o) {
        "red" == a.color ? o.particle.setTargetColor(210, 56, 37) : o.particle.setTargetColor(0, 111, 217);
        var s = e.getMesh(),
            l = "visionInfoPosSync_" + AstralHelper.uniqeID(),
            c = {
                id: l,
                obj: r,
                opacity: 0,
                cOpacity: 0,
                clickID: i.id
            };
        interactiveDots.push(c), rndrHndlr.loop(l, this, function() {
            var e = o.pos,
                t = s.position,
                n = {
                    x: e.x + t.x,
                    y: e.y + t.y,
                    z: e.z + t.z
                };
            r.position.x = n.x, r.position.y = n.y - 1.5, r.position.z = n.z, c.cOpacity != c.opacity && (c.cOpacity = AstralHelper.delayTo(c.cOpacity, c.opacity, 10), r.material.opacity = c.cOpacity, r.visible && 0 == c.cOpacity ? r.visible = !1 : !r.visible && c.cOpacity > 0 && (r.visible = !0))
        }), r.visible = !1, three.addToScene(r)
    }
}

function getRandomParticle(e, t, n, i, r) {
    var o, a, s, l, c;
    s = e.getMesh().position;
    for (o in e.particles)
        if (a = e.particles[o].getTargetPosition(), l = a, l.z >= t && l.z <= n && Math.abs(l.x) < maxCenterDistance && Math.abs(l.y) < maxCenterDistance) return {
            pos: a,
            particle: e.particles[o]
        }
}

function nearestPow2(e) {
    return Math.pow(2, Math.ceil(Math.log(e) / Math.log(2)))
}

function createText(e, t) {
    var n, i, r, o, a, s;
    i = {
        w: 4096,
        h: 1024,
        textspace: 100
    }, i = {
        w: 2056,
        h: 512,
        textspace: 50
    };
    var l = 1024,
        c = i.w / l;
    if (a = e + "____" + t, bmpCache[a]) s = bmpCache[a].bmp, i = bmpCache[a].dimenstions;
    else {
        s = document.createElement("canvas");
        var u = s.getContext("2d");
        s.width = i.w, s.height = i.h, u.font = 48 * c + "px BrownBold", u.fillStyle = "white", u.textAlign = "center", r = u.measureText(e).width, u.font = 48 * c + "px Arial", u.fillStyle = "white", u.textAlign = "center", o = u.measureText(t).width, o > r && (r = o), r += 2 * i.textspace, r = nearestPow2(r), i.w = r, s.width = i.w, u.moveTo(0, 0), u.fillStyle = "rgba(255,255,255,0.004)", u.fillRect(0, 0, i.w, i.h), u.font = 48 * c + "px BrownBold", u.fillStyle = "white", u.textAlign = "center", u.fillText(e, i.w / 2, i.h / 2 + 20 * c), u.font = 48 * c + "px Arial", u.fillStyle = "white", u.textAlign = "center", u.fillText(t, i.w / 2, i.h / 2 + 80 * c), bmpCache[a] = {
            bmp: s,
            dimenstions: i
        }
    }
    var h = new THREE.Texture(s);
    return h.needsUpdate = !0, n = new THREE.Mesh(new THREE.PlaneGeometry(i.w / 80, i.h / 80), new THREE.MeshBasicMaterial({
        map: h,
        transparent: !0,
        opacity: 1
    }))
}

function initExploreInteract(e, t) {
    interactiveDots = [], addRandomVisions(e), addRandomVisions(t);
    var n = Hammer($(document)[0], {
        threshold: 0
    });
    n.on("tap", function(e) {
        var t = e.center,
            n = new THREE.Vector2,
            i = window.devicePixelRatio ? window.devicePixelRatio : 1;
        n.x = t.x / $("#renderView").width() * 2 - 1, n.y = 2 * -(t.y / $("#renderView").height()) + 1;
        var r = new THREE.Raycaster;
        r.setFromCamera(n, camera);
        var o;
        for (var a in interactiveDots)
            if (o = r.intersectObject(interactiveDots[a].obj), o.length > 0 && 1 == interactiveDots[a].opacity) {
                window.openAppURL("/vision/?id=" + interactiveDots[a].clickID);
                break
            }
    })
}

function exploreFallbackIntro() {
    if (isAndroid || iOS || isWin || !Modernizr.video) exploreFallback();
    else {
        $("html").addClass("loading keepLoading");
        var e = new $.BigVideo;
        e.init(), $("html").hasClass("darkSide") ? e.show(window.assetURL + "/assets/videos/fallback_720_dark.mp4") : e.show(window.assetURL + "/assets/videos/fallback_720.mp4"), $(".contentWrapperControls").hide();
        var t = !1,
            n = e.getPlayer(),
            i = !1,
            r = !1;
        n.on("loadedmetadata", function() {
            i = !0, n.off("loadedmetadata"), o()
        }), n.on("timeupdate", function(e) {
            n.currentTime() > 0 && (n.off("timeupdate"), r = !0, o())
        });
        var o = function() {
            i && r && setTimeout(function() {
                t = !0, a(), $("html").removeClass("loading keepLoading"), $("#big-video-wrap").css("visibility", "visible")
            }, 200)
        };
        n.on("ended", function(t) {
            n.off("ended"), $(n.el_).velocity({
                properties: {
                    opacity: 0
                },
                options: {
                    duration: 300,
                    complete: function() {
                        e.dispose(), $(".contentWrapperControls").show(), exploreFallback()
                    }
                }
            })
        });
        var a = function() {
            $(".skipIntroButton").css({
                opacity: 0,
                display: "inline-block"
            }).velocity({
                properties: {
                    opacity: 1
                },
                options: {
                    duration: 800,
                    delay: 1e3
                }
            }).one("click", function() {
                return n.off("ended"), $(".contentWrapperControls").show(), $(".skipIntroButton").velocity({
                    properties: {
                        opacity: 0
                    },
                    options: {
                        duration: 500
                    }
                }), $(n.el_).velocity({
                    properties: {
                        opacity: 0
                    },
                    options: {
                        duration: 500,
                        complete: function() {
                            e.dispose(), exploreFallback()
                        }
                    }
                }), !1
            })
        }
    }
}

function exploreFallback() {
    $(".skipIntroButton").css({
        display: "none"
    }), $(".generateButton").css({
        marginBottom: "25px"
    }), $(".helper").css({
        display: "none"
    }), $(window).off("DOMMouseScroll mousewheel"), $(".content_explore").css({
        opacity: 0,
        display: "block"
    }).velocity({
        properties: {
            opacity: 1
        },
        options: {
            duration: 800,
            delay: 1e3
        }
    }), $(".visionGrid").remove();
    var e = $('<div class="visionGrid" ></div>'),
        t = $('<a href="#" class="astralButton" >Weitere Visionen</a>');
    t.css({
        margin: "auto",
        "margin-bottom": "30px"
    });
    var n = 0,
        i = function() {
            var i = fill2DVisions(e, n);
            i && t.remove(), n++
        };
    i(), t.on("click", function() {
        return i(), !1
    }), $(".content_explore").append(e), $(".content_explore").append(t), e.masonry({
        itemSelector: ".cVision",
        gutter: 15
    }), $(window).width() < 400 && $(".cVision").css({
        width: $(window).width() - 45 + "px !important"
    }), mainGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 13,
        opacity: 0
    }), mainGroup.setTargetPosition(0, 0, -5e3), secondGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 13,
        opacity: 0
    }), secondGroup.setTargetPosition(0, 0, -15e3), window.updateFallback = !0
}

function fill2DVisions(e, t) {
    var n = 12;
    t *= n;
    var i = t + n - 1,
        r = 0;
    for (o in window.visionOverviewData) r++;
    i >= r && (i = r - 1);
    var o, a, s, l;
    s = 0, a = 0;
    for (o in window.visionOverviewData) {
        if (s < t);
        else {
            if (s > i) break;
            l = window.visionOverviewData[o], $cVision = $('<div class="cVision inner_' + a % 12 + '" data-id="' + l.id + '" ><div class="innerBG" ></div><div class="infos">' + l.name + "</div></div>"), $cVision.css({
                opacity: 0
            }), $("<img />").data("ref", $cVision).data("img", l.img).load(function() {
                var e = $(this).data("ref"),
                    t = $(this).data("img");
                e.find(".innerBG").css("background-image", "url(" + t + ")"), e.velocity({
                    properties: {
                        opacity: 1
                    },
                    options: {
                        duration: 500,
                        delay: 100
                    }
                })
            }).attr("src", l.img), e.append($cVision), t > 0 && e.masonry("appended", $cVision), a++
        }
        s++
    }
    return t > 0 && e.masonry(), e.find(".cVision").one("click", function() {
        return window.openAppURL("/vision/?id=" + $(this).data("id")), !1
    }), window.parent && window.parent.postMessage && window.parent.postMessage("fallback-" + $(".content_explore").outerHeight(), "*"), setTimeout(function() {
        window.parent && window.parent.postMessage && window.parent.postMessage("fallback-" + $(".content_explore").outerHeight(), "*")
    }, 1e3), setTimeout(function() {
        window.parent && window.parent.postMessage && window.parent.postMessage("fallback-" + $(".content_explore").outerHeight(), "*")
    }, 3e3), i == r - 1
}

function hideHelper() {
    isHelperHidden || $(".helper").velocity({
        properties: {
            opacity: 0
        },
        options: {
            duration: 200,
            complete: function() {
                destroySpriteAnimation($(".helper").parent().parent()), $(".helper").remove()
            }
        }
    })
}

function exploreIntro() {
    $(window).off("DOMMouseScroll mousewheel"), $(".content_explore").css({
        opacity: 0
    }), window.lookAtZ = 800, window.lookAtStrength = 0;
    var e = 5,
        t = 10,
        n = 10,
        i = 1;
    $(".skipIntroButton").css({
        opacity: 0,
        display: "inline-block"
    }).velocity({
        properties: {
            opacity: 1
        },
        options: {
            duration: 800,
            delay: 3e3
        }
    }).one("click", function() {
        return y = 6, $(".skipIntroButton").velocity({
            properties: {
                opacity: 0
            },
            options: {
                duration: 200,
                complete: function() {
                    $(".skipIntroButton").css({
                        display: "none"
                    })
                }
            }
        }), !1
    });
    var r = 8;
    mainGroup.positionDelay = 0, secondGroup.positionDelay = 0, mainGroup.rotationDelay = t, secondGroup.rotationDelay = t, $("#renderView").css({
        opacity: 0
    }), setTimeout(function() {
        mainGroup.positionDelay = e, secondGroup.positionDelay = e, $("#renderView").velocity({
            properties: {
                opacity: 1
            },
            options: {
                duration: 800,
                delay: 20
            }
        })
    }, 100);
    var o = -600 - 800 * r,
        a = -600,
        s = 1e3 * r,
        l = s - o;
    mainGroup.setTargetRotation(0, 0, 0), mainGroup.setTargetPosition(0, 0, a), secondGroup.setTargetRotation(0, 0, 0), secondGroup.setTargetPosition(0, 0, o);
    var c = 1;
    (iOS || isAndroid || isWin) && (c = 3), mainGroup.setHandler("depthColor", {
        data: particles_intro_layer,
        modulo: 1,
        resModulo: c,
        delayMulti: 1,
        dotsize: 10,
        opacity: 0,
        scaleZ: 1.5 * r,
        colorFade: 1,
        colorDelay: 10,
        instant: !0
    }), secondGroup.setHandler("depthColor", {
        data: particles_intro_layer,
        modulo: 1,
        resModulo: c,
        delayMulti: 1,
        dotsize: 10,
        opacity: 0,
        scaleZ: 1.5 * r,
        scaleX: -1,
        colorFade: 1,
        colorDelay: 10,
        instant: !0
    });
    var u = 0;
    cSpeed = 80;
    var h = 1,
        d = secondGroup,
        p = mainGroup,
        f = function(e) {
            var t = (e - o) / ((a - o) / 100);
            return t < 0 ? t = 0 : t > 100 && (t = 100), t
        },
        m = -1,
        E = -1,
        g = a,
        v = o,
        y = 0,
        T = !1;
    tSpeed = cSpeed;
    var x = function(e) {
            if (e > 1 && hideClaim(), e < 7) addClaim(e);
            else {
                tSpeed = exploreBaseSpeed, T = !0;
                for (var t in window.visionOverviewData) break;
                return window.openAppURL("/vision/?id=" + t), addClickAction(), $(".skipIntroButton").velocity({
                    properties: {
                        opacity: 0
                    },
                    options: {
                        duration: 200,
                        complete: function() {
                            $(".skipIntroButton").css({
                                display: "none"
                            })
                        }
                    }
                }), !1;
                if (makeDesktopPinch) {
                    $(".content_explore").parent().append('<div class="dragExplore"></div>'), $(".generateButton").css({
                        position: "relative",
                        zIndex: "1"
                    }), window.hammertime = Hammer($(document)[0], {
                        threshold: 0
                    }), hammertime.get("pan").set({
                        direction: Hammer.DIRECTION_VERTICAL
                    });
                    var n, i, r = $(".content_explore"),
                        o = !0,
                        a;
                    window.blockClick = !1, hammertime.on("panstart panend panup pandown", function(e) {
                        if ("panstart" == e.type) return n = 0, hideHelper(), o && (clearTimeout(a), o = !1, r.velocity("stop").velocity({
                            properties: {
                                opacity: 0
                            },
                            options: {
                                duration: 500,
                                delay: 0,
                                complete: function() {
                                    r.css({
                                        display: "none"
                                    })
                                }
                            }
                        })), !1;
                        if ("panend" == e.type) return o || (clearTimeout(a), a = setTimeout(function() {
                            o = !0, r.css({
                                display: "block"
                            }), r.velocity("stop").velocity({
                                properties: {
                                    opacity: 1
                                },
                                options: {
                                    duration: 500,
                                    delay: 0
                                }
                            })
                        }, 1500)), !1;
                        i == e.type || e.isFirst || (n = e.deltaY);
                        var t = e.deltaY - n;
                        n = e.deltaY, i = e.type, h = "panup" == i ? 1 : -1, u += 10 * t
                    }), $(".dragExplore").on("mousemove", function(e) {
                        b.x = e.pageX, b.y = e.pageY, w.x = e.clientX / $("#renderView").width() * 2 - 1, w.y = 2 * -(e.clientY / $("#renderView").height()) + 1
                    })
                } else if (usePinch) {
                    $(".content_explore").parent().append('<div class="scrollExplore"></div>'), window.hammertime = Hammer($(".scrollExplore")[0], {
                        threshold: 0
                    }), hammertime.get("pan").set({
                        direction: Hammer.DIRECTION_VERTICAL
                    });
                    var n, i, r = $(".content_explore"),
                        o = !0,
                        a;
                    hammertime.on("panstart panend panup pandown", function(e) {
                        if ("panstart" == e.type) return n = 0, hideHelper(), o && (clearTimeout(a), o = !1, r.velocity("stop").velocity({
                            properties: {
                                opacity: 0
                            },
                            options: {
                                duration: 500,
                                delay: 0,
                                complete: function() {
                                    r.css({
                                        display: "none"
                                    })
                                }
                            }
                        })), e.preventDefault(), !1;
                        if ("panend" == e.type) return o || (clearTimeout(a), a = setTimeout(function() {
                            o = !0, r.css({
                                display: "block"
                            }), r.velocity("stop").velocity({
                                properties: {
                                    opacity: 1
                                },
                                options: {
                                    duration: 500,
                                    delay: 0
                                }
                            })
                        }, 1500)), e.preventDefault(), !1;
                        i == e.type || e.isFirst || (n = e.deltaY);
                        var t = e.deltaY - n;
                        return n = e.deltaY, i = e.type, h = "panup" == i ? 1 : -1, u += t * -10, e.preventDefault(), !1
                    })
                } else $(".content_explore").parent().append('<div class="scrollExplore"></div>'), $(".scrollExplore").hover(function() {
                    window.parent.postMessage("disable-scroll", "*")
                }, function() {
                    window.parent.postMessage("enable-scroll", "*")
                }), $(".scrollExplore").on("DOMMouseScroll mousewheel", function(e) {
                    var t;
                    void 0 != e.originalEvent.deltaY ? t = e.originalEvent.deltaY : void 0 != e.originalEvent.detail && (t = e.originalEvent.detail), Math.abs(t) < 20 ? t = t < 0 ? -20 : 20 : Math.abs(t) > 80 && (t = t < 0 ? -80 : 80), t *= -1, u += t, hideHelper(), h = t > 0 ? 1 : -1, e = e || window.event, e.preventDefault && e.preventDefault(), e.returnValue = !1
                });
                window.lookAtStrength = 1.5
            }
        },
        R = new THREE.Raycaster;
    R.near = 100, R.far = 1400;
    var w = new THREE.Vector2,
        b = {
            x: -1,
            y: -1
        };
    $(window).on("mousemove", function(e) {
        b.x = e.pageX, b.y = e.pageY, w.x = e.clientX / $("#renderView").width() * 2 - 1, w.y = 2 * -(e.clientY / $("#renderView").height()) + 1
    });
    var H = u;
    rndrHndlr.loop("exploreLoop", this, function() {
        cSpeed = AstralHelper.delayTo(cSpeed, tSpeed, speedDelay), H = u, u += cSpeed;
        var t = v + u,
            n = g + u,
            r;
        1 == h && n > s ? (r = p, p = d, d = r, r = g, g = v, v = r, v -= l, t = v + u, n = g + u, d.setZ(t), d.setOpacity(0), E = 0, y++, y < 8 && x(y)) : h == -1 && t < o && (r = p, p = d, d = r, r = g, g = v, v = r, g += l, t = v + u, n = g + u, p.setZ(n), p.setOpacity(1), m = 100);
        var a = f(n),
            c = f(t);
        if (m != a && (p.setTargetOpacity(a / 100), m = a), E != c && (d.setTargetOpacity(c / 100), E = c), activeClaim && !T)
            if (isSlowingDown && activeClaim.position.z < 4e3) {
                var b = activeClaim.position.z + 3e3,
                    S = b / 70;
                tSpeed = cSpeed = 5 + .7 * (100 - S)
            } else activeClaim.position.z >= 4250 ? (tSpeed = 80, isSlowingDown = !1) : activeClaim.position.z >= 3e3 && !isSlowingDown && (makeClaimSound(), isSlowingDown = !0);
        if (p.setTargetZ(n), d.setTargetZ(t), makeDesktopPinch || !usePinch) {
            R.setFromCamera(w, camera);
            var _ = !1;
            for (var M in interactiveDots)
                if (intersects = R.intersectObject(interactiveDots[M].obj), intersects.length > 0) {
                    var C = 1e7,
                        A = -1;
                    for (var P in intersects) intersects[P].distance < C && (C = intersects[P].distance, A = P);
                    onHoverInVision(intersects[A]), _ = !0;
                    break
                }
            _ || onHoverOutVision()
        }
        if (autoHover) {
            var M;
            for (var M in interactiveDots) interactiveDots[M].obj.position.z > 4e3 && interactiveDots[M].obj.position.z < 4800 ? interactiveDots[M].isActive || (interactiveDots[M].isActive = !0, onShowVision(interactiveDots[M])) : interactiveDots[M].isActive && (interactiveDots[M].isActive = !1, onHideVision(interactiveDots[M]))
        }
        activeClaim && (activeClaim.material.opacity = AstralHelper.delayTo(activeClaim.material.opacity, i, 80), activeClaim.position.z = AstralHelper.delayTo(activeClaim.position.z, n, e), camera.rotation.z = AstralHelper.delayTo(100 * camera.rotation.z, 100 * camRotation, claimRotationDelay) / 100)
    })
}

function exploreScroll() {
    return !1;
    callAniExplore($3dTrigger), $(".skipIntroButton").css({
        display: "none"
    }), $(window).off("DOMMouseScroll mousewheel"), $(".content_explore").css({
        opacity: 0,
        display: "block"
    }).velocity({
        properties: {
            opacity: 1
        },
        options: {
            duration: 800,
            delay: 1e3
        }
    }), window.lookAtZ = 800, window.lookAtStrength = 1.5;
    var e = 15,
        t = 10,
        n = 10,
        i = 1,
        r = 8;
    mainGroup.positionDelay = e, mainGroup.rotationDelay = t, secondGroup.positionDelay = e, secondGroup.rotationDelay = t;
    var o = -600 - 800 * r,
        a = -600,
        s = 1e3 * r,
        l = s - o;
    mainGroup.setTargetRotation(0, 0, 0), mainGroup.setTargetPosition(0, 0, a), secondGroup.setTargetRotation(0, 0, 0), secondGroup.setTargetPosition(0, 0, o), mainGroup.setHandler("depthColor", {
        data: particles_intro_layer,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1,
        scaleZ: 1.5 * r,
        colorFade: 1,
        colorDelay: 10
    }), secondGroup.setHandler("depthColor", {
        data: particles_intro_layer,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1,
        scaleZ: 1.5 * r,
        scaleX: -1,
        colorFade: 1,
        colorDelay: 10
    });
    var c = 0;
    cSpeed = exploreBaseSpeed;
    var u = 1,
        h = secondGroup,
        d = mainGroup;
    initExploreInteract(d, h);
    var p = function(e) {
            var t = (e - o) / ((a - o) / 100);
            return t < 0 ? t = 0 : t > 100 && (t = 100), t
        },
        f = -1,
        m = -1,
        E = a,
        g = o,
        v = 0;
    tSpeed = cSpeed;
    var y = new THREE.Raycaster;
    y.near = 100, y.far = 1400;
    var T = new THREE.Vector2,
        x = {
            x: -1,
            y: -1
        };
    if (makeDesktopPinch) {
        $(".content_explore").parent().append('<div class="dragExplore"></div>'), $(".generateButton").css({
            position: "relative",
            zIndex: "1"
        }), window.hammertime = Hammer($(document)[0], {
            threshold: 0
        }), hammertime.get("pan").set({
            direction: Hammer.DIRECTION_VERTICAL
        });
        var R, w, b = $(".content_explore"),
            H = !0,
            S;
        window.blockClick = !1, hammertime.on("panstart panend panup pandown", function(e) {
            if ("panstart" == e.type) return R = 0, hideHelper(), H && (clearTimeout(S), H = !1, b.velocity("stop").velocity({
                properties: {
                    opacity: 0
                },
                options: {
                    duration: 500,
                    delay: 0,
                    complete: function() {
                        b.css({
                            display: "none"
                        })
                    }
                }
            })), !1;
            if ("panend" == e.type) return H || (clearTimeout(S), S = setTimeout(function() {
                H = !0, b.css({
                    display: "block"
                }), b.velocity("stop").velocity({
                    properties: {
                        opacity: 1
                    },
                    options: {
                        duration: 500,
                        delay: 0
                    }
                })
            }, 1500)), !1;
            w == e.type || e.isFirst || (R = e.deltaY);
            var t = e.deltaY - R;
            R = e.deltaY, w = e.type, c += 10 * t
        }), $(".dragExplore").on("mousemove", function(e) {
            x.x = e.pageX, x.y = e.pageY, T.x = e.clientX / $("#renderView").width() * 2 - 1, T.y = 2 * -(e.clientY / $("#renderView").height()) + 1
        })
    } else if (usePinch) {
        $(".content_explore").parent().append('<div class="scrollExplore"></div>'), window.hammertime = Hammer($(".scrollExplore")[0], {
            threshold: 0
        }), hammertime.get("pan").set({
            direction: Hammer.DIRECTION_VERTICAL
        });
        var R, w, b = $(".content_explore"),
            H = !0,
            S;
        hammertime.on("panstart panend panup pandown", function(e) {
            if ("panstart" == e.type) return R = 0, hideHelper(), H && (clearTimeout(S), H = !1, b.velocity("stop").velocity({
                properties: {
                    opacity: 0
                },
                options: {
                    duration: 500,
                    delay: 0,
                    complete: function() {
                        b.css({
                            display: "none"
                        })
                    }
                }
            })), !1;
            if ("panend" == e.type) return H || (clearTimeout(S), S = setTimeout(function() {
                H = !0, b.css({
                    display: "block"
                }), b.velocity("stop").velocity({
                    properties: {
                        opacity: 1
                    },
                    options: {
                        duration: 500,
                        delay: 0
                    }
                })
            }, 1500)), !1;
            w == e.type || e.isFirst || (R = e.deltaY);
            var t = e.deltaY - R;
            return R = e.deltaY, w = e.type, u = "panup" == w ? 1 : -1, c += t * -10, e.preventDefault(), !1
        })
    } else $(".content_explore").parent().append('<div class="scrollExplore"></div>'), $(".scrollExplore").hover(function() {
        window.parent.postMessage("disable-scroll", "*")
    }, function() {
        window.parent.postMessage("enable-scroll", "*")
    }), $(".scrollExplore").on("DOMMouseScroll mousewheel", function(e) {
        var t;
        void 0 != e.originalEvent.deltaY ? t = e.originalEvent.deltaY : void 0 != e.originalEvent.detail && (t = e.originalEvent.detail), Math.abs(t) < 20 ? t = t < 0 ? -20 : 20 : Math.abs(t) > 80 && (t = t < 0 ? -80 : 80), t *= -1, hideHelper(), u = t > 0 ? 1 : -1, c += t, e = e || window.event, e.preventDefault && e.preventDefault(), e.returnValue = !1
    }), $(window).on("mousemove", function(e) {
        x.x = e.pageX, x.y = e.pageY, T.x = e.clientX / $("#renderView").width() * 2 - 1, T.y = 2 * -(e.clientY / $("#renderView").height()) + 1
    });
    rndrHndlr.loop("exploreLoop", this, function() {
        cSpeed = AstralHelper.delayTo(cSpeed, tSpeed, speedDelay), c += cSpeed;
        var t = g + c,
            n = E + c,
            r;
        1 == u && n > s ? (r = d, d = h, h = r, r = E, E = g, g = r, g -= l, t = g + c, n = E + c, h.setZ(t), h.setOpacity(0), m = 0) : u == -1 && t < o && (r = d, d = h, h = r, r = E, E = g, g = r, E += l, t = g + c, n = E + c, d.setZ(n), d.setOpacity(1), f = 100);
        var a = p(n),
            v = p(t);
        if (f != a && (d.setTargetOpacity(a / 100), f = a), m != v && (h.setTargetOpacity(v / 100), m = v), d.setTargetZ(n), h.setTargetZ(t), makeDesktopPinch || !usePinch) {
            y.setFromCamera(T, camera);
            var x = !1;
            for (var R in interactiveDots)
                if (intersects = y.intersectObject(interactiveDots[R].obj), intersects.length > 0) {
                    var w = 1e7,
                        b = -1;
                    for (var H in intersects) intersects[H].distance < w && (w = intersects[H].distance, b = H);
                    onHoverInVision(intersects[b]), x = !0;
                    break
                }
            x || onHoverOutVision()
        }
        if (autoHover) {
            var R;
            for (var R in interactiveDots) interactiveDots[R].obj.position.z > 4e3 && interactiveDots[R].obj.position.z < 4800 ? interactiveDots[R].isActive || (interactiveDots[R].isActive = !0, onShowVision(interactiveDots[R])) : interactiveDots[R].isActive && (interactiveDots[R].isActive = !1, onHideVision(interactiveDots[R]))
        }
        activeClaim && (activeClaim.material.opacity = AstralHelper.delayTo(activeClaim.material.opacity, i, 80), activeClaim.position.z = AstralHelper.delayTo(activeClaim.position.z, n, e))
    })
}

function initUpload(e) {
    if (0 == e.find("#myAwesomeDropzone").length) return !1;
    window.sessionID = guid(), window.webcam_image = void 0, void 0 != dropper && (dropper.destroy(), e.find("#myAwesomeDropzone").show()), Dropzone.options.myAwesomeDropzone = {
        paramName: "file",
        maxFilesize: 2.5,
        maxFiles: 1,
        parallelUploads: 1,
        autoProcessQueue: !0,
        acceptedFiles: ".png,.jpg,.jpeg",
        init: function() {
            this.on("addedfile", function() {
                $("#myAwesomeDropzone").hide(), window.isFileUpload = !0, window.openAppURL("/processing")
            })
        }
    }, dropper = new Dropzone("#myAwesomeDropzone");
    var t = !1;
    dropper.on("error", function() {
        return !t && (t = !0, dropper.off("success"), dropper.off("error"), dropper.off("canceled"), void window.openAppURL("/upload-error"))
    }), dropper.on("success", function() {
        return !t && (t = !0, dropper.off("success"), dropper.off("error"), dropper.off("canceled"), void(void 0 != window.onUploadSuccess ? window.onUploadSuccess() : setTimeout(function() {
            void 0 != window.onUploadSuccess && window.onUploadSuccess()
        }, 2e3)))
    }), dropper.on("canceled", function() {
        return !t && (t = !0, dropper.off("success"), dropper.off("error"), dropper.off("canceled"), void window.openAppURL("/upload-error"))
    })
}

function initSaveForm(e, t) {
    function n(e) {
        var t = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        return t.test(e)
    }

    function i(e) {
        var t, n;
        for (t in window.countryData)
            if (n = window.countryData[t].name.toLowerCase(), n == e) return {
                valid: !0,
                code: window.countryData[t].code
            };
        return {
            valid: !1
        }
    }
    if (null != e && e.find(".content_generate_save").length > 0 && (t.find(".terms").off("click"), t.find(".checkButton").off("click")), isAndroid) {
        var r = "closed",
            o = "closed";
        $("input[type=text], textarea").bind("focus", function(e) {
            r = "open", setTimeout(function() {
                a()
            }, 100)
        }), $("input[type=text], textarea").bind("blur", function(e) {
            r = "closed", setTimeout(function() {
                a()
            }, 100)
        });
        var a = function() {
            r != o && (o = r, "open" == r ? $(".info h2, .closeBtn").hide() : $(".info h2, .closeBtn").show())
        }
    }
    if (t.find(".content_generate_save").length > 0) {
        void 0 == window.activeMotto && (window.activeMotto = mottoData[0]), t.find(".preloader, .loaderInfo").css({
            opacity: 0,
            display: "none"
        }), t.find(".checkButton").on("click", function() {
            return $(this).toggleClass("checked"), !1
        });
        var s = t.find(".form_country");
        window.onCountryDataLoaded = function(e) {
            console.log("data", e)
        }, s.easyAutocomplete({
            data: window.countryData,
            getValue: "name",
            list: {
                match: {
                    enabled: !0
                },
                showAnimation: {
                    type: "slide",
                    time: 200,
                    callback: function() {}
                },
                hideAnimation: {
                    type: "slide",
                    time: 200,
                    callback: function() {}
                },
                maxNumberOfElements: 6
            },
            theme: "square"
        }), t.find(".terms").on("click", function() {
            if (console.log("open terms", iOS, isAndroid, isWin), !iOS && !isAndroid && !isWin) return window.allowCameraTouch = !1, t.find(".termsInfoWrapper").css({
                opacity: 0,
                display: "table"
            }).velocity({
                properties: {
                    opacity: 1
                },
                options: {
                    duration: 300
                }
            }), !1
        }), t.find(".termsInfoWrapper .bg, .termsInfoWrapper .closer").on("click", function() {
            return window.allowCameraTouch = !0, t.find(".termsInfoWrapper").velocity({
                properties: {
                    opacity: 0
                },
                options: {
                    duration: 300,
                    complete: function() {
                        t.find(".termsInfoWrapper").css({
                            opacity: 0,
                            display: "none"
                        })
                    }
                }
            }), !1
        }), t.find(".mottoHolder h4").html(activeMotto.mottoText);
        var l = function() {
            var e = !0,
                r = t.find(".form_name"),
                o = t.find(".form_mail"),
                a = t.find(".form_country"),
                s = t.find(".checkButton"),
                l = r.val(),
                c = o.val(),
                u = $.trim(a.val().toLowerCase()),
                h = s.hasClass("checked");
            l.length < 1 ? (e = !1, r.addClass("invalid")) : r.hasClass("invalid") && r.removeClass("invalid"), n(c) ? o.hasClass("invalid") && o.removeClass("invalid") : (e = !1, o.addClass("invalid"));
            var d = i(u);
            return d.valid ? a.hasClass("invalid") && a.removeClass("invalid") : (e = !1, a.addClass("invalid")), h ? s.hasClass("invalid") && s.removeClass("invalid") : (e = !1, s.addClass("invalid")), {
                valid: e,
                country: d
            }
        };
        t.find(".saveButton").on("click", function() {
            var e = l();
            return e.valid && (t.find(".preloader, .loaderInfo").css({
                opacity: 0,
                display: "block"
            }).animate({
                opacity: 1
            }, 250), t.find(".toHide").animate({
                opacity: 0
            }, 250), t.find(".saveButton").off("click").animate({
                opacity: 0
            }, 300, function() {
                var n = mainGroup.getCSV() + "\n" + secondGroup.getCSV();
                $.ajax({
                    dataType: "json",
                    method: "POST",
                    data: {
                        sid: sessionID,
                        csv: n,
                        png: three.saveStill(),
                        motto: activeMotto.id,
                        name: t.find(".form_name").val(),
                        mail: t.find(".form_mail").val(),
                        country: e.country.code
                    },
                    url: "#",
                    complete: function(e) {
                        console.log("on send", e), void 0 != e && void 0 != e.responseJSON && 1 == e.responseJSON.success ? window.openAppURL("/finished") : window.openAppURL("/save-error")
                    }
                })
            })), !1
        })
    }
}

function initModifyVision(e, t) {
    function n(e, t) {
        rhndlr.render("modifyDragUpdate", this, function() {
            var t = e.position().top / (a / 100);
            if (e.hasClass("drag1")) window.updateColor(t);
            else if (e.hasClass("drag2")) {
                var n = 10,
                    i = 30;
                t < 34 && 1 != f ? (f = 1, mainGroup.updateHandlerParam("resModulo", f * window.baseModulo, !0)) : t >= 34 && t < 66 && 2 != f ? (f = 2, mainGroup.updateHandlerParam("resModulo", f * window.baseModulo, !0)) : t >= 66 && 3 != f && (f = 3, mainGroup.updateHandlerParam("resModulo", f * window.baseModulo, !0));
                var r = getBetween(n, i, t);
                mainGroup.setTargetDotSize(r), secondGroup.setTargetDotSize(r)
            } else if (e.hasClass("drag3")) {
                var n = 0,
                    i = 1;
                secondGroup.updateHandlerParam("morph", getBetween(n, i, t), !0)
            } else if (e.hasClass("drag4")) {
                var n = -5,
                    i = 5;
                secondGroup.updateHandlerParam("scaleZ", getBetween(n, i, 100 - t), !0)
            } else if (e.hasClass("drag5")) {
                var o = 2 * window.maxRotate / 100 * t - window.maxRotate;
                mainGroup.setTargetRotation(0, o, 0), secondGroup.setTargetRotation(0, o, 0)
            } else e.hasClass("drag6") && (console.log(t / 100, t / 110), mainGroup.updateHandlerParam("colorFade", t / 110, !0));
            window.updateFallback = !0
        })
    }

    function i() {
        y.clearRect(0, 0, y.canvas.width * v, y.canvas.height * v);
        var e = y.createLinearGradient(0, 0, ($(T[0]).offset().left + 13) * v, 0);
        e.addColorStop(0, "rgba(198,198,198,0)"), e.addColorStop(1, "rgba(198,198,198,1)"), y.strokeStyle = e, y.beginPath(), y.moveTo(0, 350 * v), T.each(function(e, t) {
            var n = $(t),
                i = {
                    x: n.offset().left + 13,
                    y: n.position().top + 33 + 250
                };
            i.x = i.x * v, i.y = i.y * v, y.lineTo(i.x, i.y)
        });
        var t = $(T[T.length - 1]).offset().left + 13,
            n = $(T[T.length - 1]).position().top + 33 + 250,
            i = $(window).width();
        y.stroke(), y.beginPath(), y.moveTo(t * v, n * v), e = y.createLinearGradient(t * v, 0, i * v, 0), e.addColorStop(0, "rgba(198,198,198,1)"), e.addColorStop(1, "rgba(198,198,198,0)"), y.strokeStyle = e, y.lineTo(i * v, 200 * v), y.stroke()
    }
    if (t.find(".content_generate_modify").length > 0) {
        var r = -67,
            o = 52,
            a = o - r,
            s = window.colorPercent,
            l = Math.round(getBetween(r, o, s)),
            c = Math.round(getBetween(r, o, 100 - s)),
            u = Math.round(getBetween(r, o, 20)),
            h = Math.round(getBetween(r, o, 50)),
            d = Math.round(getBetween(r, o, 33.9)),
            p = Math.round(getBetween(r, o, 0));
        t.find(".dragButton.drag1").css({
            top: l
        }), t.find(".dragButton.drag2").css({
            top: d
        }), t.find(".dragButton.drag3").css({
            top: p
        }), t.find(".dragButton.drag4").css({
            top: h
        }), t.find(".dragButton.drag5").css({
            top: c
        }), t.find(".dragButton.drag6").css({
            top: u
        }), t.find(".dragButton").draggabilly({
            axis: "y",
            containment: ".dragButtonHolder"
        });
        var f = 1,
            m;
        t.find(".dragButton").on("dragMove", function(e, t, r) {
            i();
            var o = $(this);
            null != m && (clearTimeout(m), m = null), window.useFallback || n(o, r)
        }).on("dragStart", function() {
            makeHoverSound()
        }), t.find(".dragButton").on("dragEnd", function(e, t, r) {
            i();
            var o = $(this);
            null != m && (clearTimeout(m), m = null), n(o, r)
        }), t.find(".dragButton").on("dragStart", function(e, t, n) {
            $(".dragLabel").stop().html($(this).find(".label").html()).animate({
                opacity: 1
            }, 300, function() {
                $(".dragLabel").delay(700).animate({
                    opacity: 0
                }, 300)
            })
        });
        var E = t.find(".dragButtonBackground"),
            g = E.find("canvas"),
            v = window.devicePixelRatio ? window.devicePixelRatio : 1;
        0 == g.length && (g = $('<canvas width="' + E.width() * v + '" height="' + E.height() * v + '" ></canvas>'), g.css({
            width: "100%",
            height: "100%"
        }), E.append(g));
        var y = g[0].getContext("2d"),
            T = t.find(".dragButton");
        y.strokeStyle = "#c6c6c6", y.lineJoin = "round", y.lineWidth = 0;
        var x = ResizeHandler.getInstance();
        x.onResize(this, function(e, t) {
            g.attr("width", e * v), i()
        }), window.draw = i, i()
    }
}

function initMottoSelector(e, t) {
    var n = !1,
        i = function(e) {
            var t, i;
            window.activeMotto = mottoData[e], i = 0, window.useFallback && (i = 1500, n && (clearTimeout(n), n = !1), $("html").addClass("loading")), n = setTimeout(function() {
                n = !1, window.useGeneric && void 0 != mainGroup && (t = e % 2 == 0 ? 2 : 1, window.baseModulo = t, mainGroup.setHandler("depthColor", {
                    data: particles_generic_face[e % 2],
                    resModulo: t,
                    modulo: 1,
                    delayMulti: .3,
                    dotsize: 10,
                    opacity: 1
                })), "red" == window.activeMotto.color ? window.updateColor(0) : window.updateColor(100), void 0 != mainGroup && mainGroup.setTargetRotation(0, window.maxRotate * window.activeMotto.rotate, 0), void 0 != secondGroup && secondGroup.setTargetRotation(0, window.maxRotate * window.activeMotto.rotate, 0), window.updateFallback = !0, window.useFallback && $("html").removeClass("loading")
            }, i)
        };
    if (t.find(".content_generate_motto").length > 0) {
        var r = t.find(".mottoSlider");
        r.flickity({
            cellAlign: "center",
            wrapAround: !0,
            contain: !0
        }), flkty = r.data("flickity");
        var o = r.find(".mottoElement").length;
        i(0), r.on("cellSelect", function(e) {
            i(flkty.selectedIndex)
        }), r.velocity({
            properties: {
                opacity: 1
            },
            options: {
                duration: 300
            }
        })
    }
}

function initProcessing(e, t) {
    t.find(".content_generate_processing").length > 0 ? (playSound("boost", 0, !0), fadeSoundTo("boost", .2), void 0 != window.webcam_image ? uploadBaseImage(window.webcam_image) : void 0 != dropper ? window.onUploadSuccess = function() {
        loadAndShowFace()
    } : window.openAppURL("/processing-error")) : window.onUploadSuccess = void 0
}

function uploadBaseImage(e) {
    var t = e.replace(/^data:image\/(png|jpeg);base64,/, "");
    $.ajax({
        dataType: "json",
        method: "POST",
        data: {
            img: t
        },
        url: "#",
        complete: function(e) {
            showFace(e.responseText)
        }
    })
}

function loadAndShowFace(e) {
    e && (window.sessionID = e), $.ajax({
        dataType: "json",
        url: "#" + window.sessionID,
        complete: function(e) {
            showFace(e.responseText)
        }
    })
}

function showFace(e) {
    try {
        var t = $.parseJSON(e),
            n = "true" == t.success
    } catch (e) {
        var n = !1
    }
    fadeSoundTo("boost", 0), n ? (mainGroup.setHandler("depthColor", {
        data: t,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1,
        colorFade: .2
    }), window.openAppURL("/check")) : void 0 != t && "no face" == t.message ? window.openAppURL("/processing-face-error") : window.openAppURL("/processing-error")
}

function initDynBG() {
    function e(e, o) {
        return !1;
        if (i && 0 == n && 0 == e && ($("#scene").parallax(), r = !0, i = !1), n != e) {
            0 == n ? $("#scene").parallax("disable") : 0 == e && (r ? $("#scene").parallax("enable") : ($("#scene").parallax(), r = !0));
            var a = $(t[n]),
                s = $(t[e]);
            s.css({
                opacity: 0,
                zIndex: 2
            }).velocity({
                opacity: 1
            }, {
                duration: o,
                complete: function() {
                    a.css({
                        opacity: 0
                    }), s.css({
                        zIndex: 1
                    })
                }
            }), n = e
        }
    }
    var t = $("#global-background .bg-layer"),
        n = 0,
        i = !0,
        r = !1;
    stepZero = function(t, n) {
        e(0, t)
    }, stepOne = function(t, n) {
        e(1, t)
    }, stepTwo = function(t, n) {
        e(2, t)
    }, stepThree = function(t, n) {
        e(3, t)
    }
}

function initWebcam(e, t) {
    null != e && e.find(".content_generate_webcam").length > 0 && (e.find(".webcamHolder .webcamOutlines").css({
        opacity: 0,
        display: "none"
    }), e.find(".takephoto").css({
        opacity: .5,
        cursor: "default"
    }).off("click"), Webcam.off("error"), Webcam.off("live"), Webcam.reset()), t.find(".content_generate_webcam").length > 0 && (window.webcam_image = void 0, window.sessionID = guid(), Webcam.setSWFLocation(assetURL + "/assets/swf/webcam.swf"), Webcam.set({
        width: 588,
        height: 441,
        image_format: "jpeg",
        jpeg_quality: 90,
        flip_horiz: !Webcam.detectFlash(),
        force_flash: Webcam.detectFlash()
    }), Webcam.on("error", function(e) {
        window.openAppURL("/webcam-error")
    }), Webcam.on("live", function() {
        t.find(".webcamHolder .webcamOutlines").css({
            opacity: 0,
            display: "block"
        }).velocity({
            properties: {
                opacity: 1
            },
            options: {
                duration: 300
            }
        }), t.find(".takephoto").css({
            opacity: .5,
            cursor: "auto"
        }).velocity({
            properties: {
                opacity: 1
            },
            options: {
                duration: 300
            }
        }).on("click", function() {
            return Webcam.snap(function(e) {
                window.webcam_image = e, window.openAppURL("/processing")
            }), !1
        })
    }), Webcam.attach("#videoStream"))
}

function makeUIAnimation(e) {
    e.find(".content_weiche").length > 0 && callAniSwitch(e), e.find(".content_explore").length > 0, e.find(".content_generate_select").length > 0, e.find(".content_generate_check").length > 0 && callAniGenerateCheck(e), e.find(".content_generate_motto").length > 0 && callAniGenerateMotto(e), e.find(".content_generate_modify").length > 0 && callAniGenerateModify(e), e.find(".content_generate_save").length > 0 && callAniGenerateSave(e), e.find(".content_generate_finished").length > 0 && callAniGenerateFinished(e)
}

function callAniSwitch(e) {}

function callAniExplore(e) {
    var t = e.find("h2"),
        n = e.find("h4");
    $generateBtn = e.find(".generateButton"), $srlIndicator = e.find(".helper"), $srlIndicator.find(".helper").delay(300).velocity({
        opacity: 1
    }), t.css({
        opacity: 0
    }), n.css({
        opacity: 0
    }), $generateBtn.css({
        opacity: 0
    }), t.delay(600).velocity("transition.slideUpBigIn", 800), n.delay(1200).velocity("transition.slideUpBigIn", 800), $generateBtn.delay(1800).velocity("transition.expandIn", 800)
}

function callAniGenerateSelect(e) {
    if (window.isMobileDevice) return e.find(".helper").delay(300).velocity({
        opacity: 1
    }, {
        display: "block"
    }).delay(4e3).velocity({
        opacity: 0
    }, {
        display: "none"
    }), !1;
    playSound("ease", 0, !1), fadeSoundTo("ease", .4);
    var t = e.find("h2"),
        n = e.find("h4");
    $webcam = e.find(".webcam"), $upload = e.find(".upload"), $progressElm = e.find(".progress .element"), $skipUploadButton = e.find(".skipUploadButton"), t.css({
        opacity: 0
    }), n.css({
        opacity: 0
    }), $webcam.css({
        opacity: 0
    }), $upload.css({
        opacity: 0
    }), $progressElm.css({
        width: 0
    }), $skipUploadButton.css({
        opacity: 0
    }), t.delay(1200).velocity("transition.slideUpBigIn", 800), n.delay(1600).velocity("transition.slideUpBigIn", 800), $progressElm.delay(1400).velocity("transition.stretchIn", {
        stagger: 400
    }), $webcam.delay(3200).velocity("transition.expandIn", 1200), $upload.delay(3200).velocity("transition.expandIn", 600), $skipUploadButton.delay(3600).velocity("transition.fadeIn", 2500)
}

function callAniGenerateCheck(e) {
    if (window.isMobileDevice) return e.find(".helper").delay(4e3).velocity({
        opacity: 0
    }, {
        display: "none"
    }), !1
}

function callAniGenerateMotto(e) {
    if (window.isMobileDevice) return e.find(".helper").delay(4e3).velocity({
        opacity: 0
    }), !1;
    var t = e.find("h2"),
        n = e.find("h4");
    t.css({
        opacity: 0
    }), n.css({
        opacity: 0
    }), t.delay(1200).velocity("transition.slideUpBigIn", 800), n.delay(1600).velocity("transition.slideUpBigIn", 800)
}

function callAniGenerateModify(e) {
    if (window.isMobileDevice) return e.find(".helper").delay(4e3).velocity({
        opacity: 0
    }, {
        display: "none"
    }), !1;
    var t = e.find("h2"),
        n = e.find("h4");
    $dragWrapper = e.find(".dragButtonHolder,.dragButtonBackground"), $dragButton = e.find(".dragButton"), $dragWrapper.css({
        opacity: 0
    }), t.css({
        opacity: 0
    }), n.css({
        opacity: 0
    }), playSound("boost", 0, !1), fadeSoundTo("boost", .2), setTimeout(function() {
        var e = RenderHandler.getInstance();
        e.loop("dragButtonAni", this, function() {
            window.draw()
        }), $dragWrapper.velocity({
            opacity: 1
        }, 800), t.delay(1200).velocity("transition.slideUpBigIn", 800), n.delay(1600).velocity("transition.slideUpBigIn", 800), $dragButton.delay(1200).velocity("callout.upDown", {
            stagger: 200,
            complete: function() {
                e.off("dragButtonAni"), fadeSoundTo("boost", 0)
            }
        })
    }, 300)
}

function callAniGenerateSave(e) {
    if (window.isMobileDevice) return e.find(".helper").delay(4e3).velocity({
        opacity: 0
    }, {
        display: "none"
    }), !1;
    var t = e.find("h2"),
        n = e.find("h4"),
        i = e.find(".forms");
    $saveButton = e.find(".saveButton"), t.css({
        opacity: 0
    }), n.css({
        opacity: 0
    }), i.css({
        opacity: 0
    }), $saveButton.css({
        opacity: 0
    }), t.delay(1200).velocity("transition.slideUpBigIn", 800), n.delay(1600).velocity("transition.slideUpBigIn", 800), i.delay(1800).velocity("transition.slideUpBigIn", 800), $saveButton.delay(2200).velocity("transition.fadeIn", 800)
}

function callAniGenerateFinished(e) {}! function(e, t) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function(e) {
        if (!e.document) throw new Error("jQuery requires a window with a document");
        return t(e)
    } : t(e)
}("undefined" != typeof window ? window : this, function(e, t) {
    function n(e) {
        var t = "length" in e && e.length,
            n = oe.type(e);
        return "function" !== n && !oe.isWindow(e) && (!(1 !== e.nodeType || !t) || ("array" === n || 0 === t || "number" == typeof t && t > 0 && t - 1 in e))
    }

    function i(e, t, n) {
        if (oe.isFunction(t)) return oe.grep(e, function(e, i) {
            return !!t.call(e, i, e) !== n
        });
        if (t.nodeType) return oe.grep(e, function(e) {
            return e === t !== n
        });
        if ("string" == typeof t) {
            if (pe.test(t)) return oe.filter(t, e, n);
            t = oe.filter(t, e)
        }
        return oe.grep(e, function(e) {
            return oe.inArray(e, t) >= 0 !== n
        })
    }

    function r(e, t) {
        do e = e[t]; while (e && 1 !== e.nodeType);
        return e
    }

    function o(e) {
        var t = xe[e] = {};
        return oe.each(e.match(Te) || [], function(e, n) {
            t[n] = !0
        }), t
    }

    function a() {
        me.addEventListener ? (me.removeEventListener("DOMContentLoaded", s, !1), e.removeEventListener("load", s, !1)) : (me.detachEvent("onreadystatechange", s), e.detachEvent("onload", s))
    }

    function s() {
        (me.addEventListener || "load" === event.type || "complete" === me.readyState) && (a(), oe.ready())
    }

    function l(e, t, n) {
        if (void 0 === n && 1 === e.nodeType) {
            var i = "data-" + t.replace(Se, "-$1").toLowerCase();
            if (n = e.getAttribute(i), "string" == typeof n) {
                try {
                    n = "true" === n || "false" !== n && ("null" === n ? null : +n + "" === n ? +n : He.test(n) ? oe.parseJSON(n) : n)
                } catch (e) {}
                oe.data(e, t, n)
            } else n = void 0
        }
        return n
    }

    function c(e) {
        var t;
        for (t in e)
            if (("data" !== t || !oe.isEmptyObject(e[t])) && "toJSON" !== t) return !1;
        return !0
    }

    function u(e, t, n, i) {
        if (oe.acceptData(e)) {
            var r, o, a = oe.expando,
                s = e.nodeType,
                l = s ? oe.cache : e,
                c = s ? e[a] : e[a] && a;
            if (c && l[c] && (i || l[c].data) || void 0 !== n || "string" != typeof t) return c || (c = s ? e[a] = Y.pop() || oe.guid++ : a), l[c] || (l[c] = s ? {} : {
                toJSON: oe.noop
            }), "object" != typeof t && "function" != typeof t || (i ? l[c] = oe.extend(l[c], t) : l[c].data = oe.extend(l[c].data, t)), o = l[c], i || (o.data || (o.data = {}), o = o.data), void 0 !== n && (o[oe.camelCase(t)] = n), "string" == typeof t ? (r = o[t], null == r && (r = o[oe.camelCase(t)])) : r = o, r
        }
    }

    function h(e, t, n) {
        if (oe.acceptData(e)) {
            var i, r, o = e.nodeType,
                a = o ? oe.cache : e,
                s = o ? e[oe.expando] : oe.expando;
            if (a[s]) {
                if (t && (i = n ? a[s] : a[s].data)) {
                    oe.isArray(t) ? t = t.concat(oe.map(t, oe.camelCase)) : t in i ? t = [t] : (t = oe.camelCase(t), t = t in i ? [t] : t.split(" ")), r = t.length;
                    for (; r--;) delete i[t[r]];
                    if (n ? !c(i) : !oe.isEmptyObject(i)) return
                }(n || (delete a[s].data, c(a[s]))) && (o ? oe.cleanData([e], !0) : ie.deleteExpando || a != a.window ? delete a[s] : a[s] = null)
            }
        }
    }

    function d() {
        return !0
    }

    function p() {
        return !1
    }

    function f() {
        try {
            return me.activeElement
        } catch (e) {}
    }

    function m(e) {
        var t = je.split("|"),
            n = e.createDocumentFragment();
        if (n.createElement)
            for (; t.length;) n.createElement(t.pop());
        return n
    }

    function E(e, t) {
        var n, i, r = 0,
            o = typeof e.getElementsByTagName !== we ? e.getElementsByTagName(t || "*") : typeof e.querySelectorAll !== we ? e.querySelectorAll(t || "*") : void 0;
        if (!o)
            for (o = [], n = e.childNodes || e; null != (i = n[r]); r++) !t || oe.nodeName(i, t) ? o.push(i) : oe.merge(o, E(i, t));
        return void 0 === t || t && oe.nodeName(e, t) ? oe.merge([e], o) : o
    }

    function g(e) {
        Pe.test(e.type) && (e.defaultChecked = e.checked)
    }

    function v(e, t) {
        return oe.nodeName(e, "table") && oe.nodeName(11 !== t.nodeType ? t : t.firstChild, "tr") ? e.getElementsByTagName("tbody")[0] || e.appendChild(e.ownerDocument.createElement("tbody")) : e
    }

    function y(e) {
        return e.type = (null !== oe.find.attr(e, "type")) + "/" + e.type, e
    }

    function T(e) {
        var t = $e.exec(e.type);
        return t ? e.type = t[1] : e.removeAttribute("type"), e
    }

    function x(e, t) {
        for (var n, i = 0; null != (n = e[i]); i++) oe._data(n, "globalEval", !t || oe._data(t[i], "globalEval"))
    }

    function R(e, t) {
        if (1 === t.nodeType && oe.hasData(e)) {
            var n, i, r, o = oe._data(e),
                a = oe._data(t, o),
                s = o.events;
            if (s) {
                delete a.handle, a.events = {};
                for (n in s)
                    for (i = 0, r = s[n].length; i < r; i++) oe.event.add(t, n, s[n][i])
            }
            a.data && (a.data = oe.extend({}, a.data))
        }
    }

    function w(e, t) {
        var n, i, r;
        if (1 === t.nodeType) {
            if (n = t.nodeName.toLowerCase(), !ie.noCloneEvent && t[oe.expando]) {
                r = oe._data(t);
                for (i in r.events) oe.removeEvent(t, i, r.handle);
                t.removeAttribute(oe.expando)
            }
            "script" === n && t.text !== e.text ? (y(t).text = e.text, T(t)) : "object" === n ? (t.parentNode && (t.outerHTML = e.outerHTML), ie.html5Clone && e.innerHTML && !oe.trim(t.innerHTML) && (t.innerHTML = e.innerHTML)) : "input" === n && Pe.test(e.type) ? (t.defaultChecked = t.checked = e.checked, t.value !== e.value && (t.value = e.value)) : "option" === n ? t.defaultSelected = t.selected = e.defaultSelected : "input" !== n && "textarea" !== n || (t.defaultValue = e.defaultValue)
        }
    }

    function b(t, n) {
        var i, r = oe(n.createElement(t)).appendTo(n.body),
            o = e.getDefaultComputedStyle && (i = e.getDefaultComputedStyle(r[0])) ? i.display : oe.css(r[0], "display");
        return r.detach(), o
    }

    function H(e) {
        var t = me,
            n = et[e];
        return n || (n = b(e, t), "none" !== n && n || (Je = (Je || oe("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement), t = (Je[0].contentWindow || Je[0].contentDocument).document, t.write(), t.close(), n = b(e, t), Je.detach()), et[e] = n), n
    }

    function S(e, t) {
        return {
            get: function() {
                var n = e();
                if (null != n) return n ? void delete this.get : (this.get = t).apply(this, arguments)
            }
        }
    }

    function _(e, t) {
        if (t in e) return t;
        for (var n = t.charAt(0).toUpperCase() + t.slice(1), i = t, r = pt.length; r--;)
            if (t = pt[r] + n, t in e) return t;
        return i
    }

    function M(e, t) {
        for (var n, i, r, o = [], a = 0, s = e.length; a < s; a++) i = e[a], i.style && (o[a] = oe._data(i, "olddisplay"), n = i.style.display, t ? (o[a] || "none" !== n || (i.style.display = ""), "" === i.style.display && Ce(i) && (o[a] = oe._data(i, "olddisplay", H(i.nodeName)))) : (r = Ce(i), (n && "none" !== n || !r) && oe._data(i, "olddisplay", r ? n : oe.css(i, "display"))));
        for (a = 0; a < s; a++) i = e[a], i.style && (t && "none" !== i.style.display && "" !== i.style.display || (i.style.display = t ? o[a] || "" : "none"));
        return e
    }

    function C(e, t, n) {
        var i = ct.exec(t);
        return i ? Math.max(0, i[1] - (n || 0)) + (i[2] || "px") : t
    }

    function A(e, t, n, i, r) {
        for (var o = n === (i ? "border" : "content") ? 4 : "width" === t ? 1 : 0, a = 0; o < 4; o += 2) "margin" === n && (a += oe.css(e, n + Me[o], !0, r)), i ? ("content" === n && (a -= oe.css(e, "padding" + Me[o], !0, r)), "margin" !== n && (a -= oe.css(e, "border" + Me[o] + "Width", !0, r))) : (a += oe.css(e, "padding" + Me[o], !0, r), "padding" !== n && (a += oe.css(e, "border" + Me[o] + "Width", !0, r)));
        return a
    }

    function P(e, t, n) {
        var i = !0,
            r = "width" === t ? e.offsetWidth : e.offsetHeight,
            o = it(e),
            a = ie.boxSizing && "border-box" === oe.css(e, "boxSizing", !1, o);
        if (r <= 0 || null == r) {
            if (r = rt(e, t, o), (r < 0 || null == r) && (r = e.style[t]), nt.test(r)) return r;
            i = a && (ie.boxSizingReliable() || r === e.style[t]), r = parseFloat(r) || 0
        }
        return r + A(e, t, n || (a ? "border" : "content"), i, o) + "px"
    }

    function k(e, t, n, i, r) {
        return new k.prototype.init(e, t, n, i, r)
    }

    function L() {
        return setTimeout(function() {
            ft = void 0
        }), ft = oe.now()
    }

    function D(e, t) {
        var n, i = {
                height: e
            },
            r = 0;
        for (t = t ? 1 : 0; r < 4; r += 2 - t) n = Me[r], i["margin" + n] = i["padding" + n] = e;
        return t && (i.opacity = i.width = e), i
    }

    function O(e, t, n) {
        for (var i, r = (Tt[t] || []).concat(Tt["*"]), o = 0, a = r.length; o < a; o++)
            if (i = r[o].call(n, t, e)) return i
    }

    function F(e, t, n) {
        var i, r, o, a, s, l, c, u, h = this,
            d = {},
            p = e.style,
            f = e.nodeType && Ce(e),
            m = oe._data(e, "fxshow");
        n.queue || (s = oe._queueHooks(e, "fx"), null == s.unqueued && (s.unqueued = 0, l = s.empty.fire, s.empty.fire = function() {
            s.unqueued || l()
        }), s.unqueued++, h.always(function() {
            h.always(function() {
                s.unqueued--, oe.queue(e, "fx").length || s.empty.fire()
            })
        })), 1 === e.nodeType && ("height" in t || "width" in t) && (n.overflow = [p.overflow, p.overflowX, p.overflowY], c = oe.css(e, "display"), u = "none" === c ? oe._data(e, "olddisplay") || H(e.nodeName) : c, "inline" === u && "none" === oe.css(e, "float") && (ie.inlineBlockNeedsLayout && "inline" !== H(e.nodeName) ? p.zoom = 1 : p.display = "inline-block")), n.overflow && (p.overflow = "hidden", ie.shrinkWrapBlocks() || h.always(function() {
            p.overflow = n.overflow[0], p.overflowX = n.overflow[1], p.overflowY = n.overflow[2]
        }));
        for (i in t)
            if (r = t[i], Et.exec(r)) {
                if (delete t[i], o = o || "toggle" === r, r === (f ? "hide" : "show")) {
                    if ("show" !== r || !m || void 0 === m[i]) continue;
                    f = !0
                }
                d[i] = m && m[i] || oe.style(e, i)
            } else c = void 0;
        if (oe.isEmptyObject(d)) "inline" === ("none" === c ? H(e.nodeName) : c) && (p.display = c);
        else {
            m ? "hidden" in m && (f = m.hidden) : m = oe._data(e, "fxshow", {}), o && (m.hidden = !f), f ? oe(e).show() : h.done(function() {
                oe(e).hide()
            }), h.done(function() {
                var t;
                oe._removeData(e, "fxshow");
                for (t in d) oe.style(e, t, d[t])
            });
            for (i in d) a = O(f ? m[i] : 0, i, h), i in m || (m[i] = a.start, f && (a.end = a.start, a.start = "width" === i || "height" === i ? 1 : 0))
        }
    }

    function j(e, t) {
        var n, i, r, o, a;
        for (n in e)
            if (i = oe.camelCase(n), r = t[i], o = e[n], oe.isArray(o) && (r = o[1], o = e[n] = o[0]), n !== i && (e[i] = o, delete e[n]), a = oe.cssHooks[i], a && "expand" in a) {
                o = a.expand(o), delete e[i];
                for (n in o) n in e || (e[n] = o[n], t[n] = r)
            } else t[i] = r
    }

    function V(e, t, n) {
        var i, r, o = 0,
            a = yt.length,
            s = oe.Deferred().always(function() {
                delete l.elem
            }),
            l = function() {
                if (r) return !1;
                for (var t = ft || L(), n = Math.max(0, c.startTime + c.duration - t), i = n / c.duration || 0, o = 1 - i, a = 0, l = c.tweens.length; a < l; a++) c.tweens[a].run(o);
                return s.notifyWith(e, [c, o, n]), o < 1 && l ? n : (s.resolveWith(e, [c]), !1)
            },
            c = s.promise({
                elem: e,
                props: oe.extend({}, t),
                opts: oe.extend(!0, {
                    specialEasing: {}
                }, n),
                originalProperties: t,
                originalOptions: n,
                startTime: ft || L(),
                duration: n.duration,
                tweens: [],
                createTween: function(t, n) {
                    var i = oe.Tween(e, c.opts, t, n, c.opts.specialEasing[t] || c.opts.easing);
                    return c.tweens.push(i), i
                },
                stop: function(t) {
                    var n = 0,
                        i = t ? c.tweens.length : 0;
                    if (r) return this;
                    for (r = !0; n < i; n++) c.tweens[n].run(1);
                    return t ? s.resolveWith(e, [c, t]) : s.rejectWith(e, [c, t]), this
                }
            }),
            u = c.props;
        for (j(u, c.opts.specialEasing); o < a; o++)
            if (i = yt[o].call(c, e, u, c.opts)) return i;
        return oe.map(u, O, c), oe.isFunction(c.opts.start) && c.opts.start.call(e, c), oe.fx.timer(oe.extend(l, {
            elem: e,
            anim: c,
            queue: c.opts.queue
        })), c.progress(c.opts.progress).done(c.opts.done, c.opts.complete).fail(c.opts.fail).always(c.opts.always)
    }

    function I(e) {
        return function(t, n) {
            "string" != typeof t && (n = t, t = "*");
            var i, r = 0,
                o = t.toLowerCase().match(Te) || [];
            if (oe.isFunction(n))
                for (; i = o[r++];) "+" === i.charAt(0) ? (i = i.slice(1) || "*", (e[i] = e[i] || []).unshift(n)) : (e[i] = e[i] || []).push(n)
        }
    }

    function N(e, t, n, i) {
        function r(s) {
            var l;
            return o[s] = !0, oe.each(e[s] || [], function(e, s) {
                var c = s(t, n, i);
                return "string" != typeof c || a || o[c] ? a ? !(l = c) : void 0 : (t.dataTypes.unshift(c), r(c), !1)
            }), l
        }
        var o = {},
            a = e === Gt;
        return r(t.dataTypes[0]) || !o["*"] && r("*")
    }

    function B(e, t) {
        var n, i, r = oe.ajaxSettings.flatOptions || {};
        for (i in t) void 0 !== t[i] && ((r[i] ? e : n || (n = {}))[i] = t[i]);
        return n && oe.extend(!0, e, n), e
    }

    function z(e, t, n) {
        for (var i, r, o, a, s = e.contents, l = e.dataTypes;
            "*" === l[0];) l.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
        if (r)
            for (a in s)
                if (s[a] && s[a].test(r)) {
                    l.unshift(a);
                    break
                }
        if (l[0] in n) o = l[0];
        else {
            for (a in n) {
                if (!l[0] || e.converters[a + " " + l[0]]) {
                    o = a;
                    break
                }
                i || (i = a)
            }
            o = o || i
        }
        if (o) return o !== l[0] && l.unshift(o), n[o]
    }

    function U(e, t, n, i) {
        var r, o, a, s, l, c = {},
            u = e.dataTypes.slice();
        if (u[1])
            for (a in e.converters) c[a.toLowerCase()] = e.converters[a];
        for (o = u.shift(); o;)
            if (e.responseFields[o] && (n[e.responseFields[o]] = t), !l && i && e.dataFilter && (t = e.dataFilter(t, e.dataType)), l = o, o = u.shift())
                if ("*" === o) o = l;
                else if ("*" !== l && l !== o) {
            if (a = c[l + " " + o] || c["* " + o], !a)
                for (r in c)
                    if (s = r.split(" "), s[1] === o && (a = c[l + " " + s[0]] || c["* " + s[0]])) {
                        a === !0 ? a = c[r] : c[r] !== !0 && (o = s[0], u.unshift(s[1]));
                        break
                    }
            if (a !== !0)
                if (a && e.throws) t = a(t);
                else try {
                    t = a(t)
                } catch (e) {
                    return {
                        state: "parsererror",
                        error: a ? e : "No conversion from " + l + " to " + o
                    }
                }
        }
        return {
            state: "success",
            data: t
        }
    }

    function G(e, t, n, i) {
        var r;
        if (oe.isArray(t)) oe.each(t, function(t, r) {
            n || Xt.test(e) ? i(e, r) : G(e + "[" + ("object" == typeof r ? t : "") + "]", r, n, i)
        });
        else if (n || "object" !== oe.type(t)) i(e, t);
        else
            for (r in t) G(e + "[" + r + "]", t[r], n, i)
    }

    function W() {
        try {
            return new e.XMLHttpRequest
        } catch (e) {}
    }

    function q() {
        try {
            return new e.ActiveXObject("Microsoft.XMLHTTP")
        } catch (e) {}
    }

    function X(e) {
        return oe.isWindow(e) ? e : 9 === e.nodeType && (e.defaultView || e.parentWindow)
    }
    var Y = [],
        Z = Y.slice,
        K = Y.concat,
        Q = Y.push,
        J = Y.indexOf,
        ee = {},
        te = ee.toString,
        ne = ee.hasOwnProperty,
        ie = {},
        re = "1.11.3",
        oe = function(e, t) {
            return new oe.fn.init(e, t)
        },
        ae = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        se = /^-ms-/,
        le = /-([\da-z])/gi,
        ce = function(e, t) {
            return t.toUpperCase()
        };
    oe.fn = oe.prototype = {
        jquery: re,
        constructor: oe,
        selector: "",
        length: 0,
        toArray: function() {
            return Z.call(this)
        },
        get: function(e) {
            return null != e ? e < 0 ? this[e + this.length] : this[e] : Z.call(this)
        },
        pushStack: function(e) {
            var t = oe.merge(this.constructor(), e);
            return t.prevObject = this, t.context = this.context, t
        },
        each: function(e, t) {
            return oe.each(this, e, t)
        },
        map: function(e) {
            return this.pushStack(oe.map(this, function(t, n) {
                return e.call(t, n, t)
            }))
        },
        slice: function() {
            return this.pushStack(Z.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        eq: function(e) {
            var t = this.length,
                n = +e + (e < 0 ? t : 0);
            return this.pushStack(n >= 0 && n < t ? [this[n]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor(null)
        },
        push: Q,
        sort: Y.sort,
        splice: Y.splice
    }, oe.extend = oe.fn.extend = function() {
        var e, t, n, i, r, o, a = arguments[0] || {},
            s = 1,
            l = arguments.length,
            c = !1;
        for ("boolean" == typeof a && (c = a, a = arguments[s] || {}, s++), "object" == typeof a || oe.isFunction(a) || (a = {}), s === l && (a = this, s--); s < l; s++)
            if (null != (r = arguments[s]))
                for (i in r) e = a[i], n = r[i], a !== n && (c && n && (oe.isPlainObject(n) || (t = oe.isArray(n))) ? (t ? (t = !1, o = e && oe.isArray(e) ? e : []) : o = e && oe.isPlainObject(e) ? e : {}, a[i] = oe.extend(c, o, n)) : void 0 !== n && (a[i] = n));
        return a
    }, oe.extend({
        expando: "jQuery" + (re + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(e) {
            throw new Error(e)
        },
        noop: function() {},
        isFunction: function(e) {
            return "function" === oe.type(e)
        },
        isArray: Array.isArray || function(e) {
            return "array" === oe.type(e)
        },
        isWindow: function(e) {
            return null != e && e == e.window
        },
        isNumeric: function(e) {
            return !oe.isArray(e) && e - parseFloat(e) + 1 >= 0
        },
        isEmptyObject: function(e) {
            var t;
            for (t in e) return !1;
            return !0
        },
        isPlainObject: function(e) {
            var t;
            if (!e || "object" !== oe.type(e) || e.nodeType || oe.isWindow(e)) return !1;
            try {
                if (e.constructor && !ne.call(e, "constructor") && !ne.call(e.constructor.prototype, "isPrototypeOf")) return !1
            } catch (e) {
                return !1
            }
            if (ie.ownLast)
                for (t in e) return ne.call(e, t);
            for (t in e);
            return void 0 === t || ne.call(e, t)
        },
        type: function(e) {
            return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? ee[te.call(e)] || "object" : typeof e
        },
        globalEval: function(t) {
            t && oe.trim(t) && (e.execScript || function(t) {
                e.eval.call(e, t)
            })(t)
        },
        camelCase: function(e) {
            return e.replace(se, "ms-").replace(le, ce)
        },
        nodeName: function(e, t) {
            return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
        },
        each: function(e, t, i) {
            var r, o = 0,
                a = e.length,
                s = n(e);
            if (i) {
                if (s)
                    for (; o < a && (r = t.apply(e[o], i), r !== !1); o++);
                else
                    for (o in e)
                        if (r = t.apply(e[o], i), r === !1) break
            } else if (s)
                for (; o < a && (r = t.call(e[o], o, e[o]), r !== !1); o++);
            else
                for (o in e)
                    if (r = t.call(e[o], o, e[o]), r === !1) break; return e
        },
        trim: function(e) {
            return null == e ? "" : (e + "").replace(ae, "")
        },
        makeArray: function(e, t) {
            var i = t || [];
            return null != e && (n(Object(e)) ? oe.merge(i, "string" == typeof e ? [e] : e) : Q.call(i, e)), i
        },
        inArray: function(e, t, n) {
            var i;
            if (t) {
                if (J) return J.call(t, e, n);
                for (i = t.length, n = n ? n < 0 ? Math.max(0, i + n) : n : 0; n < i; n++)
                    if (n in t && t[n] === e) return n
            }
            return -1
        },
        merge: function(e, t) {
            for (var n = +t.length, i = 0, r = e.length; i < n;) e[r++] = t[i++];
            if (n !== n)
                for (; void 0 !== t[i];) e[r++] = t[i++];
            return e.length = r, e
        },
        grep: function(e, t, n) {
            for (var i, r = [], o = 0, a = e.length, s = !n; o < a; o++) i = !t(e[o], o), i !== s && r.push(e[o]);
            return r
        },
        map: function(e, t, i) {
            var r, o = 0,
                a = e.length,
                s = n(e),
                l = [];
            if (s)
                for (; o < a; o++) r = t(e[o], o, i), null != r && l.push(r);
            else
                for (o in e) r = t(e[o], o, i), null != r && l.push(r);
            return K.apply([], l)
        },
        guid: 1,
        proxy: function(e, t) {
            var n, i, r;
            if ("string" == typeof t && (r = e[t], t = e, e = r), oe.isFunction(e)) return n = Z.call(arguments, 2), i = function() {
                return e.apply(t || this, n.concat(Z.call(arguments)))
            }, i.guid = e.guid = e.guid || oe.guid++, i
        },
        now: function() {
            return +new Date
        },
        support: ie
    }), oe.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(e, t) {
        ee["[object " + t + "]"] = t.toLowerCase()
    });
    var ue = function(e) {
        function t(e, t, n, i) {
            var r, o, a, s, l, c, h, p, f, m;
            if ((t ? t.ownerDocument || t : N) !== k && P(t), t = t || k, n = n || [], s = t.nodeType, "string" != typeof e || !e || 1 !== s && 9 !== s && 11 !== s) return n;
            if (!i && D) {
                if (11 !== s && (r = ye.exec(e)))
                    if (a = r[1]) {
                        if (9 === s) {
                            if (o = t.getElementById(a), !o || !o.parentNode) return n;
                            if (o.id === a) return n.push(o), n
                        } else if (t.ownerDocument && (o = t.ownerDocument.getElementById(a)) && V(t, o) && o.id === a) return n.push(o), n
                    } else {
                        if (r[2]) return J.apply(n, t.getElementsByTagName(e)), n;
                        if ((a = r[3]) && x.getElementsByClassName) return J.apply(n, t.getElementsByClassName(a)), n
                    }
                if (x.qsa && (!O || !O.test(e))) {
                    if (p = h = I, f = t, m = 1 !== s && e, 1 === s && "object" !== t.nodeName.toLowerCase()) {
                        for (c = H(e), (h = t.getAttribute("id")) ? p = h.replace(xe, "\\$&") : t.setAttribute("id", p), p = "[id='" + p + "'] ", l = c.length; l--;) c[l] = p + d(c[l]);
                        f = Te.test(e) && u(t.parentNode) || t, m = c.join(",")
                    }
                    if (m) try {
                        return J.apply(n, f.querySelectorAll(m)), n
                    } catch (e) {} finally {
                        h || t.removeAttribute("id")
                    }
                }
            }
            return _(e.replace(ce, "$1"), t, n, i)
        }

        function n() {
            function e(n, i) {
                return t.push(n + " ") > R.cacheLength && delete e[t.shift()], e[n + " "] = i
            }
            var t = [];
            return e
        }

        function i(e) {
            return e[I] = !0, e
        }

        function r(e) {
            var t = k.createElement("div");
            try {
                return !!e(t)
            } catch (e) {
                return !1
            } finally {
                t.parentNode && t.parentNode.removeChild(t), t = null
            }
        }

        function o(e, t) {
            for (var n = e.split("|"), i = e.length; i--;) R.attrHandle[n[i]] = t
        }

        function a(e, t) {
            var n = t && e,
                i = n && 1 === e.nodeType && 1 === t.nodeType && (~t.sourceIndex || X) - (~e.sourceIndex || X);
            if (i) return i;
            if (n)
                for (; n = n.nextSibling;)
                    if (n === t) return -1;
            return e ? 1 : -1
        }

        function s(e) {
            return function(t) {
                var n = t.nodeName.toLowerCase();
                return "input" === n && t.type === e
            }
        }

        function l(e) {
            return function(t) {
                var n = t.nodeName.toLowerCase();
                return ("input" === n || "button" === n) && t.type === e
            }
        }

        function c(e) {
            return i(function(t) {
                return t = +t, i(function(n, i) {
                    for (var r, o = e([], n.length, t), a = o.length; a--;) n[r = o[a]] && (n[r] = !(i[r] = n[r]))
                })
            })
        }

        function u(e) {
            return e && "undefined" != typeof e.getElementsByTagName && e
        }

        function h() {}

        function d(e) {
            for (var t = 0, n = e.length, i = ""; t < n; t++) i += e[t].value;
            return i
        }

        function p(e, t, n) {
            var i = t.dir,
                r = n && "parentNode" === i,
                o = z++;
            return t.first ? function(t, n, o) {
                for (; t = t[i];)
                    if (1 === t.nodeType || r) return e(t, n, o)
            } : function(t, n, a) {
                var s, l, c = [B, o];
                if (a) {
                    for (; t = t[i];)
                        if ((1 === t.nodeType || r) && e(t, n, a)) return !0
                } else
                    for (; t = t[i];)
                        if (1 === t.nodeType || r) {
                            if (l = t[I] || (t[I] = {}), (s = l[i]) && s[0] === B && s[1] === o) return c[2] = s[2];
                            if (l[i] = c, c[2] = e(t, n, a)) return !0
                        }
            }
        }

        function f(e) {
            return e.length > 1 ? function(t, n, i) {
                for (var r = e.length; r--;)
                    if (!e[r](t, n, i)) return !1;
                return !0
            } : e[0]
        }

        function m(e, n, i) {
            for (var r = 0, o = n.length; r < o; r++) t(e, n[r], i);
            return i
        }

        function E(e, t, n, i, r) {
            for (var o, a = [], s = 0, l = e.length, c = null != t; s < l; s++)(o = e[s]) && (n && !n(o, i, r) || (a.push(o), c && t.push(s)));
            return a
        }

        function g(e, t, n, r, o, a) {
            return r && !r[I] && (r = g(r)), o && !o[I] && (o = g(o, a)), i(function(i, a, s, l) {
                var c, u, h, d = [],
                    p = [],
                    f = a.length,
                    g = i || m(t || "*", s.nodeType ? [s] : s, []),
                    v = !e || !i && t ? g : E(g, d, e, s, l),
                    y = n ? o || (i ? e : f || r) ? [] : a : v;
                if (n && n(v, y, s, l), r)
                    for (c = E(y, p), r(c, [], s, l), u = c.length; u--;)(h = c[u]) && (y[p[u]] = !(v[p[u]] = h));
                if (i) {
                    if (o || e) {
                        if (o) {
                            for (c = [], u = y.length; u--;)(h = y[u]) && c.push(v[u] = h);
                            o(null, y = [], c, l)
                        }
                        for (u = y.length; u--;)(h = y[u]) && (c = o ? te(i, h) : d[u]) > -1 && (i[c] = !(a[c] = h))
                    }
                } else y = E(y === a ? y.splice(f, y.length) : y), o ? o(null, a, y, l) : J.apply(a, y)
            })
        }

        function v(e) {
            for (var t, n, i, r = e.length, o = R.relative[e[0].type], a = o || R.relative[" "], s = o ? 1 : 0, l = p(function(e) {
                    return e === t
                }, a, !0), c = p(function(e) {
                    return te(t, e) > -1
                }, a, !0), u = [function(e, n, i) {
                    var r = !o && (i || n !== M) || ((t = n).nodeType ? l(e, n, i) : c(e, n, i));
                    return t = null, r
                }]; s < r; s++)
                if (n = R.relative[e[s].type]) u = [p(f(u), n)];
                else {
                    if (n = R.filter[e[s].type].apply(null, e[s].matches), n[I]) {
                        for (i = ++s; i < r && !R.relative[e[i].type]; i++);
                        return g(s > 1 && f(u), s > 1 && d(e.slice(0, s - 1).concat({
                            value: " " === e[s - 2].type ? "*" : ""
                        })).replace(ce, "$1"), n, s < i && v(e.slice(s, i)), i < r && v(e = e.slice(i)), i < r && d(e))
                    }
                    u.push(n)
                }
            return f(u)
        }

        function y(e, n) {
            var r = n.length > 0,
                o = e.length > 0,
                a = function(i, a, s, l, c) {
                    var u, h, d, p = 0,
                        f = "0",
                        m = i && [],
                        g = [],
                        v = M,
                        y = i || o && R.find.TAG("*", c),
                        T = B += null == v ? 1 : Math.random() || .1,
                        x = y.length;
                    for (c && (M = a !== k && a); f !== x && null != (u = y[f]); f++) {
                        if (o && u) {
                            for (h = 0; d = e[h++];)
                                if (d(u, a, s)) {
                                    l.push(u);
                                    break
                                }
                            c && (B = T)
                        }
                        r && ((u = !d && u) && p--, i && m.push(u))
                    }
                    if (p += f, r && f !== p) {
                        for (h = 0; d = n[h++];) d(m, g, a, s);
                        if (i) {
                            if (p > 0)
                                for (; f--;) m[f] || g[f] || (g[f] = K.call(l));
                            g = E(g)
                        }
                        J.apply(l, g), c && !i && g.length > 0 && p + n.length > 1 && t.uniqueSort(l)
                    }
                    return c && (B = T, M = v), m
                };
            return r ? i(a) : a
        }
        var T, x, R, w, b, H, S, _, M, C, A, P, k, L, D, O, F, j, V, I = "sizzle" + 1 * new Date,
            N = e.document,
            B = 0,
            z = 0,
            U = n(),
            G = n(),
            W = n(),
            q = function(e, t) {
                return e === t && (A = !0), 0
            },
            X = 1 << 31,
            Y = {}.hasOwnProperty,
            Z = [],
            K = Z.pop,
            Q = Z.push,
            J = Z.push,
            ee = Z.slice,
            te = function(e, t) {
                for (var n = 0, i = e.length; n < i; n++)
                    if (e[n] === t) return n;
                return -1
            },
            ne = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            ie = "[\\x20\\t\\r\\n\\f]",
            re = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
            oe = re.replace("w", "w#"),
            ae = "\\[" + ie + "*(" + re + ")(?:" + ie + "*([*^$|!~]?=)" + ie + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + oe + "))|)" + ie + "*\\]",
            se = ":(" + re + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + ae + ")*)|.*)\\)|)",
            le = new RegExp(ie + "+", "g"),
            ce = new RegExp("^" + ie + "+|((?:^|[^\\\\])(?:\\\\.)*)" + ie + "+$", "g"),
            ue = new RegExp("^" + ie + "*," + ie + "*"),
            he = new RegExp("^" + ie + "*([>+~]|" + ie + ")" + ie + "*"),
            de = new RegExp("=" + ie + "*([^\\]'\"]*?)" + ie + "*\\]", "g"),
            pe = new RegExp(se),
            fe = new RegExp("^" + oe + "$"),
            me = {
                ID: new RegExp("^#(" + re + ")"),
                CLASS: new RegExp("^\\.(" + re + ")"),
                TAG: new RegExp("^(" + re.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + ae),
                PSEUDO: new RegExp("^" + se),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + ie + "*(even|odd|(([+-]|)(\\d*)n|)" + ie + "*(?:([+-]|)" + ie + "*(\\d+)|))" + ie + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + ne + ")$", "i"),
                needsContext: new RegExp("^" + ie + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + ie + "*((?:-\\d)?\\d*)" + ie + "*\\)|)(?=[^-]|$)", "i")
            },
            Ee = /^(?:input|select|textarea|button)$/i,
            ge = /^h\d$/i,
            ve = /^[^{]+\{\s*\[native \w/,
            ye = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            Te = /[+~]/,
            xe = /'|\\/g,
            Re = new RegExp("\\\\([\\da-f]{1,6}" + ie + "?|(" + ie + ")|.)", "ig"),
            we = function(e, t, n) {
                var i = "0x" + t - 65536;
                return i !== i || n ? t : i < 0 ? String.fromCharCode(i + 65536) : String.fromCharCode(i >> 10 | 55296, 1023 & i | 56320)
            },
            be = function() {
                P()
            };
        try {
            J.apply(Z = ee.call(N.childNodes), N.childNodes), Z[N.childNodes.length].nodeType
        } catch (e) {
            J = {
                apply: Z.length ? function(e, t) {
                    Q.apply(e, ee.call(t))
                } : function(e, t) {
                    for (var n = e.length, i = 0; e[n++] = t[i++];);
                    e.length = n - 1
                }
            }
        }
        x = t.support = {}, b = t.isXML = function(e) {
            var t = e && (e.ownerDocument || e).documentElement;
            return !!t && "HTML" !== t.nodeName
        }, P = t.setDocument = function(e) {
            var t, n, i = e ? e.ownerDocument || e : N;
            return i !== k && 9 === i.nodeType && i.documentElement ? (k = i, L = i.documentElement, n = i.defaultView, n && n !== n.top && (n.addEventListener ? n.addEventListener("unload", be, !1) : n.attachEvent && n.attachEvent("onunload", be)), D = !b(i), x.attributes = r(function(e) {
                return e.className = "i", !e.getAttribute("className")
            }), x.getElementsByTagName = r(function(e) {
                return e.appendChild(i.createComment("")), !e.getElementsByTagName("*").length
            }), x.getElementsByClassName = ve.test(i.getElementsByClassName), x.getById = r(function(e) {
                return L.appendChild(e).id = I, !i.getElementsByName || !i.getElementsByName(I).length
            }), x.getById ? (R.find.ID = function(e, t) {
                if ("undefined" != typeof t.getElementById && D) {
                    var n = t.getElementById(e);
                    return n && n.parentNode ? [n] : []
                }
            }, R.filter.ID = function(e) {
                var t = e.replace(Re, we);
                return function(e) {
                    return e.getAttribute("id") === t
                }
            }) : (delete R.find.ID, R.filter.ID = function(e) {
                var t = e.replace(Re, we);
                return function(e) {
                    var n = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id");
                    return n && n.value === t
                }
            }), R.find.TAG = x.getElementsByTagName ? function(e, t) {
                return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : x.qsa ? t.querySelectorAll(e) : void 0
            } : function(e, t) {
                var n, i = [],
                    r = 0,
                    o = t.getElementsByTagName(e);
                if ("*" === e) {
                    for (; n = o[r++];) 1 === n.nodeType && i.push(n);
                    return i
                }
                return o
            }, R.find.CLASS = x.getElementsByClassName && function(e, t) {
                if (D) return t.getElementsByClassName(e)
            }, F = [], O = [], (x.qsa = ve.test(i.querySelectorAll)) && (r(function(e) {
                L.appendChild(e).innerHTML = "<a id='" + I + "'></a><select id='" + I + "-\f]' msallowcapture=''><option selected=''></option></select>", e.querySelectorAll("[msallowcapture^='']").length && O.push("[*^$]=" + ie + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || O.push("\\[" + ie + "*(?:value|" + ne + ")"), e.querySelectorAll("[id~=" + I + "-]").length || O.push("~="), e.querySelectorAll(":checked").length || O.push(":checked"), e.querySelectorAll("a#" + I + "+*").length || O.push(".#.+[+~]")
            }), r(function(e) {
                var t = i.createElement("input");
                t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && O.push("name" + ie + "*[*^$|!~]?="), e.querySelectorAll(":enabled").length || O.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), O.push(",.*:")
            })), (x.matchesSelector = ve.test(j = L.matches || L.webkitMatchesSelector || L.mozMatchesSelector || L.oMatchesSelector || L.msMatchesSelector)) && r(function(e) {
                x.disconnectedMatch = j.call(e, "div"), j.call(e, "[s!='']:x"), F.push("!=", se)
            }), O = O.length && new RegExp(O.join("|")), F = F.length && new RegExp(F.join("|")), t = ve.test(L.compareDocumentPosition), V = t || ve.test(L.contains) ? function(e, t) {
                var n = 9 === e.nodeType ? e.documentElement : e,
                    i = t && t.parentNode;
                return e === i || !(!i || 1 !== i.nodeType || !(n.contains ? n.contains(i) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(i)))
            } : function(e, t) {
                if (t)
                    for (; t = t.parentNode;)
                        if (t === e) return !0;
                return !1
            }, q = t ? function(e, t) {
                if (e === t) return A = !0, 0;
                var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
                return n ? n : (n = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1, 1 & n || !x.sortDetached && t.compareDocumentPosition(e) === n ? e === i || e.ownerDocument === N && V(N, e) ? -1 : t === i || t.ownerDocument === N && V(N, t) ? 1 : C ? te(C, e) - te(C, t) : 0 : 4 & n ? -1 : 1)
            } : function(e, t) {
                if (e === t) return A = !0, 0;
                var n, r = 0,
                    o = e.parentNode,
                    s = t.parentNode,
                    l = [e],
                    c = [t];
                if (!o || !s) return e === i ? -1 : t === i ? 1 : o ? -1 : s ? 1 : C ? te(C, e) - te(C, t) : 0;
                if (o === s) return a(e, t);
                for (n = e; n = n.parentNode;) l.unshift(n);
                for (n = t; n = n.parentNode;) c.unshift(n);
                for (; l[r] === c[r];) r++;
                return r ? a(l[r], c[r]) : l[r] === N ? -1 : c[r] === N ? 1 : 0
            }, i) : k
        }, t.matches = function(e, n) {
            return t(e, null, null, n)
        }, t.matchesSelector = function(e, n) {
            if ((e.ownerDocument || e) !== k && P(e), n = n.replace(de, "='$1']"), x.matchesSelector && D && (!F || !F.test(n)) && (!O || !O.test(n))) try {
                var i = j.call(e, n);
                if (i || x.disconnectedMatch || e.document && 11 !== e.document.nodeType) return i
            } catch (e) {}
            return t(n, k, null, [e]).length > 0
        }, t.contains = function(e, t) {
            return (e.ownerDocument || e) !== k && P(e), V(e, t)
        }, t.attr = function(e, t) {
            (e.ownerDocument || e) !== k && P(e);
            var n = R.attrHandle[t.toLowerCase()],
                i = n && Y.call(R.attrHandle, t.toLowerCase()) ? n(e, t, !D) : void 0;
            return void 0 !== i ? i : x.attributes || !D ? e.getAttribute(t) : (i = e.getAttributeNode(t)) && i.specified ? i.value : null
        }, t.error = function(e) {
            throw new Error("Syntax error, unrecognized expression: " + e)
        }, t.uniqueSort = function(e) {
            var t, n = [],
                i = 0,
                r = 0;
            if (A = !x.detectDuplicates, C = !x.sortStable && e.slice(0), e.sort(q), A) {
                for (; t = e[r++];) t === e[r] && (i = n.push(r));
                for (; i--;) e.splice(n[i], 1)
            }
            return C = null, e
        }, w = t.getText = function(e) {
            var t, n = "",
                i = 0,
                r = e.nodeType;
            if (r) {
                if (1 === r || 9 === r || 11 === r) {
                    if ("string" == typeof e.textContent) return e.textContent;
                    for (e = e.firstChild; e; e = e.nextSibling) n += w(e)
                } else if (3 === r || 4 === r) return e.nodeValue
            } else
                for (; t = e[i++];) n += w(t);
            return n
        }, R = t.selectors = {
            cacheLength: 50,
            createPseudo: i,
            match: me,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(e) {
                    return e[1] = e[1].replace(Re, we), e[3] = (e[3] || e[4] || e[5] || "").replace(Re, we), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4)
                },
                CHILD: function(e) {
                    return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || t.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && t.error(e[0]), e
                },
                PSEUDO: function(e) {
                    var t, n = !e[6] && e[2];
                    return me.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && pe.test(n) && (t = H(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3))
                }
            },
            filter: {
                TAG: function(e) {
                    var t = e.replace(Re, we).toLowerCase();
                    return "*" === e ? function() {
                        return !0
                    } : function(e) {
                        return e.nodeName && e.nodeName.toLowerCase() === t
                    }
                },
                CLASS: function(e) {
                    var t = U[e + " "];
                    return t || (t = new RegExp("(^|" + ie + ")" + e + "(" + ie + "|$)")) && U(e, function(e) {
                        return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "")
                    })
                },
                ATTR: function(e, n, i) {
                    return function(r) {
                        var o = t.attr(r, e);
                        return null == o ? "!=" === n : !n || (o += "", "=" === n ? o === i : "!=" === n ? o !== i : "^=" === n ? i && 0 === o.indexOf(i) : "*=" === n ? i && o.indexOf(i) > -1 : "$=" === n ? i && o.slice(-i.length) === i : "~=" === n ? (" " + o.replace(le, " ") + " ").indexOf(i) > -1 : "|=" === n && (o === i || o.slice(0, i.length + 1) === i + "-"))
                    }
                },
                CHILD: function(e, t, n, i, r) {
                    var o = "nth" !== e.slice(0, 3),
                        a = "last" !== e.slice(-4),
                        s = "of-type" === t;
                    return 1 === i && 0 === r ? function(e) {
                        return !!e.parentNode
                    } : function(t, n, l) {
                        var c, u, h, d, p, f, m = o !== a ? "nextSibling" : "previousSibling",
                            E = t.parentNode,
                            g = s && t.nodeName.toLowerCase(),
                            v = !l && !s;
                        if (E) {
                            if (o) {
                                for (; m;) {
                                    for (h = t; h = h[m];)
                                        if (s ? h.nodeName.toLowerCase() === g : 1 === h.nodeType) return !1;
                                    f = m = "only" === e && !f && "nextSibling"
                                }
                                return !0
                            }
                            if (f = [a ? E.firstChild : E.lastChild], a && v) {
                                for (u = E[I] || (E[I] = {}), c = u[e] || [], p = c[0] === B && c[1], d = c[0] === B && c[2], h = p && E.childNodes[p]; h = ++p && h && h[m] || (d = p = 0) || f.pop();)
                                    if (1 === h.nodeType && ++d && h === t) {
                                        u[e] = [B, p, d];
                                        break
                                    }
                            } else if (v && (c = (t[I] || (t[I] = {}))[e]) && c[0] === B) d = c[1];
                            else
                                for (;
                                    (h = ++p && h && h[m] || (d = p = 0) || f.pop()) && ((s ? h.nodeName.toLowerCase() !== g : 1 !== h.nodeType) || !++d || (v && ((h[I] || (h[I] = {}))[e] = [B, d]), h !== t)););
                            return d -= r, d === i || d % i === 0 && d / i >= 0
                        }
                    }
                },
                PSEUDO: function(e, n) {
                    var r, o = R.pseudos[e] || R.setFilters[e.toLowerCase()] || t.error("unsupported pseudo: " + e);
                    return o[I] ? o(n) : o.length > 1 ? (r = [e, e, "", n], R.setFilters.hasOwnProperty(e.toLowerCase()) ? i(function(e, t) {
                        for (var i, r = o(e, n), a = r.length; a--;) i = te(e, r[a]), e[i] = !(t[i] = r[a])
                    }) : function(e) {
                        return o(e, 0, r)
                    }) : o
                }
            },
            pseudos: {
                not: i(function(e) {
                    var t = [],
                        n = [],
                        r = S(e.replace(ce, "$1"));
                    return r[I] ? i(function(e, t, n, i) {
                        for (var o, a = r(e, null, i, []), s = e.length; s--;)(o = a[s]) && (e[s] = !(t[s] = o))
                    }) : function(e, i, o) {
                        return t[0] = e, r(t, null, o, n), t[0] = null, !n.pop()
                    }
                }),
                has: i(function(e) {
                    return function(n) {
                        return t(e, n).length > 0
                    }
                }),
                contains: i(function(e) {
                    return e = e.replace(Re, we),
                        function(t) {
                            return (t.textContent || t.innerText || w(t)).indexOf(e) > -1
                        }
                }),
                lang: i(function(e) {
                    return fe.test(e || "") || t.error("unsupported lang: " + e), e = e.replace(Re, we).toLowerCase(),
                        function(t) {
                            var n;
                            do
                                if (n = D ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return n = n.toLowerCase(), n === e || 0 === n.indexOf(e + "-");
                            while ((t = t.parentNode) && 1 === t.nodeType);
                            return !1
                        }
                }),
                target: function(t) {
                    var n = e.location && e.location.hash;
                    return n && n.slice(1) === t.id
                },
                root: function(e) {
                    return e === L
                },
                focus: function(e) {
                    return e === k.activeElement && (!k.hasFocus || k.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                },
                enabled: function(e) {
                    return e.disabled === !1
                },
                disabled: function(e) {
                    return e.disabled === !0
                },
                checked: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && !!e.checked || "option" === t && !!e.selected
                },
                selected: function(e) {
                    return e.parentNode && e.parentNode.selectedIndex, e.selected === !0
                },
                empty: function(e) {
                    for (e = e.firstChild; e; e = e.nextSibling)
                        if (e.nodeType < 6) return !1;
                    return !0
                },
                parent: function(e) {
                    return !R.pseudos.empty(e)
                },
                header: function(e) {
                    return ge.test(e.nodeName)
                },
                input: function(e) {
                    return Ee.test(e.nodeName)
                },
                button: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && "button" === e.type || "button" === t
                },
                text: function(e) {
                    var t;
                    return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase())
                },
                first: c(function() {
                    return [0]
                }),
                last: c(function(e, t) {
                    return [t - 1]
                }),
                eq: c(function(e, t, n) {
                    return [n < 0 ? n + t : n]
                }),
                even: c(function(e, t) {
                    for (var n = 0; n < t; n += 2) e.push(n);
                    return e
                }),
                odd: c(function(e, t) {
                    for (var n = 1; n < t; n += 2) e.push(n);
                    return e
                }),
                lt: c(function(e, t, n) {
                    for (var i = n < 0 ? n + t : n; --i >= 0;) e.push(i);
                    return e
                }),
                gt: c(function(e, t, n) {
                    for (var i = n < 0 ? n + t : n; ++i < t;) e.push(i);
                    return e
                })
            }
        }, R.pseudos.nth = R.pseudos.eq;
        for (T in {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            }) R.pseudos[T] = s(T);
        for (T in {
                submit: !0,
                reset: !0
            }) R.pseudos[T] = l(T);
        return h.prototype = R.filters = R.pseudos, R.setFilters = new h, H = t.tokenize = function(e, n) {
            var i, r, o, a, s, l, c, u = G[e + " "];
            if (u) return n ? 0 : u.slice(0);
            for (s = e, l = [], c = R.preFilter; s;) {
                i && !(r = ue.exec(s)) || (r && (s = s.slice(r[0].length) || s), l.push(o = [])), i = !1, (r = he.exec(s)) && (i = r.shift(), o.push({
                    value: i,
                    type: r[0].replace(ce, " ")
                }), s = s.slice(i.length));
                for (a in R.filter) !(r = me[a].exec(s)) || c[a] && !(r = c[a](r)) || (i = r.shift(), o.push({
                    value: i,
                    type: a,
                    matches: r
                }), s = s.slice(i.length));
                if (!i) break
            }
            return n ? s.length : s ? t.error(e) : G(e, l).slice(0)
        }, S = t.compile = function(e, t) {
            var n, i = [],
                r = [],
                o = W[e + " "];
            if (!o) {
                for (t || (t = H(e)), n = t.length; n--;) o = v(t[n]), o[I] ? i.push(o) : r.push(o);
                o = W(e, y(r, i)), o.selector = e
            }
            return o
        }, _ = t.select = function(e, t, n, i) {
            var r, o, a, s, l, c = "function" == typeof e && e,
                h = !i && H(e = c.selector || e);
            if (n = n || [], 1 === h.length) {
                if (o = h[0] = h[0].slice(0), o.length > 2 && "ID" === (a = o[0]).type && x.getById && 9 === t.nodeType && D && R.relative[o[1].type]) {
                    if (t = (R.find.ID(a.matches[0].replace(Re, we), t) || [])[0], !t) return n;
                    c && (t = t.parentNode), e = e.slice(o.shift().value.length)
                }
                for (r = me.needsContext.test(e) ? 0 : o.length; r-- && (a = o[r], !R.relative[s = a.type]);)
                    if ((l = R.find[s]) && (i = l(a.matches[0].replace(Re, we), Te.test(o[0].type) && u(t.parentNode) || t))) {
                        if (o.splice(r, 1), e = i.length && d(o), !e) return J.apply(n, i), n;
                        break
                    }
            }
            return (c || S(e, h))(i, t, !D, n, Te.test(e) && u(t.parentNode) || t), n
        }, x.sortStable = I.split("").sort(q).join("") === I, x.detectDuplicates = !!A, P(), x.sortDetached = r(function(e) {
            return 1 & e.compareDocumentPosition(k.createElement("div"))
        }), r(function(e) {
            return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href")
        }) || o("type|href|height|width", function(e, t, n) {
            if (!n) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2)
        }), x.attributes && r(function(e) {
            return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value")
        }) || o("value", function(e, t, n) {
            if (!n && "input" === e.nodeName.toLowerCase()) return e.defaultValue
        }), r(function(e) {
            return null == e.getAttribute("disabled")
        }) || o(ne, function(e, t, n) {
            var i;
            if (!n) return e[t] === !0 ? t.toLowerCase() : (i = e.getAttributeNode(t)) && i.specified ? i.value : null
        }), t
    }(e);
    oe.find = ue, oe.expr = ue.selectors, oe.expr[":"] = oe.expr.pseudos, oe.unique = ue.uniqueSort, oe.text = ue.getText, oe.isXMLDoc = ue.isXML, oe.contains = ue.contains;
    var he = oe.expr.match.needsContext,
        de = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        pe = /^.[^:#\[\.,]*$/;
    oe.filter = function(e, t, n) {
        var i = t[0];
        return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === i.nodeType ? oe.find.matchesSelector(i, e) ? [i] : [] : oe.find.matches(e, oe.grep(t, function(e) {
            return 1 === e.nodeType
        }))
    }, oe.fn.extend({
        find: function(e) {
            var t, n = [],
                i = this,
                r = i.length;
            if ("string" != typeof e) return this.pushStack(oe(e).filter(function() {
                for (t = 0; t < r; t++)
                    if (oe.contains(i[t], this)) return !0
            }));
            for (t = 0; t < r; t++) oe.find(e, i[t], n);
            return n = this.pushStack(r > 1 ? oe.unique(n) : n), n.selector = this.selector ? this.selector + " " + e : e, n
        },
        filter: function(e) {
            return this.pushStack(i(this, e || [], !1))
        },
        not: function(e) {
            return this.pushStack(i(this, e || [], !0))
        },
        is: function(e) {
            return !!i(this, "string" == typeof e && he.test(e) ? oe(e) : e || [], !1).length
        }
    });
    var fe, me = e.document,
        Ee = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
        ge = oe.fn.init = function(e, t) {
            var n, i;
            if (!e) return this;
            if ("string" == typeof e) {
                if (n = "<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3 ? [null, e, null] : Ee.exec(e), !n || !n[1] && t) return !t || t.jquery ? (t || fe).find(e) : this.constructor(t).find(e);
                if (n[1]) {
                    if (t = t instanceof oe ? t[0] : t, oe.merge(this, oe.parseHTML(n[1], t && t.nodeType ? t.ownerDocument || t : me, !0)), de.test(n[1]) && oe.isPlainObject(t))
                        for (n in t) oe.isFunction(this[n]) ? this[n](t[n]) : this.attr(n, t[n]);
                    return this
                }
                if (i = me.getElementById(n[2]), i && i.parentNode) {
                    if (i.id !== n[2]) return fe.find(e);
                    this.length = 1, this[0] = i
                }
                return this.context = me, this.selector = e, this
            }
            return e.nodeType ? (this.context = this[0] = e, this.length = 1, this) : oe.isFunction(e) ? "undefined" != typeof fe.ready ? fe.ready(e) : e(oe) : (void 0 !== e.selector && (this.selector = e.selector, this.context = e.context), oe.makeArray(e, this))
        };
    ge.prototype = oe.fn, fe = oe(me);
    var ve = /^(?:parents|prev(?:Until|All))/,
        ye = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    oe.extend({
        dir: function(e, t, n) {
            for (var i = [], r = e[t]; r && 9 !== r.nodeType && (void 0 === n || 1 !== r.nodeType || !oe(r).is(n));) 1 === r.nodeType && i.push(r), r = r[t];
            return i
        },
        sibling: function(e, t) {
            for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && n.push(e);
            return n
        }
    }), oe.fn.extend({
        has: function(e) {
            var t, n = oe(e, this),
                i = n.length;
            return this.filter(function() {
                for (t = 0; t < i; t++)
                    if (oe.contains(this, n[t])) return !0
            })
        },
        closest: function(e, t) {
            for (var n, i = 0, r = this.length, o = [], a = he.test(e) || "string" != typeof e ? oe(e, t || this.context) : 0; i < r; i++)
                for (n = this[i]; n && n !== t; n = n.parentNode)
                    if (n.nodeType < 11 && (a ? a.index(n) > -1 : 1 === n.nodeType && oe.find.matchesSelector(n, e))) {
                        o.push(n);
                        break
                    }
            return this.pushStack(o.length > 1 ? oe.unique(o) : o)
        },
        index: function(e) {
            return e ? "string" == typeof e ? oe.inArray(this[0], oe(e)) : oe.inArray(e.jquery ? e[0] : e, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(e, t) {
            return this.pushStack(oe.unique(oe.merge(this.get(), oe(e, t))))
        },
        addBack: function(e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
        }
    }), oe.each({
        parent: function(e) {
            var t = e.parentNode;
            return t && 11 !== t.nodeType ? t : null
        },
        parents: function(e) {
            return oe.dir(e, "parentNode")
        },
        parentsUntil: function(e, t, n) {
            return oe.dir(e, "parentNode", n)
        },
        next: function(e) {
            return r(e, "nextSibling")
        },
        prev: function(e) {
            return r(e, "previousSibling")
        },
        nextAll: function(e) {
            return oe.dir(e, "nextSibling")
        },
        prevAll: function(e) {
            return oe.dir(e, "previousSibling")
        },
        nextUntil: function(e, t, n) {
            return oe.dir(e, "nextSibling", n)
        },
        prevUntil: function(e, t, n) {
            return oe.dir(e, "previousSibling", n)
        },
        siblings: function(e) {
            return oe.sibling((e.parentNode || {}).firstChild, e)
        },
        children: function(e) {
            return oe.sibling(e.firstChild)
        },
        contents: function(e) {
            return oe.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : oe.merge([], e.childNodes)
        }
    }, function(e, t) {
        oe.fn[e] = function(n, i) {
            var r = oe.map(this, t, n);
            return "Until" !== e.slice(-5) && (i = n), i && "string" == typeof i && (r = oe.filter(i, r)), this.length > 1 && (ye[e] || (r = oe.unique(r)), ve.test(e) && (r = r.reverse())), this.pushStack(r)
        }
    });
    var Te = /\S+/g,
        xe = {};
    oe.Callbacks = function(e) {
        e = "string" == typeof e ? xe[e] || o(e) : oe.extend({}, e);
        var t, n, i, r, a, s, l = [],
            c = !e.once && [],
            u = function(o) {
                for (n = e.memory && o, i = !0, a = s || 0, s = 0, r = l.length, t = !0; l && a < r; a++)
                    if (l[a].apply(o[0], o[1]) === !1 && e.stopOnFalse) {
                        n = !1;
                        break
                    }
                t = !1, l && (c ? c.length && u(c.shift()) : n ? l = [] : h.disable())
            },
            h = {
                add: function() {
                    if (l) {
                        var i = l.length;
                        ! function t(n) {
                            oe.each(n, function(n, i) {
                                var r = oe.type(i);
                                "function" === r ? e.unique && h.has(i) || l.push(i) : i && i.length && "string" !== r && t(i)
                            })
                        }(arguments), t ? r = l.length : n && (s = i, u(n))
                    }
                    return this
                },
                remove: function() {
                    return l && oe.each(arguments, function(e, n) {
                        for (var i;
                            (i = oe.inArray(n, l, i)) > -1;) l.splice(i, 1), t && (i <= r && r--, i <= a && a--)
                    }), this
                },
                has: function(e) {
                    return e ? oe.inArray(e, l) > -1 : !(!l || !l.length)
                },
                empty: function() {
                    return l = [], r = 0, this
                },
                disable: function() {
                    return l = c = n = void 0, this
                },
                disabled: function() {
                    return !l
                },
                lock: function() {
                    return c = void 0, n || h.disable(), this
                },
                locked: function() {
                    return !c
                },
                fireWith: function(e, n) {
                    return !l || i && !c || (n = n || [], n = [e, n.slice ? n.slice() : n], t ? c.push(n) : u(n)), this
                },
                fire: function() {
                    return h.fireWith(this, arguments), this
                },
                fired: function() {
                    return !!i
                }
            };
        return h
    }, oe.extend({
        Deferred: function(e) {
            var t = [
                    ["resolve", "done", oe.Callbacks("once memory"), "resolved"],
                    ["reject", "fail", oe.Callbacks("once memory"), "rejected"],
                    ["notify", "progress", oe.Callbacks("memory")]
                ],
                n = "pending",
                i = {
                    state: function() {
                        return n
                    },
                    always: function() {
                        return r.done(arguments).fail(arguments), this
                    },
                    then: function() {
                        var e = arguments;
                        return oe.Deferred(function(n) {
                            oe.each(t, function(t, o) {
                                var a = oe.isFunction(e[t]) && e[t];
                                r[o[1]](function() {
                                    var e = a && a.apply(this, arguments);
                                    e && oe.isFunction(e.promise) ? e.promise().done(n.resolve).fail(n.reject).progress(n.notify) : n[o[0] + "With"](this === i ? n.promise() : this, a ? [e] : arguments)
                                })
                            }), e = null
                        }).promise()
                    },
                    promise: function(e) {
                        return null != e ? oe.extend(e, i) : i
                    }
                },
                r = {};
            return i.pipe = i.then, oe.each(t, function(e, o) {
                var a = o[2],
                    s = o[3];
                i[o[1]] = a.add, s && a.add(function() {
                    n = s
                }, t[1 ^ e][2].disable, t[2][2].lock), r[o[0]] = function() {
                    return r[o[0] + "With"](this === r ? i : this, arguments), this
                }, r[o[0] + "With"] = a.fireWith
            }), i.promise(r), e && e.call(r, r), r
        },
        when: function(e) {
            var t = 0,
                n = Z.call(arguments),
                i = n.length,
                r = 1 !== i || e && oe.isFunction(e.promise) ? i : 0,
                o = 1 === r ? e : oe.Deferred(),
                a = function(e, t, n) {
                    return function(i) {
                        t[e] = this, n[e] = arguments.length > 1 ? Z.call(arguments) : i, n === s ? o.notifyWith(t, n) : --r || o.resolveWith(t, n)
                    }
                },
                s, l, c;
            if (i > 1)
                for (s = new Array(i), l = new Array(i), c = new Array(i); t < i; t++) n[t] && oe.isFunction(n[t].promise) ? n[t].promise().done(a(t, c, n)).fail(o.reject).progress(a(t, l, s)) : --r;
            return r || o.resolveWith(c, n), o.promise()
        }
    });
    var Re;
    oe.fn.ready = function(e) {
        return oe.ready.promise().done(e), this
    }, oe.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(e) {
            e ? oe.readyWait++ : oe.ready(!0)
        },
        ready: function(e) {
            if (e === !0 ? !--oe.readyWait : !oe.isReady) {
                if (!me.body) return setTimeout(oe.ready);
                oe.isReady = !0, e !== !0 && --oe.readyWait > 0 || (Re.resolveWith(me, [oe]),
                    oe.fn.triggerHandler && (oe(me).triggerHandler("ready"), oe(me).off("ready")))
            }
        }
    }), oe.ready.promise = function(t) {
        if (!Re)
            if (Re = oe.Deferred(), "complete" === me.readyState) setTimeout(oe.ready);
            else if (me.addEventListener) me.addEventListener("DOMContentLoaded", s, !1), e.addEventListener("load", s, !1);
        else {
            me.attachEvent("onreadystatechange", s), e.attachEvent("onload", s);
            var n = !1;
            try {
                n = null == e.frameElement && me.documentElement
            } catch (e) {}
            n && n.doScroll && ! function e() {
                if (!oe.isReady) {
                    try {
                        n.doScroll("left")
                    } catch (t) {
                        return setTimeout(e, 50)
                    }
                    a(), oe.ready()
                }
            }()
        }
        return Re.promise(t)
    };
    var we = "undefined",
        be;
    for (be in oe(ie)) break;
    ie.ownLast = "0" !== be, ie.inlineBlockNeedsLayout = !1, oe(function() {
            var e, t, n, i;
            n = me.getElementsByTagName("body")[0], n && n.style && (t = me.createElement("div"), i = me.createElement("div"), i.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", n.appendChild(i).appendChild(t), typeof t.style.zoom !== we && (t.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1", ie.inlineBlockNeedsLayout = e = 3 === t.offsetWidth, e && (n.style.zoom = 1)), n.removeChild(i))
        }),
        function() {
            var e = me.createElement("div");
            if (null == ie.deleteExpando) {
                ie.deleteExpando = !0;
                try {
                    delete e.test
                } catch (e) {
                    ie.deleteExpando = !1
                }
            }
            e = null
        }(), oe.acceptData = function(e) {
            var t = oe.noData[(e.nodeName + " ").toLowerCase()],
                n = +e.nodeType || 1;
            return (1 === n || 9 === n) && (!t || t !== !0 && e.getAttribute("classid") === t)
        };
    var He = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        Se = /([A-Z])/g;
    oe.extend({
        cache: {},
        noData: {
            "applet ": !0,
            "embed ": !0,
            "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
        },
        hasData: function(e) {
            return e = e.nodeType ? oe.cache[e[oe.expando]] : e[oe.expando], !!e && !c(e)
        },
        data: function(e, t, n) {
            return u(e, t, n)
        },
        removeData: function(e, t) {
            return h(e, t)
        },
        _data: function(e, t, n) {
            return u(e, t, n, !0)
        },
        _removeData: function(e, t) {
            return h(e, t, !0)
        }
    }), oe.fn.extend({
        data: function(e, t) {
            var n, i, r, o = this[0],
                a = o && o.attributes;
            if (void 0 === e) {
                if (this.length && (r = oe.data(o), 1 === o.nodeType && !oe._data(o, "parsedAttrs"))) {
                    for (n = a.length; n--;) a[n] && (i = a[n].name, 0 === i.indexOf("data-") && (i = oe.camelCase(i.slice(5)), l(o, i, r[i])));
                    oe._data(o, "parsedAttrs", !0)
                }
                return r
            }
            return "object" == typeof e ? this.each(function() {
                oe.data(this, e)
            }) : arguments.length > 1 ? this.each(function() {
                oe.data(this, e, t)
            }) : o ? l(o, e, oe.data(o, e)) : void 0
        },
        removeData: function(e) {
            return this.each(function() {
                oe.removeData(this, e)
            })
        }
    }), oe.extend({
        queue: function(e, t, n) {
            var i;
            if (e) return t = (t || "fx") + "queue", i = oe._data(e, t), n && (!i || oe.isArray(n) ? i = oe._data(e, t, oe.makeArray(n)) : i.push(n)), i || []
        },
        dequeue: function(e, t) {
            t = t || "fx";
            var n = oe.queue(e, t),
                i = n.length,
                r = n.shift(),
                o = oe._queueHooks(e, t),
                a = function() {
                    oe.dequeue(e, t)
                };
            "inprogress" === r && (r = n.shift(), i--), r && ("fx" === t && n.unshift("inprogress"), delete o.stop, r.call(e, a, o)), !i && o && o.empty.fire()
        },
        _queueHooks: function(e, t) {
            var n = t + "queueHooks";
            return oe._data(e, n) || oe._data(e, n, {
                empty: oe.Callbacks("once memory").add(function() {
                    oe._removeData(e, t + "queue"), oe._removeData(e, n)
                })
            })
        }
    }), oe.fn.extend({
        queue: function(e, t) {
            var n = 2;
            return "string" != typeof e && (t = e, e = "fx", n--), arguments.length < n ? oe.queue(this[0], e) : void 0 === t ? this : this.each(function() {
                var n = oe.queue(this, e, t);
                oe._queueHooks(this, e), "fx" === e && "inprogress" !== n[0] && oe.dequeue(this, e)
            })
        },
        dequeue: function(e) {
            return this.each(function() {
                oe.dequeue(this, e)
            })
        },
        clearQueue: function(e) {
            return this.queue(e || "fx", [])
        },
        promise: function(e, t) {
            var n, i = 1,
                r = oe.Deferred(),
                o = this,
                a = this.length,
                s = function() {
                    --i || r.resolveWith(o, [o])
                };
            for ("string" != typeof e && (t = e, e = void 0), e = e || "fx"; a--;) n = oe._data(o[a], e + "queueHooks"), n && n.empty && (i++, n.empty.add(s));
            return s(), r.promise(t)
        }
    });
    var _e = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        Me = ["Top", "Right", "Bottom", "Left"],
        Ce = function(e, t) {
            return e = t || e, "none" === oe.css(e, "display") || !oe.contains(e.ownerDocument, e)
        },
        Ae = oe.access = function(e, t, n, i, r, o, a) {
            var s = 0,
                l = e.length,
                c = null == n;
            if ("object" === oe.type(n)) {
                r = !0;
                for (s in n) oe.access(e, t, s, n[s], !0, o, a)
            } else if (void 0 !== i && (r = !0, oe.isFunction(i) || (a = !0), c && (a ? (t.call(e, i), t = null) : (c = t, t = function(e, t, n) {
                    return c.call(oe(e), n)
                })), t))
                for (; s < l; s++) t(e[s], n, a ? i : i.call(e[s], s, t(e[s], n)));
            return r ? e : c ? t.call(e) : l ? t(e[0], n) : o
        },
        Pe = /^(?:checkbox|radio)$/i;
    ! function() {
        var e = me.createElement("input"),
            t = me.createElement("div"),
            n = me.createDocumentFragment();
        if (t.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", ie.leadingWhitespace = 3 === t.firstChild.nodeType, ie.tbody = !t.getElementsByTagName("tbody").length, ie.htmlSerialize = !!t.getElementsByTagName("link").length, ie.html5Clone = "<:nav></:nav>" !== me.createElement("nav").cloneNode(!0).outerHTML, e.type = "checkbox", e.checked = !0, n.appendChild(e), ie.appendChecked = e.checked, t.innerHTML = "<textarea>x</textarea>", ie.noCloneChecked = !!t.cloneNode(!0).lastChild.defaultValue, n.appendChild(t), t.innerHTML = "<input type='radio' checked='checked' name='t'/>", ie.checkClone = t.cloneNode(!0).cloneNode(!0).lastChild.checked, ie.noCloneEvent = !0, t.attachEvent && (t.attachEvent("onclick", function() {
                ie.noCloneEvent = !1
            }), t.cloneNode(!0).click()), null == ie.deleteExpando) {
            ie.deleteExpando = !0;
            try {
                delete t.test
            } catch (e) {
                ie.deleteExpando = !1
            }
        }
    }(),
    function() {
        var t, n, i = me.createElement("div");
        for (t in {
                submit: !0,
                change: !0,
                focusin: !0
            }) n = "on" + t, (ie[t + "Bubbles"] = n in e) || (i.setAttribute(n, "t"), ie[t + "Bubbles"] = i.attributes[n].expando === !1);
        i = null
    }();
    var ke = /^(?:input|select|textarea)$/i,
        Le = /^key/,
        De = /^(?:mouse|pointer|contextmenu)|click/,
        Oe = /^(?:focusinfocus|focusoutblur)$/,
        Fe = /^([^.]*)(?:\.(.+)|)$/;
    oe.event = {
        global: {},
        add: function(e, t, n, i, r) {
            var o, a, s, l, c, u, h, d, p, f, m, E = oe._data(e);
            if (E) {
                for (n.handler && (l = n, n = l.handler, r = l.selector), n.guid || (n.guid = oe.guid++), (a = E.events) || (a = E.events = {}), (u = E.handle) || (u = E.handle = function(e) {
                        return typeof oe === we || e && oe.event.triggered === e.type ? void 0 : oe.event.dispatch.apply(u.elem, arguments)
                    }, u.elem = e), t = (t || "").match(Te) || [""], s = t.length; s--;) o = Fe.exec(t[s]) || [], p = m = o[1], f = (o[2] || "").split(".").sort(), p && (c = oe.event.special[p] || {}, p = (r ? c.delegateType : c.bindType) || p, c = oe.event.special[p] || {}, h = oe.extend({
                    type: p,
                    origType: m,
                    data: i,
                    handler: n,
                    guid: n.guid,
                    selector: r,
                    needsContext: r && oe.expr.match.needsContext.test(r),
                    namespace: f.join(".")
                }, l), (d = a[p]) || (d = a[p] = [], d.delegateCount = 0, c.setup && c.setup.call(e, i, f, u) !== !1 || (e.addEventListener ? e.addEventListener(p, u, !1) : e.attachEvent && e.attachEvent("on" + p, u))), c.add && (c.add.call(e, h), h.handler.guid || (h.handler.guid = n.guid)), r ? d.splice(d.delegateCount++, 0, h) : d.push(h), oe.event.global[p] = !0);
                e = null
            }
        },
        remove: function(e, t, n, i, r) {
            var o, a, s, l, c, u, h, d, p, f, m, E = oe.hasData(e) && oe._data(e);
            if (E && (u = E.events)) {
                for (t = (t || "").match(Te) || [""], c = t.length; c--;)
                    if (s = Fe.exec(t[c]) || [], p = m = s[1], f = (s[2] || "").split(".").sort(), p) {
                        for (h = oe.event.special[p] || {}, p = (i ? h.delegateType : h.bindType) || p, d = u[p] || [], s = s[2] && new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"), l = o = d.length; o--;) a = d[o], !r && m !== a.origType || n && n.guid !== a.guid || s && !s.test(a.namespace) || i && i !== a.selector && ("**" !== i || !a.selector) || (d.splice(o, 1), a.selector && d.delegateCount--, h.remove && h.remove.call(e, a));
                        l && !d.length && (h.teardown && h.teardown.call(e, f, E.handle) !== !1 || oe.removeEvent(e, p, E.handle), delete u[p])
                    } else
                        for (p in u) oe.event.remove(e, p + t[c], n, i, !0);
                oe.isEmptyObject(u) && (delete E.handle, oe._removeData(e, "events"))
            }
        },
        trigger: function(t, n, i, r) {
            var o, a, s, l, c, u, h, d = [i || me],
                p = ne.call(t, "type") ? t.type : t,
                f = ne.call(t, "namespace") ? t.namespace.split(".") : [];
            if (s = u = i = i || me, 3 !== i.nodeType && 8 !== i.nodeType && !Oe.test(p + oe.event.triggered) && (p.indexOf(".") >= 0 && (f = p.split("."), p = f.shift(), f.sort()), a = p.indexOf(":") < 0 && "on" + p, t = t[oe.expando] ? t : new oe.Event(p, "object" == typeof t && t), t.isTrigger = r ? 2 : 3, t.namespace = f.join("."), t.namespace_re = t.namespace ? new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, t.result = void 0, t.target || (t.target = i), n = null == n ? [t] : oe.makeArray(n, [t]), c = oe.event.special[p] || {}, r || !c.trigger || c.trigger.apply(i, n) !== !1)) {
                if (!r && !c.noBubble && !oe.isWindow(i)) {
                    for (l = c.delegateType || p, Oe.test(l + p) || (s = s.parentNode); s; s = s.parentNode) d.push(s), u = s;
                    u === (i.ownerDocument || me) && d.push(u.defaultView || u.parentWindow || e)
                }
                for (h = 0;
                    (s = d[h++]) && !t.isPropagationStopped();) t.type = h > 1 ? l : c.bindType || p, o = (oe._data(s, "events") || {})[t.type] && oe._data(s, "handle"), o && o.apply(s, n), o = a && s[a], o && o.apply && oe.acceptData(s) && (t.result = o.apply(s, n), t.result === !1 && t.preventDefault());
                if (t.type = p, !r && !t.isDefaultPrevented() && (!c._default || c._default.apply(d.pop(), n) === !1) && oe.acceptData(i) && a && i[p] && !oe.isWindow(i)) {
                    u = i[a], u && (i[a] = null), oe.event.triggered = p;
                    try {
                        i[p]()
                    } catch (e) {}
                    oe.event.triggered = void 0, u && (i[a] = u)
                }
                return t.result
            }
        },
        dispatch: function(e) {
            e = oe.event.fix(e);
            var t, n, i, r, o, a = [],
                s = Z.call(arguments),
                l = (oe._data(this, "events") || {})[e.type] || [],
                c = oe.event.special[e.type] || {};
            if (s[0] = e, e.delegateTarget = this, !c.preDispatch || c.preDispatch.call(this, e) !== !1) {
                for (a = oe.event.handlers.call(this, e, l), t = 0;
                    (r = a[t++]) && !e.isPropagationStopped();)
                    for (e.currentTarget = r.elem, o = 0;
                        (i = r.handlers[o++]) && !e.isImmediatePropagationStopped();) e.namespace_re && !e.namespace_re.test(i.namespace) || (e.handleObj = i, e.data = i.data, n = ((oe.event.special[i.origType] || {}).handle || i.handler).apply(r.elem, s), void 0 !== n && (e.result = n) === !1 && (e.preventDefault(), e.stopPropagation()));
                return c.postDispatch && c.postDispatch.call(this, e), e.result
            }
        },
        handlers: function(e, t) {
            var n, i, r, o, a = [],
                s = t.delegateCount,
                l = e.target;
            if (s && l.nodeType && (!e.button || "click" !== e.type))
                for (; l != this; l = l.parentNode || this)
                    if (1 === l.nodeType && (l.disabled !== !0 || "click" !== e.type)) {
                        for (r = [], o = 0; o < s; o++) i = t[o], n = i.selector + " ", void 0 === r[n] && (r[n] = i.needsContext ? oe(n, this).index(l) >= 0 : oe.find(n, this, null, [l]).length), r[n] && r.push(i);
                        r.length && a.push({
                            elem: l,
                            handlers: r
                        })
                    }
            return s < t.length && a.push({
                elem: this,
                handlers: t.slice(s)
            }), a
        },
        fix: function(e) {
            if (e[oe.expando]) return e;
            var t, n, i, r = e.type,
                o = e,
                a = this.fixHooks[r];
            for (a || (this.fixHooks[r] = a = De.test(r) ? this.mouseHooks : Le.test(r) ? this.keyHooks : {}), i = a.props ? this.props.concat(a.props) : this.props, e = new oe.Event(o), t = i.length; t--;) n = i[t], e[n] = o[n];
            return e.target || (e.target = o.srcElement || me), 3 === e.target.nodeType && (e.target = e.target.parentNode), e.metaKey = !!e.metaKey, a.filter ? a.filter(e, o) : e
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(e, t) {
                return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode), e
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(e, t) {
                var n, i, r, o = t.button,
                    a = t.fromElement;
                return null == e.pageX && null != t.clientX && (i = e.target.ownerDocument || me, r = i.documentElement, n = i.body, e.pageX = t.clientX + (r && r.scrollLeft || n && n.scrollLeft || 0) - (r && r.clientLeft || n && n.clientLeft || 0), e.pageY = t.clientY + (r && r.scrollTop || n && n.scrollTop || 0) - (r && r.clientTop || n && n.clientTop || 0)), !e.relatedTarget && a && (e.relatedTarget = a === e.target ? t.toElement : a), e.which || void 0 === o || (e.which = 1 & o ? 1 : 2 & o ? 3 : 4 & o ? 2 : 0), e
            }
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    if (this !== f() && this.focus) try {
                        return this.focus(), !1
                    } catch (e) {}
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    if (this === f() && this.blur) return this.blur(), !1
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    if (oe.nodeName(this, "input") && "checkbox" === this.type && this.click) return this.click(), !1
                },
                _default: function(e) {
                    return oe.nodeName(e.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function(e) {
                    void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
                }
            }
        },
        simulate: function(e, t, n, i) {
            var r = oe.extend(new oe.Event, n, {
                type: e,
                isSimulated: !0,
                originalEvent: {}
            });
            i ? oe.event.trigger(r, null, t) : oe.event.dispatch.call(t, r), r.isDefaultPrevented() && n.preventDefault()
        }
    }, oe.removeEvent = me.removeEventListener ? function(e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n, !1)
    } : function(e, t, n) {
        var i = "on" + t;
        e.detachEvent && (typeof e[i] === we && (e[i] = null), e.detachEvent(i, n))
    }, oe.Event = function(e, t) {
        return this instanceof oe.Event ? (e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && e.returnValue === !1 ? d : p) : this.type = e, t && oe.extend(this, t), this.timeStamp = e && e.timeStamp || oe.now(), void(this[oe.expando] = !0)) : new oe.Event(e, t)
    }, oe.Event.prototype = {
        isDefaultPrevented: p,
        isPropagationStopped: p,
        isImmediatePropagationStopped: p,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = d, e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1)
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = d, e && (e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0)
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = d, e && e.stopImmediatePropagation && e.stopImmediatePropagation(), this.stopPropagation()
        }
    }, oe.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(e, t) {
        oe.event.special[e] = {
            delegateType: t,
            bindType: t,
            handle: function(e) {
                var n, i = this,
                    r = e.relatedTarget,
                    o = e.handleObj;
                return r && (r === i || oe.contains(i, r)) || (e.type = o.origType, n = o.handler.apply(this, arguments), e.type = t), n
            }
        }
    }), ie.submitBubbles || (oe.event.special.submit = {
        setup: function() {
            return !oe.nodeName(this, "form") && void oe.event.add(this, "click._submit keypress._submit", function(e) {
                var t = e.target,
                    n = oe.nodeName(t, "input") || oe.nodeName(t, "button") ? t.form : void 0;
                n && !oe._data(n, "submitBubbles") && (oe.event.add(n, "submit._submit", function(e) {
                    e._submit_bubble = !0
                }), oe._data(n, "submitBubbles", !0))
            })
        },
        postDispatch: function(e) {
            e._submit_bubble && (delete e._submit_bubble, this.parentNode && !e.isTrigger && oe.event.simulate("submit", this.parentNode, e, !0))
        },
        teardown: function() {
            return !oe.nodeName(this, "form") && void oe.event.remove(this, "._submit")
        }
    }), ie.changeBubbles || (oe.event.special.change = {
        setup: function() {
            return ke.test(this.nodeName) ? ("checkbox" !== this.type && "radio" !== this.type || (oe.event.add(this, "propertychange._change", function(e) {
                "checked" === e.originalEvent.propertyName && (this._just_changed = !0)
            }), oe.event.add(this, "click._change", function(e) {
                this._just_changed && !e.isTrigger && (this._just_changed = !1), oe.event.simulate("change", this, e, !0)
            })), !1) : void oe.event.add(this, "beforeactivate._change", function(e) {
                var t = e.target;
                ke.test(t.nodeName) && !oe._data(t, "changeBubbles") && (oe.event.add(t, "change._change", function(e) {
                    !this.parentNode || e.isSimulated || e.isTrigger || oe.event.simulate("change", this.parentNode, e, !0)
                }), oe._data(t, "changeBubbles", !0))
            })
        },
        handle: function(e) {
            var t = e.target;
            if (this !== t || e.isSimulated || e.isTrigger || "radio" !== t.type && "checkbox" !== t.type) return e.handleObj.handler.apply(this, arguments)
        },
        teardown: function() {
            return oe.event.remove(this, "._change"), !ke.test(this.nodeName)
        }
    }), ie.focusinBubbles || oe.each({
        focus: "focusin",
        blur: "focusout"
    }, function(e, t) {
        var n = function(e) {
            oe.event.simulate(t, e.target, oe.event.fix(e), !0)
        };
        oe.event.special[t] = {
            setup: function() {
                var i = this.ownerDocument || this,
                    r = oe._data(i, t);
                r || i.addEventListener(e, n, !0), oe._data(i, t, (r || 0) + 1)
            },
            teardown: function() {
                var i = this.ownerDocument || this,
                    r = oe._data(i, t) - 1;
                r ? oe._data(i, t, r) : (i.removeEventListener(e, n, !0), oe._removeData(i, t))
            }
        }
    }), oe.fn.extend({
        on: function(e, t, n, i, r) {
            var o, a;
            if ("object" == typeof e) {
                "string" != typeof t && (n = n || t, t = void 0);
                for (o in e) this.on(o, t, n, e[o], r);
                return this
            }
            if (null == n && null == i ? (i = t, n = t = void 0) : null == i && ("string" == typeof t ? (i = n, n = void 0) : (i = n, n = t, t = void 0)), i === !1) i = p;
            else if (!i) return this;
            return 1 === r && (a = i, i = function(e) {
                return oe().off(e), a.apply(this, arguments)
            }, i.guid = a.guid || (a.guid = oe.guid++)), this.each(function() {
                oe.event.add(this, e, i, n, t)
            })
        },
        one: function(e, t, n, i) {
            return this.on(e, t, n, i, 1)
        },
        off: function(e, t, n) {
            var i, r;
            if (e && e.preventDefault && e.handleObj) return i = e.handleObj, oe(e.delegateTarget).off(i.namespace ? i.origType + "." + i.namespace : i.origType, i.selector, i.handler), this;
            if ("object" == typeof e) {
                for (r in e) this.off(r, t, e[r]);
                return this
            }
            return t !== !1 && "function" != typeof t || (n = t, t = void 0), n === !1 && (n = p), this.each(function() {
                oe.event.remove(this, e, n, t)
            })
        },
        trigger: function(e, t) {
            return this.each(function() {
                oe.event.trigger(e, t, this)
            })
        },
        triggerHandler: function(e, t) {
            var n = this[0];
            if (n) return oe.event.trigger(e, t, n, !0)
        }
    });
    var je = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        Ve = / jQuery\d+="(?:null|\d+)"/g,
        Ie = new RegExp("<(?:" + je + ")[\\s/>]", "i"),
        Ne = /^\s+/,
        Be = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        ze = /<([\w:]+)/,
        Ue = /<tbody/i,
        Ge = /<|&#?\w+;/,
        We = /<(?:script|style|link)/i,
        qe = /checked\s*(?:[^=]|=\s*.checked.)/i,
        Xe = /^$|\/(?:java|ecma)script/i,
        $e = /^true\/(.*)/,
        Ye = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
        Ze = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            area: [1, "<map>", "</map>"],
            param: [1, "<object>", "</object>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: ie.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"]
        },
        Ke = m(me),
        Qe = Ke.appendChild(me.createElement("div"));
    Ze.optgroup = Ze.option, Ze.tbody = Ze.tfoot = Ze.colgroup = Ze.caption = Ze.thead, Ze.th = Ze.td, oe.extend({
        clone: function(e, t, n) {
            var i, r, o, a, s, l = oe.contains(e.ownerDocument, e);
            if (ie.html5Clone || oe.isXMLDoc(e) || !Ie.test("<" + e.nodeName + ">") ? o = e.cloneNode(!0) : (Qe.innerHTML = e.outerHTML, Qe.removeChild(o = Qe.firstChild)), !(ie.noCloneEvent && ie.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || oe.isXMLDoc(e)))
                for (i = E(o), s = E(e), a = 0; null != (r = s[a]); ++a) i[a] && w(r, i[a]);
            if (t)
                if (n)
                    for (s = s || E(e), i = i || E(o), a = 0; null != (r = s[a]); a++) R(r, i[a]);
                else R(e, o);
            return i = E(o, "script"), i.length > 0 && x(i, !l && E(e, "script")), i = s = r = null, o
        },
        buildFragment: function(e, t, n, i) {
            for (var r, o, a, s, l, c, u, h = e.length, d = m(t), p = [], f = 0; f < h; f++)
                if (o = e[f], o || 0 === o)
                    if ("object" === oe.type(o)) oe.merge(p, o.nodeType ? [o] : o);
                    else if (Ge.test(o)) {
                for (s = s || d.appendChild(t.createElement("div")), l = (ze.exec(o) || ["", ""])[1].toLowerCase(), u = Ze[l] || Ze._default, s.innerHTML = u[1] + o.replace(Be, "<$1></$2>") + u[2], r = u[0]; r--;) s = s.lastChild;
                if (!ie.leadingWhitespace && Ne.test(o) && p.push(t.createTextNode(Ne.exec(o)[0])), !ie.tbody)
                    for (o = "table" !== l || Ue.test(o) ? "<table>" !== u[1] || Ue.test(o) ? 0 : s : s.firstChild, r = o && o.childNodes.length; r--;) oe.nodeName(c = o.childNodes[r], "tbody") && !c.childNodes.length && o.removeChild(c);
                for (oe.merge(p, s.childNodes), s.textContent = ""; s.firstChild;) s.removeChild(s.firstChild);
                s = d.lastChild
            } else p.push(t.createTextNode(o));
            for (s && d.removeChild(s), ie.appendChecked || oe.grep(E(p, "input"), g), f = 0; o = p[f++];)
                if ((!i || oe.inArray(o, i) === -1) && (a = oe.contains(o.ownerDocument, o), s = E(d.appendChild(o), "script"), a && x(s), n))
                    for (r = 0; o = s[r++];) Xe.test(o.type || "") && n.push(o);
            return s = null, d
        },
        cleanData: function(e, t) {
            for (var n, i, r, o, a = 0, s = oe.expando, l = oe.cache, c = ie.deleteExpando, u = oe.event.special; null != (n = e[a]); a++)
                if ((t || oe.acceptData(n)) && (r = n[s], o = r && l[r])) {
                    if (o.events)
                        for (i in o.events) u[i] ? oe.event.remove(n, i) : oe.removeEvent(n, i, o.handle);
                    l[r] && (delete l[r], c ? delete n[s] : typeof n.removeAttribute !== we ? n.removeAttribute(s) : n[s] = null, Y.push(r))
                }
        }
    }), oe.fn.extend({
        text: function(e) {
            return Ae(this, function(e) {
                return void 0 === e ? oe.text(this) : this.empty().append((this[0] && this[0].ownerDocument || me).createTextNode(e))
            }, null, e, arguments.length)
        },
        append: function() {
            return this.domManip(arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = v(this, e);
                    t.appendChild(e)
                }
            })
        },
        prepend: function() {
            return this.domManip(arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = v(this, e);
                    t.insertBefore(e, t.firstChild)
                }
            })
        },
        before: function() {
            return this.domManip(arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this)
            })
        },
        after: function() {
            return this.domManip(arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
            })
        },
        remove: function(e, t) {
            for (var n, i = e ? oe.filter(e, this) : this, r = 0; null != (n = i[r]); r++) t || 1 !== n.nodeType || oe.cleanData(E(n)), n.parentNode && (t && oe.contains(n.ownerDocument, n) && x(E(n, "script")), n.parentNode.removeChild(n));
            return this
        },
        empty: function() {
            for (var e, t = 0; null != (e = this[t]); t++) {
                for (1 === e.nodeType && oe.cleanData(E(e, !1)); e.firstChild;) e.removeChild(e.firstChild);
                e.options && oe.nodeName(e, "select") && (e.options.length = 0)
            }
            return this
        },
        clone: function(e, t) {
            return e = null != e && e, t = null == t ? e : t, this.map(function() {
                return oe.clone(this, e, t)
            })
        },
        html: function(e) {
            return Ae(this, function(e) {
                var t = this[0] || {},
                    n = 0,
                    i = this.length;
                if (void 0 === e) return 1 === t.nodeType ? t.innerHTML.replace(Ve, "") : void 0;
                if ("string" == typeof e && !We.test(e) && (ie.htmlSerialize || !Ie.test(e)) && (ie.leadingWhitespace || !Ne.test(e)) && !Ze[(ze.exec(e) || ["", ""])[1].toLowerCase()]) {
                    e = e.replace(Be, "<$1></$2>");
                    try {
                        for (; n < i; n++) t = this[n] || {}, 1 === t.nodeType && (oe.cleanData(E(t, !1)), t.innerHTML = e);
                        t = 0
                    } catch (e) {}
                }
                t && this.empty().append(e)
            }, null, e, arguments.length)
        },
        replaceWith: function() {
            var e = arguments[0];
            return this.domManip(arguments, function(t) {
                e = this.parentNode, oe.cleanData(E(this)), e && e.replaceChild(t, this)
            }), e && (e.length || e.nodeType) ? this : this.remove()
        },
        detach: function(e) {
            return this.remove(e, !0)
        },
        domManip: function(e, t) {
            e = K.apply([], e);
            var n, i, r, o, a, s, l = 0,
                c = this.length,
                u = this,
                h = c - 1,
                d = e[0],
                p = oe.isFunction(d);
            if (p || c > 1 && "string" == typeof d && !ie.checkClone && qe.test(d)) return this.each(function(n) {
                var i = u.eq(n);
                p && (e[0] = d.call(this, n, i.html())), i.domManip(e, t)
            });
            if (c && (s = oe.buildFragment(e, this[0].ownerDocument, !1, this), n = s.firstChild, 1 === s.childNodes.length && (s = n), n)) {
                for (o = oe.map(E(s, "script"), y), r = o.length; l < c; l++) i = s, l !== h && (i = oe.clone(i, !0, !0), r && oe.merge(o, E(i, "script"))), t.call(this[l], i, l);
                if (r)
                    for (a = o[o.length - 1].ownerDocument, oe.map(o, T), l = 0; l < r; l++) i = o[l], Xe.test(i.type || "") && !oe._data(i, "globalEval") && oe.contains(a, i) && (i.src ? oe._evalUrl && oe._evalUrl(i.src) : oe.globalEval((i.text || i.textContent || i.innerHTML || "").replace(Ye, "")));
                s = n = null
            }
            return this
        }
    }), oe.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(e, t) {
        oe.fn[e] = function(e) {
            for (var n, i = 0, r = [], o = oe(e), a = o.length - 1; i <= a; i++) n = i === a ? this : this.clone(!0), oe(o[i])[t](n), Q.apply(r, n.get());
            return this.pushStack(r)
        }
    });
    var Je, et = {};
    ! function() {
        var e;
        ie.shrinkWrapBlocks = function() {
            if (null != e) return e;
            e = !1;
            var t, n, i;
            return n = me.getElementsByTagName("body")[0], n && n.style ? (t = me.createElement("div"), i = me.createElement("div"), i.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", n.appendChild(i).appendChild(t), typeof t.style.zoom !== we && (t.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1", t.appendChild(me.createElement("div")).style.width = "5px", e = 3 !== t.offsetWidth), n.removeChild(i), e) : void 0
        }
    }();
    var tt = /^margin/,
        nt = new RegExp("^(" + _e + ")(?!px)[a-z%]+$", "i"),
        it, rt, ot = /^(top|right|bottom|left)$/;
    e.getComputedStyle ? (it = function(t) {
            return t.ownerDocument.defaultView.opener ? t.ownerDocument.defaultView.getComputedStyle(t, null) : e.getComputedStyle(t, null)
        }, rt = function(e, t, n) {
            var i, r, o, a, s = e.style;
            return n = n || it(e), a = n ? n.getPropertyValue(t) || n[t] : void 0, n && ("" !== a || oe.contains(e.ownerDocument, e) || (a = oe.style(e, t)), nt.test(a) && tt.test(t) && (i = s.width, r = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = i, s.minWidth = r, s.maxWidth = o)), void 0 === a ? a : a + ""
        }) : me.documentElement.currentStyle && (it = function(e) {
            return e.currentStyle
        }, rt = function(e, t, n) {
            var i, r, o, a, s = e.style;
            return n = n || it(e), a = n ? n[t] : void 0, null == a && s && s[t] && (a = s[t]), nt.test(a) && !ot.test(t) && (i = s.left, r = e.runtimeStyle, o = r && r.left, o && (r.left = e.currentStyle.left), s.left = "fontSize" === t ? "1em" : a, a = s.pixelLeft + "px", s.left = i, o && (r.left = o)), void 0 === a ? a : a + "" || "auto"
        }),
        function() {
            function t() {
                var t, n, i, r;
                n = me.getElementsByTagName("body")[0], n && n.style && (t = me.createElement("div"), i = me.createElement("div"), i.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px", n.appendChild(i).appendChild(t), t.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", o = a = !1, l = !0, e.getComputedStyle && (o = "1%" !== (e.getComputedStyle(t, null) || {}).top, a = "4px" === (e.getComputedStyle(t, null) || {
                    width: "4px"
                }).width, r = t.appendChild(me.createElement("div")), r.style.cssText = t.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", r.style.marginRight = r.style.width = "0", t.style.width = "1px", l = !parseFloat((e.getComputedStyle(r, null) || {}).marginRight), t.removeChild(r)), t.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", r = t.getElementsByTagName("td"), r[0].style.cssText = "margin:0;border:0;padding:0;display:none", s = 0 === r[0].offsetHeight, s && (r[0].style.display = "", r[1].style.display = "none", s = 0 === r[0].offsetHeight), n.removeChild(i))
            }
            var n, i, r, o, a, s, l;
            n = me.createElement("div"), n.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", r = n.getElementsByTagName("a")[0], i = r && r.style, i && (i.cssText = "float:left;opacity:.5", ie.opacity = "0.5" === i.opacity, ie.cssFloat = !!i.cssFloat, n.style.backgroundClip = "content-box", n.cloneNode(!0).style.backgroundClip = "", ie.clearCloneStyle = "content-box" === n.style.backgroundClip, ie.boxSizing = "" === i.boxSizing || "" === i.MozBoxSizing || "" === i.WebkitBoxSizing, oe.extend(ie, {
                reliableHiddenOffsets: function() {
                    return null == s && t(), s
                },
                boxSizingReliable: function() {
                    return null == a && t(), a
                },
                pixelPosition: function() {
                    return null == o && t(), o
                },
                reliableMarginRight: function() {
                    return null == l && t(), l
                }
            }))
        }(), oe.swap = function(e, t, n, i) {
            var r, o, a = {};
            for (o in t) a[o] = e.style[o], e.style[o] = t[o];
            r = n.apply(e, i || []);
            for (o in t) e.style[o] = a[o];
            return r
        };
    var at = /alpha\([^)]*\)/i,
        st = /opacity\s*=\s*([^)]*)/,
        lt = /^(none|table(?!-c[ea]).+)/,
        ct = new RegExp("^(" + _e + ")(.*)$", "i"),
        ut = new RegExp("^([+-])=(" + _e + ")", "i"),
        ht = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        dt = {
            letterSpacing: "0",
            fontWeight: "400"
        },
        pt = ["Webkit", "O", "Moz", "ms"];
    oe.extend({
        cssHooks: {
            opacity: {
                get: function(e, t) {
                    if (t) {
                        var n = rt(e, "opacity");
                        return "" === n ? "1" : n
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            float: ie.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(e, t, n, i) {
            if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                var r, o, a, s = oe.camelCase(t),
                    l = e.style;
                if (t = oe.cssProps[s] || (oe.cssProps[s] = _(l, s)), a = oe.cssHooks[t] || oe.cssHooks[s], void 0 === n) return a && "get" in a && void 0 !== (r = a.get(e, !1, i)) ? r : l[t];
                if (o = typeof n, "string" === o && (r = ut.exec(n)) && (n = (r[1] + 1) * r[2] + parseFloat(oe.css(e, t)), o = "number"), null != n && n === n && ("number" !== o || oe.cssNumber[s] || (n += "px"), ie.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), !(a && "set" in a && void 0 === (n = a.set(e, n, i))))) try {
                    l[t] = n
                } catch (e) {}
            }
        },
        css: function(e, t, n, i) {
            var r, o, a, s = oe.camelCase(t);
            return t = oe.cssProps[s] || (oe.cssProps[s] = _(e.style, s)), a = oe.cssHooks[t] || oe.cssHooks[s], a && "get" in a && (o = a.get(e, !0, n)), void 0 === o && (o = rt(e, t, i)), "normal" === o && t in dt && (o = dt[t]), "" === n || n ? (r = parseFloat(o), n === !0 || oe.isNumeric(r) ? r || 0 : o) : o
        }
    }), oe.each(["height", "width"], function(e, t) {
        oe.cssHooks[t] = {
            get: function(e, n, i) {
                if (n) return lt.test(oe.css(e, "display")) && 0 === e.offsetWidth ? oe.swap(e, ht, function() {
                    return P(e, t, i)
                }) : P(e, t, i)
            },
            set: function(e, n, i) {
                var r = i && it(e);
                return C(e, n, i ? A(e, t, i, ie.boxSizing && "border-box" === oe.css(e, "boxSizing", !1, r), r) : 0)
            }
        }
    }), ie.opacity || (oe.cssHooks.opacity = {
        get: function(e, t) {
            return st.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : t ? "1" : ""
        },
        set: function(e, t) {
            var n = e.style,
                i = e.currentStyle,
                r = oe.isNumeric(t) ? "alpha(opacity=" + 100 * t + ")" : "",
                o = i && i.filter || n.filter || "";
            n.zoom = 1, (t >= 1 || "" === t) && "" === oe.trim(o.replace(at, "")) && n.removeAttribute && (n.removeAttribute("filter"), "" === t || i && !i.filter) || (n.filter = at.test(o) ? o.replace(at, r) : o + " " + r)
        }
    }), oe.cssHooks.marginRight = S(ie.reliableMarginRight, function(e, t) {
        if (t) return oe.swap(e, {
            display: "inline-block"
        }, rt, [e, "marginRight"])
    }), oe.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(e, t) {
        oe.cssHooks[e + t] = {
            expand: function(n) {
                for (var i = 0, r = {}, o = "string" == typeof n ? n.split(" ") : [n]; i < 4; i++) r[e + Me[i] + t] = o[i] || o[i - 2] || o[0];
                return r
            }
        }, tt.test(e) || (oe.cssHooks[e + t].set = C)
    }), oe.fn.extend({
        css: function(e, t) {
            return Ae(this, function(e, t, n) {
                var i, r, o = {},
                    a = 0;
                if (oe.isArray(t)) {
                    for (i = it(e), r = t.length; a < r; a++) o[t[a]] = oe.css(e, t[a], !1, i);
                    return o
                }
                return void 0 !== n ? oe.style(e, t, n) : oe.css(e, t)
            }, e, t, arguments.length > 1)
        },
        show: function() {
            return M(this, !0)
        },
        hide: function() {
            return M(this)
        },
        toggle: function(e) {
            return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function() {
                Ce(this) ? oe(this).show() : oe(this).hide()
            })
        }
    }), oe.Tween = k, k.prototype = {
        constructor: k,
        init: function(e, t, n, i, r, o) {
            this.elem = e, this.prop = n, this.easing = r || "swing", this.options = t, this.start = this.now = this.cur(), this.end = i, this.unit = o || (oe.cssNumber[n] ? "" : "px")
        },
        cur: function() {
            var e = k.propHooks[this.prop];
            return e && e.get ? e.get(this) : k.propHooks._default.get(this)
        },
        run: function(e) {
            var t, n = k.propHooks[this.prop];
            return this.options.duration ? this.pos = t = oe.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : k.propHooks._default.set(this), this
        }
    }, k.prototype.init.prototype = k.prototype, k.propHooks = {
        _default: {
            get: function(e) {
                var t;
                return null == e.elem[e.prop] || e.elem.style && null != e.elem.style[e.prop] ? (t = oe.css(e.elem, e.prop, ""), t && "auto" !== t ? t : 0) : e.elem[e.prop]
            },
            set: function(e) {
                oe.fx.step[e.prop] ? oe.fx.step[e.prop](e) : e.elem.style && (null != e.elem.style[oe.cssProps[e.prop]] || oe.cssHooks[e.prop]) ? oe.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now
            }
        }
    }, k.propHooks.scrollTop = k.propHooks.scrollLeft = {
        set: function(e) {
            e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
        }
    }, oe.easing = {
        linear: function(e) {
            return e
        },
        swing: function(e) {
            return .5 - Math.cos(e * Math.PI) / 2
        }
    }, oe.fx = k.prototype.init, oe.fx.step = {};
    var ft, mt, Et = /^(?:toggle|show|hide)$/,
        gt = new RegExp("^(?:([+-])=|)(" + _e + ")([a-z%]*)$", "i"),
        vt = /queueHooks$/,
        yt = [F],
        Tt = {
            "*": [function(e, t) {
                var n = this.createTween(e, t),
                    i = n.cur(),
                    r = gt.exec(t),
                    o = r && r[3] || (oe.cssNumber[e] ? "" : "px"),
                    a = (oe.cssNumber[e] || "px" !== o && +i) && gt.exec(oe.css(n.elem, e)),
                    s = 1,
                    l = 20;
                if (a && a[3] !== o) {
                    o = o || a[3], r = r || [], a = +i || 1;
                    do s = s || ".5", a /= s, oe.style(n.elem, e, a + o); while (s !== (s = n.cur() / i) && 1 !== s && --l)
                }
                return r && (a = n.start = +a || +i || 0, n.unit = o, n.end = r[1] ? a + (r[1] + 1) * r[2] : +r[2]), n
            }]
        };
    oe.Animation = oe.extend(V, {
            tweener: function(e, t) {
                oe.isFunction(e) ? (t = e, e = ["*"]) : e = e.split(" ");
                for (var n, i = 0, r = e.length; i < r; i++) n = e[i], Tt[n] = Tt[n] || [], Tt[n].unshift(t)
            },
            prefilter: function(e, t) {
                t ? yt.unshift(e) : yt.push(e)
            }
        }), oe.speed = function(e, t, n) {
            var i = e && "object" == typeof e ? oe.extend({}, e) : {
                complete: n || !n && t || oe.isFunction(e) && e,
                duration: e,
                easing: n && t || t && !oe.isFunction(t) && t
            };
            return i.duration = oe.fx.off ? 0 : "number" == typeof i.duration ? i.duration : i.duration in oe.fx.speeds ? oe.fx.speeds[i.duration] : oe.fx.speeds._default, null != i.queue && i.queue !== !0 || (i.queue = "fx"), i.old = i.complete, i.complete = function() {
                oe.isFunction(i.old) && i.old.call(this), i.queue && oe.dequeue(this, i.queue)
            }, i
        }, oe.fn.extend({
            fadeTo: function(e, t, n, i) {
                return this.filter(Ce).css("opacity", 0).show().end().animate({
                    opacity: t
                }, e, n, i)
            },
            animate: function(e, t, n, i) {
                var r = oe.isEmptyObject(e),
                    o = oe.speed(t, n, i),
                    a = function() {
                        var t = V(this, oe.extend({}, e), o);
                        (r || oe._data(this, "finish")) && t.stop(!0)
                    };
                return a.finish = a, r || o.queue === !1 ? this.each(a) : this.queue(o.queue, a)
            },
            stop: function(e, t, n) {
                var i = function(e) {
                    var t = e.stop;
                    delete e.stop, t(n)
                };
                return "string" != typeof e && (n = t, t = e, e = void 0), t && e !== !1 && this.queue(e || "fx", []), this.each(function() {
                    var t = !0,
                        r = null != e && e + "queueHooks",
                        o = oe.timers,
                        a = oe._data(this);
                    if (r) a[r] && a[r].stop && i(a[r]);
                    else
                        for (r in a) a[r] && a[r].stop && vt.test(r) && i(a[r]);
                    for (r = o.length; r--;) o[r].elem !== this || null != e && o[r].queue !== e || (o[r].anim.stop(n), t = !1, o.splice(r, 1));
                    !t && n || oe.dequeue(this, e)
                })
            },
            finish: function(e) {
                return e !== !1 && (e = e || "fx"), this.each(function() {
                    var t, n = oe._data(this),
                        i = n[e + "queue"],
                        r = n[e + "queueHooks"],
                        o = oe.timers,
                        a = i ? i.length : 0;
                    for (n.finish = !0, oe.queue(this, e, []), r && r.stop && r.stop.call(this, !0), t = o.length; t--;) o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0), o.splice(t, 1));
                    for (t = 0; t < a; t++) i[t] && i[t].finish && i[t].finish.call(this);
                    delete n.finish
                })
            }
        }), oe.each(["toggle", "show", "hide"], function(e, t) {
            var n = oe.fn[t];
            oe.fn[t] = function(e, i, r) {
                return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(D(t, !0), e, i, r)
            }
        }), oe.each({
            slideDown: D("show"),
            slideUp: D("hide"),
            slideToggle: D("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, function(e, t) {
            oe.fn[e] = function(e, n, i) {
                return this.animate(t, e, n, i)
            }
        }), oe.timers = [], oe.fx.tick = function() {
            var e, t = oe.timers,
                n = 0;
            for (ft = oe.now(); n < t.length; n++) e = t[n], e() || t[n] !== e || t.splice(n--, 1);
            t.length || oe.fx.stop(), ft = void 0
        }, oe.fx.timer = function(e) {
            oe.timers.push(e), e() ? oe.fx.start() : oe.timers.pop()
        }, oe.fx.interval = 13, oe.fx.start = function() {
            mt || (mt = setInterval(oe.fx.tick, oe.fx.interval))
        }, oe.fx.stop = function() {
            clearInterval(mt), mt = null
        }, oe.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        }, oe.fn.delay = function(e, t) {
            return e = oe.fx ? oe.fx.speeds[e] || e : e, t = t || "fx", this.queue(t, function(t, n) {
                var i = setTimeout(t, e);
                n.stop = function() {
                    clearTimeout(i)
                }
            })
        },
        function() {
            var e, t, n, i, r;
            t = me.createElement("div"), t.setAttribute("className", "t"), t.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", i = t.getElementsByTagName("a")[0], n = me.createElement("select"), r = n.appendChild(me.createElement("option")), e = t.getElementsByTagName("input")[0], i.style.cssText = "top:1px", ie.getSetAttribute = "t" !== t.className, ie.style = /top/.test(i.getAttribute("style")), ie.hrefNormalized = "/a" === i.getAttribute("href"), ie.checkOn = !!e.value, ie.optSelected = r.selected, ie.enctype = !!me.createElement("form").enctype, n.disabled = !0, ie.optDisabled = !r.disabled, e = me.createElement("input"), e.setAttribute("value", ""), ie.input = "" === e.getAttribute("value"), e.value = "t", e.setAttribute("type", "radio"), ie.radioValue = "t" === e.value
        }();
    var xt = /\r/g;
    oe.fn.extend({
        val: function(e) {
            var t, n, i, r = this[0]; {
                if (arguments.length) return i = oe.isFunction(e), this.each(function(n) {
                    var r;
                    1 === this.nodeType && (r = i ? e.call(this, n, oe(this).val()) : e, null == r ? r = "" : "number" == typeof r ? r += "" : oe.isArray(r) && (r = oe.map(r, function(e) {
                        return null == e ? "" : e + ""
                    })), t = oe.valHooks[this.type] || oe.valHooks[this.nodeName.toLowerCase()], t && "set" in t && void 0 !== t.set(this, r, "value") || (this.value = r))
                });
                if (r) return t = oe.valHooks[r.type] || oe.valHooks[r.nodeName.toLowerCase()], t && "get" in t && void 0 !== (n = t.get(r, "value")) ? n : (n = r.value, "string" == typeof n ? n.replace(xt, "") : null == n ? "" : n)
            }
        }
    }), oe.extend({
        valHooks: {
            option: {
                get: function(e) {
                    var t = oe.find.attr(e, "value");
                    return null != t ? t : oe.trim(oe.text(e))
                }
            },
            select: {
                get: function(e) {
                    for (var t, n, i = e.options, r = e.selectedIndex, o = "select-one" === e.type || r < 0, a = o ? null : [], s = o ? r + 1 : i.length, l = r < 0 ? s : o ? r : 0; l < s; l++)
                        if (n = i[l], (n.selected || l === r) && (ie.optDisabled ? !n.disabled : null === n.getAttribute("disabled")) && (!n.parentNode.disabled || !oe.nodeName(n.parentNode, "optgroup"))) {
                            if (t = oe(n).val(), o) return t;
                            a.push(t)
                        }
                    return a
                },
                set: function(e, t) {
                    for (var n, i, r = e.options, o = oe.makeArray(t), a = r.length; a--;)
                        if (i = r[a], oe.inArray(oe.valHooks.option.get(i), o) >= 0) try {
                            i.selected = n = !0
                        } catch (e) {
                            i.scrollHeight
                        } else i.selected = !1;
                    return n || (e.selectedIndex = -1), r
                }
            }
        }
    }), oe.each(["radio", "checkbox"], function() {
        oe.valHooks[this] = {
            set: function(e, t) {
                if (oe.isArray(t)) return e.checked = oe.inArray(oe(e).val(), t) >= 0
            }
        }, ie.checkOn || (oe.valHooks[this].get = function(e) {
            return null === e.getAttribute("value") ? "on" : e.value
        })
    });
    var Rt, wt, bt = oe.expr.attrHandle,
        Ht = /^(?:checked|selected)$/i,
        St = ie.getSetAttribute,
        _t = ie.input;
    oe.fn.extend({
        attr: function(e, t) {
            return Ae(this, oe.attr, e, t, arguments.length > 1)
        },
        removeAttr: function(e) {
            return this.each(function() {
                oe.removeAttr(this, e)
            })
        }
    }), oe.extend({
        attr: function(e, t, n) {
            var i, r, o = e.nodeType;
            if (e && 3 !== o && 8 !== o && 2 !== o) return typeof e.getAttribute === we ? oe.prop(e, t, n) : (1 === o && oe.isXMLDoc(e) || (t = t.toLowerCase(), i = oe.attrHooks[t] || (oe.expr.match.bool.test(t) ? wt : Rt)), void 0 === n ? i && "get" in i && null !== (r = i.get(e, t)) ? r : (r = oe.find.attr(e, t), null == r ? void 0 : r) : null !== n ? i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""), n) : void oe.removeAttr(e, t))
        },
        removeAttr: function(e, t) {
            var n, i, r = 0,
                o = t && t.match(Te);
            if (o && 1 === e.nodeType)
                for (; n = o[r++];) i = oe.propFix[n] || n, oe.expr.match.bool.test(n) ? _t && St || !Ht.test(n) ? e[i] = !1 : e[oe.camelCase("default-" + n)] = e[i] = !1 : oe.attr(e, n, ""), e.removeAttribute(St ? n : i)
        },
        attrHooks: {
            type: {
                set: function(e, t) {
                    if (!ie.radioValue && "radio" === t && oe.nodeName(e, "input")) {
                        var n = e.value;
                        return e.setAttribute("type", t), n && (e.value = n), t
                    }
                }
            }
        }
    }), wt = {
        set: function(e, t, n) {
            return t === !1 ? oe.removeAttr(e, n) : _t && St || !Ht.test(n) ? e.setAttribute(!St && oe.propFix[n] || n, n) : e[oe.camelCase("default-" + n)] = e[n] = !0, n
        }
    }, oe.each(oe.expr.match.bool.source.match(/\w+/g), function(e, t) {
        var n = bt[t] || oe.find.attr;
        bt[t] = _t && St || !Ht.test(t) ? function(e, t, i) {
            var r, o;
            return i || (o = bt[t], bt[t] = r, r = null != n(e, t, i) ? t.toLowerCase() : null, bt[t] = o), r
        } : function(e, t, n) {
            if (!n) return e[oe.camelCase("default-" + t)] ? t.toLowerCase() : null
        }
    }), _t && St || (oe.attrHooks.value = {
        set: function(e, t, n) {
            return oe.nodeName(e, "input") ? void(e.defaultValue = t) : Rt && Rt.set(e, t, n)
        }
    }), St || (Rt = {
        set: function(e, t, n) {
            var i = e.getAttributeNode(n);
            if (i || e.setAttributeNode(i = e.ownerDocument.createAttribute(n)), i.value = t += "", "value" === n || t === e.getAttribute(n)) return t
        }
    }, bt.id = bt.name = bt.coords = function(e, t, n) {
        var i;
        if (!n) return (i = e.getAttributeNode(t)) && "" !== i.value ? i.value : null
    }, oe.valHooks.button = {
        get: function(e, t) {
            var n = e.getAttributeNode(t);
            if (n && n.specified) return n.value
        },
        set: Rt.set
    }, oe.attrHooks.contenteditable = {
        set: function(e, t, n) {
            Rt.set(e, "" !== t && t, n)
        }
    }, oe.each(["width", "height"], function(e, t) {
        oe.attrHooks[t] = {
            set: function(e, n) {
                if ("" === n) return e.setAttribute(t, "auto"), n
            }
        }
    })), ie.style || (oe.attrHooks.style = {
        get: function(e) {
            return e.style.cssText || void 0
        },
        set: function(e, t) {
            return e.style.cssText = t + ""
        }
    });
    var Mt = /^(?:input|select|textarea|button|object)$/i,
        Ct = /^(?:a|area)$/i;
    oe.fn.extend({
        prop: function(e, t) {
            return Ae(this, oe.prop, e, t, arguments.length > 1)
        },
        removeProp: function(e) {
            return e = oe.propFix[e] || e, this.each(function() {
                try {
                    this[e] = void 0, delete this[e]
                } catch (e) {}
            })
        }
    }), oe.extend({
        propFix: {
            for: "htmlFor",
            class: "className"
        },
        prop: function(e, t, n) {
            var i, r, o, a = e.nodeType;
            if (e && 3 !== a && 8 !== a && 2 !== a) return o = 1 !== a || !oe.isXMLDoc(e), o && (t = oe.propFix[t] || t, r = oe.propHooks[t]), void 0 !== n ? r && "set" in r && void 0 !== (i = r.set(e, n, t)) ? i : e[t] = n : r && "get" in r && null !== (i = r.get(e, t)) ? i : e[t]
        },
        propHooks: {
            tabIndex: {
                get: function(e) {
                    var t = oe.find.attr(e, "tabindex");
                    return t ? parseInt(t, 10) : Mt.test(e.nodeName) || Ct.test(e.nodeName) && e.href ? 0 : -1
                }
            }
        }
    }), ie.hrefNormalized || oe.each(["href", "src"], function(e, t) {
        oe.propHooks[t] = {
            get: function(e) {
                return e.getAttribute(t, 4)
            }
        }
    }), ie.optSelected || (oe.propHooks.selected = {
        get: function(e) {
            var t = e.parentNode;
            return t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex), null
        }
    }), oe.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        oe.propFix[this.toLowerCase()] = this
    }), ie.enctype || (oe.propFix.enctype = "encoding");
    var At = /[\t\r\n\f]/g;
    oe.fn.extend({
        addClass: function(e) {
            var t, n, i, r, o, a, s = 0,
                l = this.length,
                c = "string" == typeof e && e;
            if (oe.isFunction(e)) return this.each(function(t) {
                oe(this).addClass(e.call(this, t, this.className))
            });
            if (c)
                for (t = (e || "").match(Te) || []; s < l; s++)
                    if (n = this[s], i = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(At, " ") : " ")) {
                        for (o = 0; r = t[o++];) i.indexOf(" " + r + " ") < 0 && (i += r + " ");
                        a = oe.trim(i), n.className !== a && (n.className = a)
                    }
            return this
        },
        removeClass: function(e) {
            var t, n, i, r, o, a, s = 0,
                l = this.length,
                c = 0 === arguments.length || "string" == typeof e && e;
            if (oe.isFunction(e)) return this.each(function(t) {
                oe(this).removeClass(e.call(this, t, this.className))
            });
            if (c)
                for (t = (e || "").match(Te) || []; s < l; s++)
                    if (n = this[s], i = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(At, " ") : "")) {
                        for (o = 0; r = t[o++];)
                            for (; i.indexOf(" " + r + " ") >= 0;) i = i.replace(" " + r + " ", " ");
                        a = e ? oe.trim(i) : "", n.className !== a && (n.className = a)
                    }
            return this
        },
        toggleClass: function(e, t) {
            var n = typeof e;
            return "boolean" == typeof t && "string" === n ? t ? this.addClass(e) : this.removeClass(e) : oe.isFunction(e) ? this.each(function(n) {
                oe(this).toggleClass(e.call(this, n, this.className, t), t)
            }) : this.each(function() {
                if ("string" === n)
                    for (var t, i = 0, r = oe(this), o = e.match(Te) || []; t = o[i++];) r.hasClass(t) ? r.removeClass(t) : r.addClass(t);
                else n !== we && "boolean" !== n || (this.className && oe._data(this, "__className__", this.className), this.className = this.className || e === !1 ? "" : oe._data(this, "__className__") || "")
            })
        },
        hasClass: function(e) {
            for (var t = " " + e + " ", n = 0, i = this.length; n < i; n++)
                if (1 === this[n].nodeType && (" " + this[n].className + " ").replace(At, " ").indexOf(t) >= 0) return !0;
            return !1
        }
    }), oe.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(e, t) {
        oe.fn[t] = function(e, n) {
            return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t)
        }
    }), oe.fn.extend({
        hover: function(e, t) {
            return this.mouseenter(e).mouseleave(t || e)
        },
        bind: function(e, t, n) {
            return this.on(e, null, t, n)
        },
        unbind: function(e, t) {
            return this.off(e, null, t)
        },
        delegate: function(e, t, n, i) {
            return this.on(t, e, n, i)
        },
        undelegate: function(e, t, n) {
            return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n)
        }
    });
    var Pt = oe.now(),
        kt = /\?/,
        Lt = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
    oe.parseJSON = function(t) {
        if (e.JSON && e.JSON.parse) return e.JSON.parse(t + "");
        var n, i = null,
            r = oe.trim(t + "");
        return r && !oe.trim(r.replace(Lt, function(e, t, r, o) {
            return n && t && (i = 0), 0 === i ? e : (n = r || t, i += !o - !r, "")
        })) ? Function("return " + r)() : oe.error("Invalid JSON: " + t)
    }, oe.parseXML = function(t) {
        var n, i;
        if (!t || "string" != typeof t) return null;
        try {
            e.DOMParser ? (i = new DOMParser, n = i.parseFromString(t, "text/xml")) : (n = new ActiveXObject("Microsoft.XMLDOM"), n.async = "false", n.loadXML(t))
        } catch (e) {
            n = void 0
        }
        return n && n.documentElement && !n.getElementsByTagName("parsererror").length || oe.error("Invalid XML: " + t), n
    };
    var Dt, Ot, Ft = /#.*$/,
        jt = /([?&])_=[^&]*/,
        Vt = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
        It = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
        Nt = /^(?:GET|HEAD)$/,
        Bt = /^\/\//,
        zt = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
        Ut = {},
        Gt = {},
        Wt = "*/".concat("*");
    try {
        Ot = location.href
    } catch (e) {
        Ot = me.createElement("a"), Ot.href = "", Ot = Ot.href
    }
    Dt = zt.exec(Ot.toLowerCase()) || [], oe.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Ot,
            type: "GET",
            isLocal: It.test(Dt[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Wt,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": oe.parseJSON,
                "text xml": oe.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(e, t) {
            return t ? B(B(e, oe.ajaxSettings), t) : B(oe.ajaxSettings, e)
        },
        ajaxPrefilter: I(Ut),
        ajaxTransport: I(Gt),
        ajax: function(e, t) {
            function n(e, t, n, i) {
                var r, u, g, v, T, R = t;
                2 !== y && (y = 2, s && clearTimeout(s), c = void 0, a = i || "", x.readyState = e > 0 ? 4 : 0, r = e >= 200 && e < 300 || 304 === e, n && (v = z(h, x, n)), v = U(h, v, x, r), r ? (h.ifModified && (T = x.getResponseHeader("Last-Modified"), T && (oe.lastModified[o] = T), T = x.getResponseHeader("etag"), T && (oe.etag[o] = T)), 204 === e || "HEAD" === h.type ? R = "nocontent" : 304 === e ? R = "notmodified" : (R = v.state, u = v.data, g = v.error, r = !g)) : (g = R, !e && R || (R = "error", e < 0 && (e = 0))), x.status = e, x.statusText = (t || R) + "", r ? f.resolveWith(d, [u, R, x]) : f.rejectWith(d, [x, R, g]), x.statusCode(E), E = void 0, l && p.trigger(r ? "ajaxSuccess" : "ajaxError", [x, h, r ? u : g]), m.fireWith(d, [x, R]), l && (p.trigger("ajaxComplete", [x, h]), --oe.active || oe.event.trigger("ajaxStop")))
            }
            "object" == typeof e && (t = e, e = void 0), t = t || {};
            var i, r, o, a, s, l, c, u, h = oe.ajaxSetup({}, t),
                d = h.context || h,
                p = h.context && (d.nodeType || d.jquery) ? oe(d) : oe.event,
                f = oe.Deferred(),
                m = oe.Callbacks("once memory"),
                E = h.statusCode || {},
                g = {},
                v = {},
                y = 0,
                T = "canceled",
                x = {
                    readyState: 0,
                    getResponseHeader: function(e) {
                        var t;
                        if (2 === y) {
                            if (!u)
                                for (u = {}; t = Vt.exec(a);) u[t[1].toLowerCase()] = t[2];
                            t = u[e.toLowerCase()]
                        }
                        return null == t ? null : t
                    },
                    getAllResponseHeaders: function() {
                        return 2 === y ? a : null
                    },
                    setRequestHeader: function(e, t) {
                        var n = e.toLowerCase();
                        return y || (e = v[n] = v[n] || e, g[e] = t), this
                    },
                    overrideMimeType: function(e) {
                        return y || (h.mimeType = e), this
                    },
                    statusCode: function(e) {
                        var t;
                        if (e)
                            if (y < 2)
                                for (t in e) E[t] = [E[t], e[t]];
                            else x.always(e[x.status]);
                        return this
                    },
                    abort: function(e) {
                        var t = e || T;
                        return c && c.abort(t), n(0, t), this
                    }
                };
            if (f.promise(x).complete = m.add, x.success = x.done, x.error = x.fail, h.url = ((e || h.url || Ot) + "").replace(Ft, "").replace(Bt, Dt[1] + "//"), h.type = t.method || t.type || h.method || h.type, h.dataTypes = oe.trim(h.dataType || "*").toLowerCase().match(Te) || [""], null == h.crossDomain && (i = zt.exec(h.url.toLowerCase()), h.crossDomain = !(!i || i[1] === Dt[1] && i[2] === Dt[2] && (i[3] || ("http:" === i[1] ? "80" : "443")) === (Dt[3] || ("http:" === Dt[1] ? "80" : "443")))), h.data && h.processData && "string" != typeof h.data && (h.data = oe.param(h.data, h.traditional)), N(Ut, h, t, x), 2 === y) return x;
            l = oe.event && h.global, l && 0 === oe.active++ && oe.event.trigger("ajaxStart"), h.type = h.type.toUpperCase(), h.hasContent = !Nt.test(h.type), o = h.url, h.hasContent || (h.data && (o = h.url += (kt.test(o) ? "&" : "?") + h.data, delete h.data), h.cache === !1 && (h.url = jt.test(o) ? o.replace(jt, "$1_=" + Pt++) : o + (kt.test(o) ? "&" : "?") + "_=" + Pt++)), h.ifModified && (oe.lastModified[o] && x.setRequestHeader("If-Modified-Since", oe.lastModified[o]), oe.etag[o] && x.setRequestHeader("If-None-Match", oe.etag[o])), (h.data && h.hasContent && h.contentType !== !1 || t.contentType) && x.setRequestHeader("Content-Type", h.contentType), x.setRequestHeader("Accept", h.dataTypes[0] && h.accepts[h.dataTypes[0]] ? h.accepts[h.dataTypes[0]] + ("*" !== h.dataTypes[0] ? ", " + Wt + "; q=0.01" : "") : h.accepts["*"]);
            for (r in h.headers) x.setRequestHeader(r, h.headers[r]);
            if (h.beforeSend && (h.beforeSend.call(d, x, h) === !1 || 2 === y)) return x.abort();
            T = "abort";
            for (r in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) x[r](h[r]);
            if (c = N(Gt, h, t, x)) {
                x.readyState = 1, l && p.trigger("ajaxSend", [x, h]), h.async && h.timeout > 0 && (s = setTimeout(function() {
                    x.abort("timeout")
                }, h.timeout));
                try {
                    y = 1, c.send(g, n)
                } catch (e) {
                    if (!(y < 2)) throw e;
                    n(-1, e)
                }
            } else n(-1, "No Transport");
            return x
        },
        getJSON: function(e, t, n) {
            return oe.get(e, t, n, "json")
        },
        getScript: function(e, t) {
            return oe.get(e, void 0, t, "script")
        }
    }), oe.each(["get", "post"], function(e, t) {
        oe[t] = function(e, n, i, r) {
            return oe.isFunction(n) && (r = r || i, i = n, n = void 0), oe.ajax({
                url: e,
                type: t,
                dataType: r,
                data: n,
                success: i
            })
        }
    }), oe._evalUrl = function(e) {
        return oe.ajax({
            url: e,
            type: "GET",
            dataType: "script",
            async: !1,
            global: !1,
            throws: !0
        })
    }, oe.fn.extend({
        wrapAll: function(e) {
            if (oe.isFunction(e)) return this.each(function(t) {
                oe(this).wrapAll(e.call(this, t))
            });
            if (this[0]) {
                var t = oe(e, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && t.insertBefore(this[0]), t.map(function() {
                    for (var e = this; e.firstChild && 1 === e.firstChild.nodeType;) e = e.firstChild;
                    return e
                }).append(this)
            }
            return this
        },
        wrapInner: function(e) {
            return oe.isFunction(e) ? this.each(function(t) {
                oe(this).wrapInner(e.call(this, t))
            }) : this.each(function() {
                var t = oe(this),
                    n = t.contents();
                n.length ? n.wrapAll(e) : t.append(e)
            })
        },
        wrap: function(e) {
            var t = oe.isFunction(e);
            return this.each(function(n) {
                oe(this).wrapAll(t ? e.call(this, n) : e)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                oe.nodeName(this, "body") || oe(this).replaceWith(this.childNodes)
            }).end()
        }
    }), oe.expr.filters.hidden = function(e) {
        return e.offsetWidth <= 0 && e.offsetHeight <= 0 || !ie.reliableHiddenOffsets() && "none" === (e.style && e.style.display || oe.css(e, "display"))
    }, oe.expr.filters.visible = function(e) {
        return !oe.expr.filters.hidden(e)
    };
    var qt = /%20/g,
        Xt = /\[\]$/,
        $t = /\r?\n/g,
        Yt = /^(?:submit|button|image|reset|file)$/i,
        Zt = /^(?:input|select|textarea|keygen)/i;
    oe.param = function(e, t) {
        var n, i = [],
            r = function(e, t) {
                t = oe.isFunction(t) ? t() : null == t ? "" : t, i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t)
            };
        if (void 0 === t && (t = oe.ajaxSettings && oe.ajaxSettings.traditional), oe.isArray(e) || e.jquery && !oe.isPlainObject(e)) oe.each(e, function() {
            r(this.name, this.value)
        });
        else
            for (n in e) G(n, e[n], t, r);
        return i.join("&").replace(qt, "+")
    }, oe.fn.extend({
        serialize: function() {
            return oe.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var e = oe.prop(this, "elements");
                return e ? oe.makeArray(e) : this
            }).filter(function() {
                var e = this.type;
                return this.name && !oe(this).is(":disabled") && Zt.test(this.nodeName) && !Yt.test(e) && (this.checked || !Pe.test(e))
            }).map(function(e, t) {
                var n = oe(this).val();
                return null == n ? null : oe.isArray(n) ? oe.map(n, function(e) {
                    return {
                        name: t.name,
                        value: e.replace($t, "\r\n")
                    }
                }) : {
                    name: t.name,
                    value: n.replace($t, "\r\n")
                }
            }).get()
        }
    }), oe.ajaxSettings.xhr = void 0 !== e.ActiveXObject ? function() {
        return !this.isLocal && /^(get|post|head|put|delete|options)$/i.test(this.type) && W() || q()
    } : W;
    var Kt = 0,
        Qt = {},
        Jt = oe.ajaxSettings.xhr();
    e.attachEvent && e.attachEvent("onunload", function() {
        for (var e in Qt) Qt[e](void 0, !0)
    }), ie.cors = !!Jt && "withCredentials" in Jt, Jt = ie.ajax = !!Jt, Jt && oe.ajaxTransport(function(e) {
        if (!e.crossDomain || ie.cors) {
            var t;
            return {
                send: function(n, i) {
                    var r, o = e.xhr(),
                        a = ++Kt;
                    if (o.open(e.type, e.url, e.async, e.username, e.password), e.xhrFields)
                        for (r in e.xhrFields) o[r] = e.xhrFields[r];
                    e.mimeType && o.overrideMimeType && o.overrideMimeType(e.mimeType), e.crossDomain || n["X-Requested-With"] || (n["X-Requested-With"] = "XMLHttpRequest");
                    for (r in n) void 0 !== n[r] && o.setRequestHeader(r, n[r] + "");
                    o.send(e.hasContent && e.data || null), t = function(n, r) {
                        var s, l, c;
                        if (t && (r || 4 === o.readyState))
                            if (delete Qt[a], t = void 0, o.onreadystatechange = oe.noop, r) 4 !== o.readyState && o.abort();
                            else {
                                c = {}, s = o.status, "string" == typeof o.responseText && (c.text = o.responseText);
                                try {
                                    l = o.statusText
                                } catch (e) {
                                    l = ""
                                }
                                s || !e.isLocal || e.crossDomain ? 1223 === s && (s = 204) : s = c.text ? 200 : 404
                            }
                        c && i(s, l, c, o.getAllResponseHeaders())
                    }, e.async ? 4 === o.readyState ? setTimeout(t) : o.onreadystatechange = Qt[a] = t : t()
                },
                abort: function() {
                    t && t(void 0, !0)
                }
            }
        }
    }), oe.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(e) {
                return oe.globalEval(e), e
            }
        }
    }), oe.ajaxPrefilter("script", function(e) {
        void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET", e.global = !1)
    }), oe.ajaxTransport("script", function(e) {
        if (e.crossDomain) {
            var t, n = me.head || oe("head")[0] || me.documentElement;
            return {
                send: function(i, r) {
                    t = me.createElement("script"), t.async = !0, e.scriptCharset && (t.charset = e.scriptCharset), t.src = e.url, t.onload = t.onreadystatechange = function(e, n) {
                        (n || !t.readyState || /loaded|complete/.test(t.readyState)) && (t.onload = t.onreadystatechange = null, t.parentNode && t.parentNode.removeChild(t), t = null, n || r(200, "success"))
                    }, n.insertBefore(t, n.firstChild)
                },
                abort: function() {
                    t && t.onload(void 0, !0)
                }
            }
        }
    });
    var en = [],
        tn = /(=)\?(?=&|$)|\?\?/;
    oe.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var e = en.pop() || oe.expando + "_" + Pt++;
            return this[e] = !0, e
        }
    }), oe.ajaxPrefilter("json jsonp", function(t, n, i) {
        var r, o, a, s = t.jsonp !== !1 && (tn.test(t.url) ? "url" : "string" == typeof t.data && !(t.contentType || "").indexOf("application/x-www-form-urlencoded") && tn.test(t.data) && "data");
        if (s || "jsonp" === t.dataTypes[0]) return r = t.jsonpCallback = oe.isFunction(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback, s ? t[s] = t[s].replace(tn, "$1" + r) : t.jsonp !== !1 && (t.url += (kt.test(t.url) ? "&" : "?") + t.jsonp + "=" + r), t.converters["script json"] = function() {
            return a || oe.error(r + " was not called"), a[0]
        }, t.dataTypes[0] = "json", o = e[r], e[r] = function() {
            a = arguments
        }, i.always(function() {
            e[r] = o, t[r] && (t.jsonpCallback = n.jsonpCallback, en.push(r)), a && oe.isFunction(o) && o(a[0]), a = o = void 0
        }), "script"
    }), oe.parseHTML = function(e, t, n) {
        if (!e || "string" != typeof e) return null;
        "boolean" == typeof t && (n = t, t = !1), t = t || me;
        var i = de.exec(e),
            r = !n && [];
        return i ? [t.createElement(i[1])] : (i = oe.buildFragment([e], t, r), r && r.length && oe(r).remove(), oe.merge([], i.childNodes))
    };
    var nn = oe.fn.load;
    oe.fn.load = function(e, t, n) {
        if ("string" != typeof e && nn) return nn.apply(this, arguments);
        var i, r, o, a = this,
            s = e.indexOf(" ");
        return s >= 0 && (i = oe.trim(e.slice(s, e.length)), e = e.slice(0, s)), oe.isFunction(t) ? (n = t, t = void 0) : t && "object" == typeof t && (o = "POST"), a.length > 0 && oe.ajax({
            url: e,
            type: o,
            dataType: "html",
            data: t
        }).done(function(e) {
            r = arguments, a.html(i ? oe("<div>").append(oe.parseHTML(e)).find(i) : e)
        }).complete(n && function(e, t) {
            a.each(n, r || [e.responseText, t, e])
        }), this
    }, oe.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(e, t) {
        oe.fn[t] = function(e) {
            return this.on(t, e)
        }
    }), oe.expr.filters.animated = function(e) {
        return oe.grep(oe.timers, function(t) {
            return e === t.elem
        }).length
    };
    var rn = e.document.documentElement;
    oe.offset = {
        setOffset: function(e, t, n) {
            var i, r, o, a, s, l, c, u = oe.css(e, "position"),
                h = oe(e),
                d = {};
            "static" === u && (e.style.position = "relative"), s = h.offset(), o = oe.css(e, "top"), l = oe.css(e, "left"), c = ("absolute" === u || "fixed" === u) && oe.inArray("auto", [o, l]) > -1, c ? (i = h.position(), a = i.top, r = i.left) : (a = parseFloat(o) || 0, r = parseFloat(l) || 0), oe.isFunction(t) && (t = t.call(e, n, s)), null != t.top && (d.top = t.top - s.top + a), null != t.left && (d.left = t.left - s.left + r), "using" in t ? t.using.call(e, d) : h.css(d)
        }
    }, oe.fn.extend({
        offset: function(e) {
            if (arguments.length) return void 0 === e ? this : this.each(function(t) {
                oe.offset.setOffset(this, e, t)
            });
            var t, n, i = {
                    top: 0,
                    left: 0
                },
                r = this[0],
                o = r && r.ownerDocument;
            if (o) return t = o.documentElement, oe.contains(t, r) ? (typeof r.getBoundingClientRect !== we && (i = r.getBoundingClientRect()), n = X(o), {
                top: i.top + (n.pageYOffset || t.scrollTop) - (t.clientTop || 0),
                left: i.left + (n.pageXOffset || t.scrollLeft) - (t.clientLeft || 0)
            }) : i
        },
        position: function() {
            if (this[0]) {
                var e, t, n = {
                        top: 0,
                        left: 0
                    },
                    i = this[0];
                return "fixed" === oe.css(i, "position") ? t = i.getBoundingClientRect() : (e = this.offsetParent(), t = this.offset(), oe.nodeName(e[0], "html") || (n = e.offset()), n.top += oe.css(e[0], "borderTopWidth", !0), n.left += oe.css(e[0], "borderLeftWidth", !0)), {
                    top: t.top - n.top - oe.css(i, "marginTop", !0),
                    left: t.left - n.left - oe.css(i, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var e = this.offsetParent || rn; e && !oe.nodeName(e, "html") && "static" === oe.css(e, "position");) e = e.offsetParent;
                return e || rn
            })
        }
    }), oe.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(e, t) {
        var n = /Y/.test(t);
        oe.fn[e] = function(i) {
            return Ae(this, function(e, i, r) {
                var o = X(e);
                return void 0 === r ? o ? t in o ? o[t] : o.document.documentElement[i] : e[i] : void(o ? o.scrollTo(n ? oe(o).scrollLeft() : r, n ? r : oe(o).scrollTop()) : e[i] = r)
            }, e, i, arguments.length, null)
        }
    }), oe.each(["top", "left"], function(e, t) {
        oe.cssHooks[t] = S(ie.pixelPosition, function(e, n) {
            if (n) return n = rt(e, t), nt.test(n) ? oe(e).position()[t] + "px" : n
        })
    }), oe.each({
        Height: "height",
        Width: "width"
    }, function(e, t) {
        oe.each({
            padding: "inner" + e,
            content: t,
            "": "outer" + e
        }, function(n, i) {
            oe.fn[i] = function(i, r) {
                var o = arguments.length && (n || "boolean" != typeof i),
                    a = n || (i === !0 || r === !0 ? "margin" : "border");
                return Ae(this, function(t, n, i) {
                    var r;
                    return oe.isWindow(t) ? t.document.documentElement["client" + e] : 9 === t.nodeType ? (r = t.documentElement, Math.max(t.body["scroll" + e], r["scroll" + e], t.body["offset" + e], r["offset" + e], r["client" + e])) : void 0 === i ? oe.css(t, n, a) : oe.style(t, n, i, a)
                }, t, o ? i : void 0, o, null)
            }
        })
    }), oe.fn.size = function() {
        return this.length
    }, oe.fn.andSelf = oe.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function() {
        return oe
    });
    var on = e.jQuery,
        an = e.$;
    return oe.noConflict = function(t) {
        return e.$ === oe && (e.$ = an), t && e.jQuery === oe && (e.jQuery = on), oe
    }, typeof t === we && (e.jQuery = e.$ = oe), oe
}),
/**
 * A JavaScript project for accessing the accelerometer and gyro from various devices
 *
 * @author Tom Gallacher <tom.gallacher23@gmail.com>
 * @copyright Tom Gallacher <http://www.tomg.co>
 * @version 0.0.1a
 * @license MIT License
 * @options frequency, callback
 */
function(e, t) {
    "function" == typeof define && define.amd ? define(t) : "object" == typeof exports ? module.exports = t() : e.gyro = t()
}(this, function() {
    function e(e) {
        var t = Math.PI / 180,
            n = e.beta * t,
            i = e.gamma * t,
            r = e.alpha * t,
            o = Math.cos(n / 2),
            a = Math.cos(i / 2),
            s = Math.cos(r / 2),
            l = Math.sin(n / 2),
            c = Math.sin(i / 2),
            u = Math.sin(r / 2),
            h = o * a * s - l * c * u;
        return n = l * a * s - o * c * u, i = o * c * s + l * a * u, r = o * a * u + l * c * s, {
            x: n,
            y: i,
            z: r,
            w: h
        }
    }

    function t(e, t) {
        return {
            w: e.w * t.w - e.x * t.x - e.y * t.y - e.z * t.z,
            x: e.w * t.x + e.x * t.w + e.y * t.z - e.z * t.y,
            y: e.w * t.y - e.x * t.z + e.y * t.w + e.z * t.x,
            z: e.w * t.z + e.x * t.y - e.y * t.x + e.z * t.w
        }
    }

    function n(e, n) {
        return e = t(n, {
            x: e.x,
            y: e.y,
            z: e.z,
            w: 0
        }), e = t(e, {
            w: n.w,
            x: -n.x,
            y: -n.y,
            z: -n.z
        }), {
            x: e.x,
            y: e.y,
            z: e.z
        }
    }

    function i(e, t) {
        return e.x * t.x + e.y * t.y + e.z * t.z
    }

    function r(e) {
        var t = 180 / Math.PI,
            r = n({
                x: 0,
                y: 1,
                z: 0
            }, e),
            o = 0 == r.x && 0 == r.y ? 0 : -Math.atan2(r.x, r.y),
            a = Math.atan2(r.z, Math.sqrt(r.x * r.x + r.y * r.y)),
            s = {
                x: Math.cos(o),
                y: Math.sin(o),
                z: 0
            },
            l = {
                x: Math.sin(o) * Math.sin(a),
                y: -Math.cos(o) * Math.sin(a),
                z: Math.cos(a)
            },
            c = n({
                x: 0,
                y: 0,
                z: 1
            }, e),
            u = Math.atan2(i(c, s), i(c, l));
        return o < 0 && (o += 2 * Math.PI), u >= .5 * Math.PI ? (u -= Math.PI, o += Math.PI, a = a > 0 ? Math.PI - a : -Math.PI - a) : u < Math.PI * -.5 && (u += Math.PI, o += Math.PI, a = a > 0 ? Math.PI - a : -Math.PI - a), o >= 2 * Math.PI && (o -= 2 * Math.PI), {
            alpha: o * t,
            beta: a * t,
            gamma: u * t
        }
    }

    function o() {
        function n(e) {
            c.push("MozOrientation"), e.target.removeEventListener("MozOrientation", n, !0), e.target.addEventListener("MozOrientation", function(e) {
                a.x = e.x - s.x, a.y = e.y - s.y, a.z = e.z - s.z
            }, !0)
        }

        function i(e) {
            c.push("devicemotion"), e.target.removeEventListener("devicemotion", i, !0), e.target.addEventListener("devicemotion", function(e) {
                a.x = e.accelerationIncludingGravity.x - s.x, a.y = e.accelerationIncludingGravity.y - s.y, a.z = e.accelerationIncludingGravity.z - s.z
            }, !0)
        }

        function o(n) {
            c.push("deviceorientation"), n.target.removeEventListener("deviceorientation", o, !0), n.target.addEventListener("deviceorientation", function(n) {
                var i = e({
                    alpha: s.rawAlpha,
                    beta: s.rawBeta,
                    gamma: s.rawGamma
                });
                i.x *= -1, i.y *= -1, i.z *= -1;
                var o = e({
                        alpha: n.alpha,
                        beta: n.beta,
                        gamma: n.gamma
                    }),
                    l = t(i, o),
                    c = r(l);
                a.alpha = c.alpha, a.beta = c.beta, a.gamma = c.gamma, a.rawAlpha = n.alpha, a.rawBeta = n.beta, a.rawGamma = n.gamma
            }, !0)
        }
        window.addEventListener("MozOrientation", n, !0), window.addEventListener("devicemotion", i, !0), window.addEventListener("deviceorientation", o, !0)
    }
    var a = {
            x: null,
            y: null,
            z: null,
            alpha: null,
            beta: null,
            gamma: null
        },
        s = {
            x: 0,
            y: 0,
            z: 0,
            alpha: 0,
            beta: 0,
            gamma: 0,
            rawAlpha: 0,
            rawBeta: 0,
            rawGamma: 0
        },
        l = null,
        c = [],
        u = {};
    return u.frequency = 500, u.calibrate = function() {
        for (var e in a) s[e] = "number" == typeof a[e] ? a[e] : 0
    }, u.getOrientation = function() {
        return a
    }, u.startTracking = function(e) {
        l = setInterval(function() {
            e(a)
        }, u.frequency)
    }, u.stopTracking = function() {
        clearInterval(l)
    }, u.hasFeature = function(e) {
        for (var t in c)
            if (e == c[t]) return !0;
        return !1
    }, u.getFeatures = function() {
        return c
    }, u.eulerToQuaternion = e, window && window.addEventListener && o(), u
}), /*! VelocityJS.org (1.2.3). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */
/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */
! function(e) {
    function t(e) {
        var t = e.length,
            i = n.type(e);
        return "function" !== i && !n.isWindow(e) && (!(1 !== e.nodeType || !t) || ("array" === i || 0 === t || "number" == typeof t && t > 0 && t - 1 in e))
    }
    if (!e.jQuery) {
        var n = function(e, t) {
            return new n.fn.init(e, t)
        };
        n.isWindow = function(e) {
            return null != e && e == e.window
        }, n.type = function(e) {
            return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? r[a.call(e)] || "object" : typeof e
        }, n.isArray = Array.isArray || function(e) {
            return "array" === n.type(e)
        }, n.isPlainObject = function(e) {
            var t;
            if (!e || "object" !== n.type(e) || e.nodeType || n.isWindow(e)) return !1;
            try {
                if (e.constructor && !o.call(e, "constructor") && !o.call(e.constructor.prototype, "isPrototypeOf")) return !1
            } catch (e) {
                return !1
            }
            for (t in e);
            return void 0 === t || o.call(e, t)
        }, n.each = function(e, n, i) {
            var r, o = 0,
                a = e.length,
                s = t(e);
            if (i) {
                if (s)
                    for (; a > o && (r = n.apply(e[o], i), r !== !1); o++);
                else
                    for (o in e)
                        if (r = n.apply(e[o], i), r === !1) break
            } else if (s)
                for (; a > o && (r = n.call(e[o], o, e[o]), r !== !1); o++);
            else
                for (o in e)
                    if (r = n.call(e[o], o, e[o]), r === !1) break; return e
        }, n.data = function(e, t, r) {
            if (void 0 === r) {
                var o = e[n.expando],
                    a = o && i[o];
                if (void 0 === t) return a;
                if (a && t in a) return a[t]
            } else if (void 0 !== t) {
                var o = e[n.expando] || (e[n.expando] = ++n.uuid);
                return i[o] = i[o] || {}, i[o][t] = r, r
            }
        }, n.removeData = function(e, t) {
            var r = e[n.expando],
                o = r && i[r];
            o && n.each(t, function(e, t) {
                delete o[t]
            })
        }, n.extend = function() {
            var e, t, i, r, o, a, s = arguments[0] || {},
                l = 1,
                c = arguments.length,
                u = !1;
            for ("boolean" == typeof s && (u = s, s = arguments[l] || {}, l++), "object" != typeof s && "function" !== n.type(s) && (s = {}), l === c && (s = this, l--); c > l; l++)
                if (null != (o = arguments[l]))
                    for (r in o) e = s[r], i = o[r], s !== i && (u && i && (n.isPlainObject(i) || (t = n.isArray(i))) ? (t ? (t = !1, a = e && n.isArray(e) ? e : []) : a = e && n.isPlainObject(e) ? e : {}, s[r] = n.extend(u, a, i)) : void 0 !== i && (s[r] = i));
            return s
        }, n.queue = function(e, i, r) {
            function o(e, n) {
                var i = n || [];
                return null != e && (t(Object(e)) ? ! function(e, t) {
                    for (var n = +t.length, i = 0, r = e.length; n > i;) e[r++] = t[i++];
                    if (n !== n)
                        for (; void 0 !== t[i];) e[r++] = t[i++];
                    return e.length = r, e
                }(i, "string" == typeof e ? [e] : e) : [].push.call(i, e)), i
            }
            if (e) {
                i = (i || "fx") + "queue";
                var a = n.data(e, i);
                return r ? (!a || n.isArray(r) ? a = n.data(e, i, o(r)) : a.push(r), a) : a || []
            }
        }, n.dequeue = function(e, t) {
            n.each(e.nodeType ? [e] : e, function(e, i) {
                t = t || "fx";
                var r = n.queue(i, t),
                    o = r.shift();
                "inprogress" === o && (o = r.shift()), o && ("fx" === t && r.unshift("inprogress"), o.call(i, function() {
                    n.dequeue(i, t)
                }))
            })
        }, n.fn = n.prototype = {
            init: function(e) {
                if (e.nodeType) return this[0] = e, this;
                throw new Error("Not a DOM node.")
            },
            offset: function() {
                var t = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {
                    top: 0,
                    left: 0
                };
                return {
                    top: t.top + (e.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),
                    left: t.left + (e.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)
                }
            },
            position: function() {
                function e() {
                    for (var e = this.offsetParent || document; e && "html" === !e.nodeType.toLowerCase && "static" === e.style.position;) e = e.offsetParent;
                    return e || document
                }
                var t = this[0],
                    e = e.apply(t),
                    i = this.offset(),
                    r = /^(?:body|html)$/i.test(e.nodeName) ? {
                        top: 0,
                        left: 0
                    } : n(e).offset();
                return i.top -= parseFloat(t.style.marginTop) || 0, i.left -= parseFloat(t.style.marginLeft) || 0, e.style && (r.top += parseFloat(e.style.borderTopWidth) || 0, r.left += parseFloat(e.style.borderLeftWidth) || 0), {
                    top: i.top - r.top,
                    left: i.left - r.left
                }
            }
        };
        var i = {};
        n.expando = "velocity" + (new Date).getTime(), n.uuid = 0;
        for (var r = {}, o = r.hasOwnProperty, a = r.toString, s = "Boolean Number String Function Array Date RegExp Object Error".split(" "), l = 0; l < s.length; l++) r["[object " + s[l] + "]"] = s[l].toLowerCase();
        n.fn.init.prototype = n.fn, e.Velocity = {
            Utilities: n
        }
    }
}(window),
function(e) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : e()
}(function() {
    return function(e, t, n, i) {
        function r(e) {
            for (var t = -1, n = e ? e.length : 0, i = []; ++t < n;) {
                var r = e[t];
                r && i.push(r)
            }
            return i
        }

        function o(e) {
            return m.isWrapped(e) ? e = [].slice.call(e) : m.isNode(e) && (e = [e]), e
        }

        function a(e) {
            var t = d.data(e, "velocity");
            return null === t ? i : t
        }

        function s(e) {
            return function(t) {
                return Math.round(t * e) * (1 / e)
            }
        }

        function l(e, n, i, r) {
            function o(e, t) {
                return 1 - 3 * t + 3 * e
            }

            function a(e, t) {
                return 3 * t - 6 * e
            }

            function s(e) {
                return 3 * e
            }

            function l(e, t, n) {
                return ((o(t, n) * e + a(t, n)) * e + s(t)) * e
            }

            function c(e, t, n) {
                return 3 * o(t, n) * e * e + 2 * a(t, n) * e + s(t)
            }

            function u(t, n) {
                for (var r = 0; m > r; ++r) {
                    var o = c(n, e, i);
                    if (0 === o) return n;
                    var a = l(n, e, i) - t;
                    n -= a / o
                }
                return n
            }

            function h() {
                for (var t = 0; y > t; ++t) w[t] = l(t * T, e, i)
            }

            function d(t, n, r) {
                var o, a, s = 0;
                do a = n + (r - n) / 2, o = l(a, e, i) - t, o > 0 ? r = a : n = a; while (Math.abs(o) > g && ++s < v);
                return a
            }

            function p(t) {
                for (var n = 0, r = 1, o = y - 1; r != o && w[r] <= t; ++r) n += T;
                --r;
                var a = (t - w[r]) / (w[r + 1] - w[r]),
                    s = n + a * T,
                    l = c(s, e, i);
                return l >= E ? u(t, s) : 0 == l ? s : d(t, n, n + T)
            }

            function f() {
                b = !0, (e != n || i != r) && h()
            }
            var m = 4,
                E = .001,
                g = 1e-7,
                v = 10,
                y = 11,
                T = 1 / (y - 1),
                x = "Float32Array" in t;
            if (4 !== arguments.length) return !1;
            for (var R = 0; 4 > R; ++R)
                if ("number" != typeof arguments[R] || isNaN(arguments[R]) || !isFinite(arguments[R])) return !1;
            e = Math.min(e, 1), i = Math.min(i, 1), e = Math.max(e, 0), i = Math.max(i, 0);
            var w = x ? new Float32Array(y) : new Array(y),
                b = !1,
                H = function(t) {
                    return b || f(), e === n && i === r ? t : 0 === t ? 0 : 1 === t ? 1 : l(p(t), n, r)
                };
            H.getControlPoints = function() {
                return [{
                    x: e,
                    y: n
                }, {
                    x: i,
                    y: r
                }]
            };
            var S = "generateBezier(" + [e, n, i, r] + ")";
            return H.toString = function() {
                return S
            }, H
        }

        function c(e, t) {
            var n = e;
            return m.isString(e) ? y.Easings[e] || (n = !1) : n = m.isArray(e) && 1 === e.length ? s.apply(null, e) : m.isArray(e) && 2 === e.length ? T.apply(null, e.concat([t])) : !(!m.isArray(e) || 4 !== e.length) && l.apply(null, e), n === !1 && (n = y.Easings[y.defaults.easing] ? y.defaults.easing : v), n
        }

        function u(e) {
            if (e) {
                var t = (new Date).getTime(),
                    n = y.State.calls.length;
                n > 1e4 && (y.State.calls = r(y.State.calls));
                for (var o = 0; n > o; o++)
                    if (y.State.calls[o]) {
                        var s = y.State.calls[o],
                            l = s[0],
                            c = s[2],
                            p = s[3],
                            f = !!p,
                            E = null;
                        p || (p = y.State.calls[o][3] = t - 16);
                        for (var g = Math.min((t - p) / c.duration, 1), v = 0, T = l.length; T > v; v++) {
                            var R = l[v],
                                b = R.element;
                            if (a(b)) {
                                var H = !1;
                                if (c.display !== i && null !== c.display && "none" !== c.display) {
                                    if ("flex" === c.display) {
                                        var S = ["-webkit-box", "-moz-box", "-ms-flexbox", "-webkit-flex"];
                                        d.each(S, function(e, t) {
                                            x.setPropertyValue(b, "display", t)
                                        })
                                    }
                                    x.setPropertyValue(b, "display", c.display)
                                }
                                c.visibility !== i && "hidden" !== c.visibility && x.setPropertyValue(b, "visibility", c.visibility);
                                for (var _ in R)
                                    if ("element" !== _) {
                                        var M, C = R[_],
                                            A = m.isString(C.easing) ? y.Easings[C.easing] : C.easing;
                                        if (1 === g) M = C.endValue;
                                        else {
                                            var P = C.endValue - C.startValue;
                                            if (M = C.startValue + P * A(g, c, P), !f && M === C.currentValue) continue
                                        }
                                        if (C.currentValue = M, "tween" === _) E = M;
                                        else {
                                            if (x.Hooks.registered[_]) {
                                                var k = x.Hooks.getRoot(_),
                                                    L = a(b).rootPropertyValueCache[k];
                                                L && (C.rootPropertyValue = L)
                                            }
                                            var D = x.setPropertyValue(b, _, C.currentValue + (0 === parseFloat(M) ? "" : C.unitType), C.rootPropertyValue, C.scrollData);
                                            x.Hooks.registered[_] && (a(b).rootPropertyValueCache[k] = x.Normalizations.registered[k] ? x.Normalizations.registered[k]("extract", null, D[1]) : D[1]), "transform" === D[0] && (H = !0)
                                        }
                                    }
                                c.mobileHA && a(b).transformCache.translate3d === i && (a(b).transformCache.translate3d = "(0px, 0px, 0px)", H = !0), H && x.flushTransformCache(b)
                            }
                        }
                        c.display !== i && "none" !== c.display && (y.State.calls[o][2].display = !1), c.visibility !== i && "hidden" !== c.visibility && (y.State.calls[o][2].visibility = !1), c.progress && c.progress.call(s[1], s[1], g, Math.max(0, p + c.duration - t), p, E), 1 === g && h(o)
                    }
            }
            y.State.isTicking && w(u)
        }

        function h(e, t) {
            if (!y.State.calls[e]) return !1;
            for (var n = y.State.calls[e][0], r = y.State.calls[e][1], o = y.State.calls[e][2], s = y.State.calls[e][4], l = !1, c = 0, u = n.length; u > c; c++) {
                var h = n[c].element;
                if (t || o.loop || ("none" === o.display && x.setPropertyValue(h, "display", o.display), "hidden" === o.visibility && x.setPropertyValue(h, "visibility", o.visibility)), o.loop !== !0 && (d.queue(h)[1] === i || !/\.velocityQueueEntryFlag/i.test(d.queue(h)[1])) && a(h)) {
                    a(h).isAnimating = !1, a(h).rootPropertyValueCache = {};
                    var p = !1;
                    d.each(x.Lists.transforms3D, function(e, t) {
                        var n = /^scale/.test(t) ? 1 : 0,
                            r = a(h).transformCache[t];
                        a(h).transformCache[t] !== i && new RegExp("^\\(" + n + "[^.]").test(r) && (p = !0, delete a(h).transformCache[t])
                    }), o.mobileHA && (p = !0, delete a(h).transformCache.translate3d), p && x.flushTransformCache(h), x.Values.removeClass(h, "velocity-animating")
                }
                if (!t && o.complete && !o.loop && c === u - 1) try {
                    o.complete.call(r, r)
                } catch (e) {
                    setTimeout(function() {
                        throw e
                    }, 1)
                }
                s && o.loop !== !0 && s(r), a(h) && o.loop === !0 && !t && (d.each(a(h).tweensContainer, function(e, t) {
                    /^rotate/.test(e) && 360 === parseFloat(t.endValue) && (t.endValue = 0, t.startValue = 360), /^backgroundPosition/.test(e) && 100 === parseFloat(t.endValue) && "%" === t.unitType && (t.endValue = 0, t.startValue = 100)
                }), y(h, "reverse", {
                    loop: !0,
                    delay: o.delay
                })), o.queue !== !1 && d.dequeue(h, o.queue)
            }
            y.State.calls[e] = !1;
            for (var f = 0, m = y.State.calls.length; m > f; f++)
                if (y.State.calls[f] !== !1) {
                    l = !0;
                    break
                }
            l === !1 && (y.State.isTicking = !1, delete y.State.calls, y.State.calls = [])
        }
        var d, p = function() {
                if (n.documentMode) return n.documentMode;
                for (var e = 7; e > 4; e--) {
                    var t = n.createElement("div");
                    if (t.innerHTML = "<!--[if IE " + e + "]><span></span><![endif]-->", t.getElementsByTagName("span").length) return t = null, e
                }
                return i
            }(),
            f = function() {
                var e = 0;
                return t.webkitRequestAnimationFrame || t.mozRequestAnimationFrame || function(t) {
                    var n, i = (new Date).getTime();
                    return n = Math.max(0, 16 - (i - e)), e = i + n, setTimeout(function() {
                        t(i + n)
                    }, n)
                }
            }(),
            m = {
                isString: function(e) {
                    return "string" == typeof e
                },
                isArray: Array.isArray || function(e) {
                    return "[object Array]" === Object.prototype.toString.call(e)
                },
                isFunction: function(e) {
                    return "[object Function]" === Object.prototype.toString.call(e)
                },
                isNode: function(e) {
                    return e && e.nodeType
                },
                isNodeList: function(e) {
                    return "object" == typeof e && /^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(e)) && e.length !== i && (0 === e.length || "object" == typeof e[0] && e[0].nodeType > 0)
                },
                isWrapped: function(e) {
                    return e && (e.jquery || t.Zepto && t.Zepto.zepto.isZ(e))
                },
                isSVG: function(e) {
                    return t.SVGElement && e instanceof t.SVGElement
                },
                isEmptyObject: function(e) {
                    for (var t in e) return !1;
                    return !0
                }
            },
            E = !1;
        if (e.fn && e.fn.jquery ? (d = e, E = !0) : d = t.Velocity.Utilities, 8 >= p && !E) throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");
        if (7 >= p) return void(jQuery.fn.velocity = jQuery.fn.animate);
        var g = 400,
            v = "swing",
            y = {
                State: {
                    isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
                    isAndroid: /Android/i.test(navigator.userAgent),
                    isGingerbread: /Android 2\.3\.[3-7]/i.test(navigator.userAgent),
                    isChrome: t.chrome,
                    isFirefox: /Firefox/i.test(navigator.userAgent),
                    prefixElement: n.createElement("div"),
                    prefixMatches: {},
                    scrollAnchor: null,
                    scrollPropertyLeft: null,
                    scrollPropertyTop: null,
                    isTicking: !1,
                    calls: []
                },
                CSS: {},
                Utilities: d,
                Redirects: {},
                Easings: {},
                Promise: t.Promise,
                defaults: {
                    queue: "",
                    duration: g,
                    easing: v,
                    begin: i,
                    complete: i,
                    progress: i,
                    display: i,
                    visibility: i,
                    loop: !1,
                    delay: !1,
                    mobileHA: !0,
                    _cacheValues: !0
                },
                init: function(e) {
                    d.data(e, "velocity", {
                        isSVG: m.isSVG(e),
                        isAnimating: !1,
                        computedStyle: null,
                        tweensContainer: null,
                        rootPropertyValueCache: {},
                        transformCache: {}
                    })
                },
                hook: null,
                mock: !1,
                version: {
                    major: 1,
                    minor: 2,
                    patch: 2
                },
                debug: !1
            };
        t.pageYOffset !== i ? (y.State.scrollAnchor = t, y.State.scrollPropertyLeft = "pageXOffset", y.State.scrollPropertyTop = "pageYOffset") : (y.State.scrollAnchor = n.documentElement || n.body.parentNode || n.body, y.State.scrollPropertyLeft = "scrollLeft", y.State.scrollPropertyTop = "scrollTop");
        var T = function() {
            function e(e) {
                return -e.tension * e.x - e.friction * e.v
            }

            function t(t, n, i) {
                var r = {
                    x: t.x + i.dx * n,
                    v: t.v + i.dv * n,
                    tension: t.tension,
                    friction: t.friction
                };
                return {
                    dx: r.v,
                    dv: e(r)
                }
            }

            function n(n, i) {
                var r = {
                        dx: n.v,
                        dv: e(n)
                    },
                    o = t(n, .5 * i, r),
                    a = t(n, .5 * i, o),
                    s = t(n, i, a),
                    l = 1 / 6 * (r.dx + 2 * (o.dx + a.dx) + s.dx),
                    c = 1 / 6 * (r.dv + 2 * (o.dv + a.dv) + s.dv);
                return n.x = n.x + l * i, n.v = n.v + c * i, n
            }
            return function e(t, i, r) {
                var o, a, s, l = {
                        x: -1,
                        v: 0,
                        tension: null,
                        friction: null
                    },
                    c = [0],
                    u = 0,
                    h = 1e-4,
                    d = .016;
                for (t = parseFloat(t) || 500, i = parseFloat(i) || 20, r = r || null, l.tension = t, l.friction = i, o = null !== r, o ? (u = e(t, i), a = u / r * d) : a = d; s = n(s || l, a), c.push(1 + s.x), u += 16, Math.abs(s.x) > h && Math.abs(s.v) > h;);
                return o ? function(e) {
                    return c[e * (c.length - 1) | 0]
                } : u
            }
        }();
        y.Easings = {
            linear: function(e) {
                return e
            },
            swing: function(e) {
                return .5 - Math.cos(e * Math.PI) / 2
            },
            spring: function(e) {
                return 1 - Math.cos(4.5 * e * Math.PI) * Math.exp(6 * -e)
            }
        }, d.each([
            ["ease", [.25, .1, .25, 1]],
            ["ease-in", [.42, 0, 1, 1]],
            ["ease-out", [0, 0, .58, 1]],
            ["ease-in-out", [.42, 0, .58, 1]],
            ["easeInSine", [.47, 0, .745, .715]],
            ["easeOutSine", [.39, .575, .565, 1]],
            ["easeInOutSine", [.445, .05, .55, .95]],
            ["easeInQuad", [.55, .085, .68, .53]],
            ["easeOutQuad", [.25, .46, .45, .94]],
            ["easeInOutQuad", [.455, .03, .515, .955]],
            ["easeInCubic", [.55, .055, .675, .19]],
            ["easeOutCubic", [.215, .61, .355, 1]],
            ["easeInOutCubic", [.645, .045, .355, 1]],
            ["easeInQuart", [.895, .03, .685, .22]],
            ["easeOutQuart", [.165, .84, .44, 1]],
            ["easeInOutQuart", [.77, 0, .175, 1]],
            ["easeInQuint", [.755, .05, .855, .06]],
            ["easeOutQuint", [.23, 1, .32, 1]],
            ["easeInOutQuint", [.86, 0, .07, 1]],
            ["easeInExpo", [.95, .05, .795, .035]],
            ["easeOutExpo", [.19, 1, .22, 1]],
            ["easeInOutExpo", [1, 0, 0, 1]],
            ["easeInCirc", [.6, .04, .98, .335]],
            ["easeOutCirc", [.075, .82, .165, 1]],
            ["easeInOutCirc", [.785, .135, .15, .86]]
        ], function(e, t) {
            y.Easings[t[0]] = l.apply(null, t[1])
        });
        var x = y.CSS = {
            RegEx: {
                isHex: /^#([A-f\d]{3}){1,2}$/i,
                valueUnwrap: /^[A-z]+\((.*)\)$/i,
                wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
                valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi
            },
            Lists: {
                colors: ["fill", "stroke", "stopColor", "color", "backgroundColor", "borderColor", "borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor", "outlineColor"],
                transformsBase: ["translateX", "translateY", "scale", "scaleX", "scaleY", "skewX", "skewY", "rotateZ"],
                transforms3D: ["transformPerspective", "translateZ", "scaleZ", "rotateX", "rotateY"]
            },
            Hooks: {
                templates: {
                    textShadow: ["Color X Y Blur", "black 0px 0px 0px"],
                    boxShadow: ["Color X Y Blur Spread", "black 0px 0px 0px 0px"],
                    clip: ["Top Right Bottom Left", "0px 0px 0px 0px"],
                    backgroundPosition: ["X Y", "0% 0%"],
                    transformOrigin: ["X Y Z", "50% 50% 0px"],
                    perspectiveOrigin: ["X Y", "50% 50%"]
                },
                registered: {},
                register: function() {
                    for (var e = 0; e < x.Lists.colors.length; e++) {
                        var t = "color" === x.Lists.colors[e] ? "0 0 0 1" : "255 255 255 1";
                        x.Hooks.templates[x.Lists.colors[e]] = ["Red Green Blue Alpha", t]
                    }
                    var n, i, r;
                    if (p)
                        for (n in x.Hooks.templates) {
                            i = x.Hooks.templates[n], r = i[0].split(" ");
                            var o = i[1].match(x.RegEx.valueSplit);
                            "Color" === r[0] && (r.push(r.shift()), o.push(o.shift()), x.Hooks.templates[n] = [r.join(" "), o.join(" ")])
                        }
                    for (n in x.Hooks.templates) {
                        i = x.Hooks.templates[n], r = i[0].split(" ");
                        for (var e in r) {
                            var a = n + r[e],
                                s = e;
                            x.Hooks.registered[a] = [n, s]
                        }
                    }
                },
                getRoot: function(e) {
                    var t = x.Hooks.registered[e];
                    return t ? t[0] : e
                },
                cleanRootPropertyValue: function(e, t) {
                    return x.RegEx.valueUnwrap.test(t) && (t = t.match(x.RegEx.valueUnwrap)[1]), x.Values.isCSSNullValue(t) && (t = x.Hooks.templates[e][1]), t
                },
                extractValue: function(e, t) {
                    var n = x.Hooks.registered[e];
                    if (n) {
                        var i = n[0],
                            r = n[1];
                        return t = x.Hooks.cleanRootPropertyValue(i, t), t.toString().match(x.RegEx.valueSplit)[r]
                    }
                    return t
                },
                injectValue: function(e, t, n) {
                    var i = x.Hooks.registered[e];
                    if (i) {
                        var r, o, a = i[0],
                            s = i[1];
                        return n = x.Hooks.cleanRootPropertyValue(a, n), r = n.toString().match(x.RegEx.valueSplit), r[s] = t, o = r.join(" ")
                    }
                    return n
                }
            },
            Normalizations: {
                registered: {
                    clip: function(e, t, n) {
                        switch (e) {
                            case "name":
                                return "clip";
                            case "extract":
                                var i;
                                return x.RegEx.wrappedValueAlreadyExtracted.test(n) ? i = n : (i = n.toString().match(x.RegEx.valueUnwrap), i = i ? i[1].replace(/,(\s+)?/g, " ") : n), i;
                            case "inject":
                                return "rect(" + n + ")"
                        }
                    },
                    blur: function(e, t, n) {
                        switch (e) {
                            case "name":
                                return y.State.isFirefox ? "filter" : "-webkit-filter";
                            case "extract":
                                var i = parseFloat(n);
                                if (!i && 0 !== i) {
                                    var r = n.toString().match(/blur\(([0-9]+[A-z]+)\)/i);
                                    i = r ? r[1] : 0
                                }
                                return i;
                            case "inject":
                                return parseFloat(n) ? "blur(" + n + ")" : "none"
                        }
                    },
                    opacity: function(e, t, n) {
                        if (8 >= p) switch (e) {
                            case "name":
                                return "filter";
                            case "extract":
                                var i = n.toString().match(/alpha\(opacity=(.*)\)/i);
                                return n = i ? i[1] / 100 : 1;
                            case "inject":
                                return t.style.zoom = 1, parseFloat(n) >= 1 ? "" : "alpha(opacity=" + parseInt(100 * parseFloat(n), 10) + ")"
                        } else switch (e) {
                            case "name":
                                return "opacity";
                            case "extract":
                                return n;
                            case "inject":
                                return n
                        }
                    }
                },
                register: function() {
                    9 >= p || y.State.isGingerbread || (x.Lists.transformsBase = x.Lists.transformsBase.concat(x.Lists.transforms3D));
                    for (var e = 0; e < x.Lists.transformsBase.length; e++) ! function() {
                        var t = x.Lists.transformsBase[e];
                        x.Normalizations.registered[t] = function(e, n, r) {
                            switch (e) {
                                case "name":
                                    return "transform";
                                case "extract":
                                    return a(n) === i || a(n).transformCache[t] === i ? /^scale/i.test(t) ? 1 : 0 : a(n).transformCache[t].replace(/[()]/g, "");
                                case "inject":
                                    var o = !1;
                                    switch (t.substr(0, t.length - 1)) {
                                        case "translate":
                                            o = !/(%|px|em|rem|vw|vh|\d)$/i.test(r);
                                            break;
                                        case "scal":
                                        case "scale":
                                            y.State.isAndroid && a(n).transformCache[t] === i && 1 > r && (r = 1), o = !/(\d)$/i.test(r);
                                            break;
                                        case "skew":
                                            o = !/(deg|\d)$/i.test(r);
                                            break;
                                        case "rotate":
                                            o = !/(deg|\d)$/i.test(r)
                                    }
                                    return o || (a(n).transformCache[t] = "(" + r + ")"), a(n).transformCache[t]
                            }
                        }
                    }();
                    for (var e = 0; e < x.Lists.colors.length; e++) ! function() {
                        var t = x.Lists.colors[e];
                        x.Normalizations.registered[t] = function(e, n, r) {
                            switch (e) {
                                case "name":
                                    return t;
                                case "extract":
                                    var o;
                                    if (x.RegEx.wrappedValueAlreadyExtracted.test(r)) o = r;
                                    else {
                                        var a, s = {
                                            black: "rgb(0, 0, 0)",
                                            blue: "rgb(0, 0, 255)",
                                            gray: "rgb(128, 128, 128)",
                                            green: "rgb(0, 128, 0)",
                                            red: "rgb(255, 0, 0)",
                                            white: "rgb(255, 255, 255)"
                                        };
                                        /^[A-z]+$/i.test(r) ? a = s[r] !== i ? s[r] : s.black : x.RegEx.isHex.test(r) ? a = "rgb(" + x.Values.hexToRgb(r).join(" ") + ")" : /^rgba?\(/i.test(r) || (a = s.black), o = (a || r).toString().match(x.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, " ")
                                    }
                                    return 8 >= p || 3 !== o.split(" ").length || (o += " 1"), o;
                                case "inject":
                                    return 8 >= p ? 4 === r.split(" ").length && (r = r.split(/\s+/).slice(0, 3).join(" ")) : 3 === r.split(" ").length && (r += " 1"), (8 >= p ? "rgb" : "rgba") + "(" + r.replace(/\s+/g, ",").replace(/\.(\d)+(?=,)/g, "") + ")"
                            }
                        }
                    }()
                }
            },
            Names: {
                camelCase: function(e) {
                    return e.replace(/-(\w)/g, function(e, t) {
                        return t.toUpperCase()
                    })
                },
                SVGAttribute: function(e) {
                    var t = "width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";
                    return (p || y.State.isAndroid && !y.State.isChrome) && (t += "|transform"), new RegExp("^(" + t + ")$", "i").test(e)
                },
                prefixCheck: function(e) {
                    if (y.State.prefixMatches[e]) return [y.State.prefixMatches[e], !0];
                    for (var t = ["", "Webkit", "Moz", "ms", "O"], n = 0, i = t.length; i > n; n++) {
                        var r;
                        if (r = 0 === n ? e : t[n] + e.replace(/^\w/, function(e) {
                                return e.toUpperCase()
                            }), m.isString(y.State.prefixElement.style[r])) return y.State.prefixMatches[e] = r, [r, !0]
                    }
                    return [e, !1]
                }
            },
            Values: {
                hexToRgb: function(e) {
                    var t, n = /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
                        i = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;
                    return e = e.replace(n, function(e, t, n, i) {
                        return t + t + n + n + i + i
                    }), t = i.exec(e), t ? [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16)] : [0, 0, 0]
                },
                isCSSNullValue: function(e) {
                    return 0 == e || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(e)
                },
                getUnitType: function(e) {
                    return /^(rotate|skew)/i.test(e) ? "deg" : /(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(e) ? "" : "px"
                },
                getDisplayType: function(e) {
                    var t = e && e.tagName.toString().toLowerCase();
                    return /^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(t) ? "inline" : /^(li)$/i.test(t) ? "list-item" : /^(tr)$/i.test(t) ? "table-row" : /^(table)$/i.test(t) ? "table" : /^(tbody)$/i.test(t) ? "table-row-group" : "block"
                },
                addClass: function(e, t) {
                    e.classList ? e.classList.add(t) : e.className += (e.className.length ? " " : "") + t
                },
                removeClass: function(e, t) {
                    e.classList ? e.classList.remove(t) : e.className = e.className.toString().replace(new RegExp("(^|\\s)" + t.split(" ").join("|") + "(\\s|$)", "gi"), " ")
                }
            },
            getPropertyValue: function(e, n, r, o) {
                function s(e, n) {
                    function r() {
                        c && x.setPropertyValue(e, "display", "none")
                    }
                    var l = 0;
                    if (8 >= p) l = d.css(e, n);
                    else {
                        var c = !1;
                        if (/^(width|height)$/.test(n) && 0 === x.getPropertyValue(e, "display") && (c = !0, x.setPropertyValue(e, "display", x.Values.getDisplayType(e))), !o) {
                            if ("height" === n && "border-box" !== x.getPropertyValue(e, "boxSizing").toString().toLowerCase()) {
                                var u = e.offsetHeight - (parseFloat(x.getPropertyValue(e, "borderTopWidth")) || 0) - (parseFloat(x.getPropertyValue(e, "borderBottomWidth")) || 0) - (parseFloat(x.getPropertyValue(e, "paddingTop")) || 0) - (parseFloat(x.getPropertyValue(e, "paddingBottom")) || 0);
                                return r(), u
                            }
                            if ("width" === n && "border-box" !== x.getPropertyValue(e, "boxSizing").toString().toLowerCase()) {
                                var h = e.offsetWidth - (parseFloat(x.getPropertyValue(e, "borderLeftWidth")) || 0) - (parseFloat(x.getPropertyValue(e, "borderRightWidth")) || 0) - (parseFloat(x.getPropertyValue(e, "paddingLeft")) || 0) - (parseFloat(x.getPropertyValue(e, "paddingRight")) || 0);
                                return r(), h
                            }
                        }
                        var f;
                        f = a(e) === i ? t.getComputedStyle(e, null) : a(e).computedStyle ? a(e).computedStyle : a(e).computedStyle = t.getComputedStyle(e, null), "borderColor" === n && (n = "borderTopColor"), l = 9 === p && "filter" === n ? f.getPropertyValue(n) : f[n], ("" === l || null === l) && (l = e.style[n]), r()
                    }
                    if ("auto" === l && /^(top|right|bottom|left)$/i.test(n)) {
                        var m = s(e, "position");
                        ("fixed" === m || "absolute" === m && /top|left/i.test(n)) && (l = d(e).position()[n] + "px")
                    }
                    return l
                }
                var l;
                if (x.Hooks.registered[n]) {
                    var c = n,
                        u = x.Hooks.getRoot(c);
                    r === i && (r = x.getPropertyValue(e, x.Names.prefixCheck(u)[0])), x.Normalizations.registered[u] && (r = x.Normalizations.registered[u]("extract", e, r)), l = x.Hooks.extractValue(c, r)
                } else if (x.Normalizations.registered[n]) {
                    var h, f;
                    h = x.Normalizations.registered[n]("name", e), "transform" !== h && (f = s(e, x.Names.prefixCheck(h)[0]), x.Values.isCSSNullValue(f) && x.Hooks.templates[n] && (f = x.Hooks.templates[n][1])), l = x.Normalizations.registered[n]("extract", e, f)
                }
                if (!/^[\d-]/.test(l))
                    if (a(e) && a(e).isSVG && x.Names.SVGAttribute(n))
                        if (/^(height|width)$/i.test(n)) try {
                            l = e.getBBox()[n]
                        } catch (e) {
                            l = 0
                        } else l = e.getAttribute(n);
                        else l = s(e, x.Names.prefixCheck(n)[0]);
                return x.Values.isCSSNullValue(l) && (l = 0), y.debug >= 2 && console.log("Get " + n + ": " + l), l
            },
            setPropertyValue: function(e, n, i, r, o) {
                var s = n;
                if ("scroll" === n) o.container ? o.container["scroll" + o.direction] = i : "Left" === o.direction ? t.scrollTo(i, o.alternateValue) : t.scrollTo(o.alternateValue, i);
                else if (x.Normalizations.registered[n] && "transform" === x.Normalizations.registered[n]("name", e)) x.Normalizations.registered[n]("inject", e, i), s = "transform", i = a(e).transformCache[n];
                else {
                    if (x.Hooks.registered[n]) {
                        var l = n,
                            c = x.Hooks.getRoot(n);
                        r = r || x.getPropertyValue(e, c), i = x.Hooks.injectValue(l, i, r), n = c
                    }
                    if (x.Normalizations.registered[n] && (i = x.Normalizations.registered[n]("inject", e, i), n = x.Normalizations.registered[n]("name", e)), s = x.Names.prefixCheck(n)[0], 8 >= p) try {
                        e.style[s] = i
                    } catch (e) {
                        y.debug && console.log("Browser does not support [" + i + "] for [" + s + "]")
                    } else a(e) && a(e).isSVG && x.Names.SVGAttribute(n) ? e.setAttribute(n, i) : e.style[s] = i;
                    y.debug >= 2 && console.log("Set " + n + " (" + s + "): " + i)
                }
                return [s, i]
            },
            flushTransformCache: function(e) {
                function t(t) {
                    return parseFloat(x.getPropertyValue(e, t))
                }
                var n = "";
                if ((p || y.State.isAndroid && !y.State.isChrome) && a(e).isSVG) {
                    var i = {
                        translate: [t("translateX"), t("translateY")],
                        skewX: [t("skewX")],
                        skewY: [t("skewY")],
                        scale: 1 !== t("scale") ? [t("scale"), t("scale")] : [t("scaleX"), t("scaleY")],
                        rotate: [t("rotateZ"), 0, 0]
                    };
                    d.each(a(e).transformCache, function(e) {
                        /^translate/i.test(e) ? e = "translate" : /^scale/i.test(e) ? e = "scale" : /^rotate/i.test(e) && (e = "rotate"), i[e] && (n += e + "(" + i[e].join(" ") + ") ", delete i[e])
                    })
                } else {
                    var r, o;
                    d.each(a(e).transformCache, function(t) {
                        return r = a(e).transformCache[t], "transformPerspective" === t ? (o = r, !0) : (9 === p && "rotateZ" === t && (t = "rotate"), void(n += t + r + " "))
                    }), o && (n = "perspective" + o + " " + n)
                }
                x.setPropertyValue(e, "transform", n)
            }
        };
        x.Hooks.register(), x.Normalizations.register(), y.hook = function(e, t, n) {
            var r = i;
            return e = o(e), d.each(e, function(e, o) {
                if (a(o) === i && y.init(o), n === i) r === i && (r = y.CSS.getPropertyValue(o, t));
                else {
                    var s = y.CSS.setPropertyValue(o, t, n);
                    "transform" === s[0] && y.CSS.flushTransformCache(o), r = s
                }
            }), r
        };
        var R = function() {
            function e() {
                return s ? _.promise || null : l
            }

            function r() {
                function e() {
                    function e(e, t) {
                        var n = i,
                            r = i,
                            a = i;
                        return m.isArray(e) ? (n = e[0], !m.isArray(e[1]) && /^[\d-]/.test(e[1]) || m.isFunction(e[1]) || x.RegEx.isHex.test(e[1]) ? a = e[1] : (m.isString(e[1]) && !x.RegEx.isHex.test(e[1]) || m.isArray(e[1])) && (r = t ? e[1] : c(e[1], s.duration), e[2] !== i && (a = e[2]))) : n = e, t || (r = r || s.easing), m.isFunction(n) && (n = n.call(o, b, w)), m.isFunction(a) && (a = a.call(o, b, w)), [n || 0, r, a]
                    }

                    function h(e, t) {
                        var n, i;
                        return i = (t || "0").toString().toLowerCase().replace(/[%A-z]+$/, function(e) {
                            return n = e, ""
                        }), n || (n = x.Values.getUnitType(e)), [i, n]
                    }

                    function p() {
                        var e = {
                                myParent: o.parentNode || n.body,
                                position: x.getPropertyValue(o, "position"),
                                fontSize: x.getPropertyValue(o, "fontSize")
                            },
                            i = e.position === D.lastPosition && e.myParent === D.lastParent,
                            r = e.fontSize === D.lastFontSize;
                        D.lastParent = e.myParent, D.lastPosition = e.position, D.lastFontSize = e.fontSize;
                        var s = 100,
                            l = {};
                        if (r && i) l.emToPx = D.lastEmToPx, l.percentToPxWidth = D.lastPercentToPxWidth, l.percentToPxHeight = D.lastPercentToPxHeight;
                        else {
                            var c = a(o).isSVG ? n.createElementNS("http://www.w3.org/2000/svg", "rect") : n.createElement("div");
                            y.init(c), e.myParent.appendChild(c), d.each(["overflow", "overflowX", "overflowY"], function(e, t) {
                                y.CSS.setPropertyValue(c, t, "hidden")
                            }), y.CSS.setPropertyValue(c, "position", e.position), y.CSS.setPropertyValue(c, "fontSize", e.fontSize), y.CSS.setPropertyValue(c, "boxSizing", "content-box"), d.each(["minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height"], function(e, t) {
                                y.CSS.setPropertyValue(c, t, s + "%")
                            }), y.CSS.setPropertyValue(c, "paddingLeft", s + "em"), l.percentToPxWidth = D.lastPercentToPxWidth = (parseFloat(x.getPropertyValue(c, "width", null, !0)) || 1) / s, l.percentToPxHeight = D.lastPercentToPxHeight = (parseFloat(x.getPropertyValue(c, "height", null, !0)) || 1) / s, l.emToPx = D.lastEmToPx = (parseFloat(x.getPropertyValue(c, "paddingLeft")) || 1) / s, e.myParent.removeChild(c)
                        }
                        return null === D.remToPx && (D.remToPx = parseFloat(x.getPropertyValue(n.body, "fontSize")) || 16), null === D.vwToPx && (D.vwToPx = parseFloat(t.innerWidth) / 100, D.vhToPx = parseFloat(t.innerHeight) / 100), l.remToPx = D.remToPx, l.vwToPx = D.vwToPx, l.vhToPx = D.vhToPx, y.debug >= 1 && console.log("Unit ratios: " + JSON.stringify(l), o), l
                    }
                    if (s.begin && 0 === b) try {
                        s.begin.call(f, f)
                    } catch (e) {
                        setTimeout(function() {
                            throw e
                        }, 1)
                    }
                    if ("scroll" === M) {
                        var g, T, R, H = /^x$/i.test(s.axis) ? "Left" : "Top",
                            S = parseFloat(s.offset) || 0;
                        s.container ? m.isWrapped(s.container) || m.isNode(s.container) ? (s.container = s.container[0] || s.container, g = s.container["scroll" + H], R = g + d(o).position()[H.toLowerCase()] + S) : s.container = null : (g = y.State.scrollAnchor[y.State["scrollProperty" + H]], T = y.State.scrollAnchor[y.State["scrollProperty" + ("Left" === H ? "Top" : "Left")]], R = d(o).offset()[H.toLowerCase()] + S), l = {
                            scroll: {
                                rootPropertyValue: !1,
                                startValue: g,
                                currentValue: g,
                                endValue: R,
                                unitType: "",
                                easing: s.easing,
                                scrollData: {
                                    container: s.container,
                                    direction: H,
                                    alternateValue: T
                                }
                            },
                            element: o
                        }, y.debug && console.log("tweensContainer (scroll): ", l.scroll, o)
                    } else if ("reverse" === M) {
                        if (!a(o).tweensContainer) return void d.dequeue(o, s.queue);
                        "none" === a(o).opts.display && (a(o).opts.display = "auto"), "hidden" === a(o).opts.visibility && (a(o).opts.visibility = "visible"), a(o).opts.loop = !1, a(o).opts.begin = null, a(o).opts.complete = null, v.easing || delete s.easing, v.duration || delete s.duration, s = d.extend({}, a(o).opts, s);
                        var C = d.extend(!0, {}, a(o).tweensContainer);
                        for (var A in C)
                            if ("element" !== A) {
                                var P = C[A].startValue;
                                C[A].startValue = C[A].currentValue = C[A].endValue, C[A].endValue = P, m.isEmptyObject(v) || (C[A].easing = s.easing), y.debug && console.log("reverse tweensContainer (" + A + "): " + JSON.stringify(C[A]), o)
                            }
                        l = C
                    } else if ("start" === M) {
                        var C;
                        a(o).tweensContainer && a(o).isAnimating === !0 && (C = a(o).tweensContainer), d.each(E, function(t, n) {
                            if (RegExp("^" + x.Lists.colors.join("$|^") + "$").test(t)) {
                                var r = e(n, !0),
                                    o = r[0],
                                    a = r[1],
                                    s = r[2];
                                if (x.RegEx.isHex.test(o)) {
                                    for (var l = ["Red", "Green", "Blue"], c = x.Values.hexToRgb(o), u = s ? x.Values.hexToRgb(s) : i, h = 0; h < l.length; h++) {
                                        var d = [c[h]];
                                        a && d.push(a), u !== i && d.push(u[h]), E[t + l[h]] = d
                                    }
                                    delete E[t]
                                }
                            }
                        });
                        for (var k in E) {
                            var L = e(E[k]),
                                F = L[0],
                                j = L[1],
                                V = L[2];
                            k = x.Names.camelCase(k);
                            var I = x.Hooks.getRoot(k),
                                N = !1;
                            if (a(o).isSVG || "tween" === I || x.Names.prefixCheck(I)[1] !== !1 || x.Normalizations.registered[I] !== i) {
                                (s.display !== i && null !== s.display && "none" !== s.display || s.visibility !== i && "hidden" !== s.visibility) && /opacity|filter/.test(k) && !V && 0 !== F && (V = 0), s._cacheValues && C && C[k] ? (V === i && (V = C[k].endValue + C[k].unitType), N = a(o).rootPropertyValueCache[I]) : x.Hooks.registered[k] ? V === i ? (N = x.getPropertyValue(o, I), V = x.getPropertyValue(o, k, N)) : N = x.Hooks.templates[I][1] : V === i && (V = x.getPropertyValue(o, k));
                                var B, z, U, G = !1;
                                if (B = h(k, V), V = B[0], U = B[1], B = h(k, F), F = B[0].replace(/^([+-\/*])=/, function(e, t) {
                                        return G = t, ""
                                    }), z = B[1], V = parseFloat(V) || 0, F = parseFloat(F) || 0, "%" === z && (/^(fontSize|lineHeight)$/.test(k) ? (F /= 100, z = "em") : /^scale/.test(k) ? (F /= 100, z = "") : /(Red|Green|Blue)$/i.test(k) && (F = F / 100 * 255, z = "")), /[\/*]/.test(G)) z = U;
                                else if (U !== z && 0 !== V)
                                    if (0 === F) z = U;
                                    else {
                                        r = r || p();
                                        var W = /margin|padding|left|right|width|text|word|letter/i.test(k) || /X$/.test(k) || "x" === k ? "x" : "y";
                                        switch (U) {
                                            case "%":
                                                V *= "x" === W ? r.percentToPxWidth : r.percentToPxHeight;
                                                break;
                                            case "px":
                                                break;
                                            default:
                                                V *= r[U + "ToPx"]
                                        }
                                        switch (z) {
                                            case "%":
                                                V *= 1 / ("x" === W ? r.percentToPxWidth : r.percentToPxHeight);
                                                break;
                                            case "px":
                                                break;
                                            default:
                                                V *= 1 / r[z + "ToPx"]
                                        }
                                    }
                                switch (G) {
                                    case "+":
                                        F = V + F;
                                        break;
                                    case "-":
                                        F = V - F;
                                        break;
                                    case "*":
                                        F *= V;
                                        break;
                                    case "/":
                                        F = V / F
                                }
                                l[k] = {
                                    rootPropertyValue: N,
                                    startValue: V,
                                    currentValue: V,
                                    endValue: F,
                                    unitType: z,
                                    easing: j
                                }, y.debug && console.log("tweensContainer (" + k + "): " + JSON.stringify(l[k]), o)
                            } else y.debug && console.log("Skipping [" + I + "] due to a lack of browser support.")
                        }
                        l.element = o
                    }
                    l.element && (x.Values.addClass(o, "velocity-animating"), O.push(l), "" === s.queue && (a(o).tweensContainer = l, a(o).opts = s), a(o).isAnimating = !0, b === w - 1 ? (y.State.calls.push([O, f, s, null, _.resolver]), y.State.isTicking === !1 && (y.State.isTicking = !0, u())) : b++)
                }
                var r, o = this,
                    s = d.extend({}, y.defaults, v),
                    l = {};
                switch (a(o) === i && y.init(o), parseFloat(s.delay) && s.queue !== !1 && d.queue(o, s.queue, function(e) {
                    y.velocityQueueEntryFlag = !0, a(o).delayTimer = {
                        setTimeout: setTimeout(e, parseFloat(s.delay)),
                        next: e
                    }
                }), s.duration.toString().toLowerCase()) {
                    case "fast":
                        s.duration = 200;
                        break;
                    case "normal":
                        s.duration = g;
                        break;
                    case "slow":
                        s.duration = 600;
                        break;
                    default:
                        s.duration = parseFloat(s.duration) || 1
                }
                y.mock !== !1 && (y.mock === !0 ? s.duration = s.delay = 1 : (s.duration *= parseFloat(y.mock) || 1, s.delay *= parseFloat(y.mock) || 1)), s.easing = c(s.easing, s.duration), s.begin && !m.isFunction(s.begin) && (s.begin = null), s.progress && !m.isFunction(s.progress) && (s.progress = null), s.complete && !m.isFunction(s.complete) && (s.complete = null), s.display !== i && null !== s.display && (s.display = s.display.toString().toLowerCase(), "auto" === s.display && (s.display = y.CSS.Values.getDisplayType(o))), s.visibility !== i && null !== s.visibility && (s.visibility = s.visibility.toString().toLowerCase()), s.mobileHA = s.mobileHA && y.State.isMobile && !y.State.isGingerbread, s.queue === !1 ? s.delay ? setTimeout(e, s.delay) : e() : d.queue(o, s.queue, function(t, n) {
                    return n === !0 ? (_.promise && _.resolver(f), !0) : (y.velocityQueueEntryFlag = !0, void e(t))
                }), "" !== s.queue && "fx" !== s.queue || "inprogress" === d.queue(o)[0] || d.dequeue(o)
            }
            var s, l, p, f, E, v, T = arguments[0] && (arguments[0].p || d.isPlainObject(arguments[0].properties) && !arguments[0].properties.names || m.isString(arguments[0].properties));
            if (m.isWrapped(this) ? (s = !1, p = 0, f = this, l = this) : (s = !0, p = 1, f = T ? arguments[0].elements || arguments[0].e : arguments[0]), f = o(f)) {
                T ? (E = arguments[0].properties || arguments[0].p, v = arguments[0].options || arguments[0].o) : (E = arguments[p], v = arguments[p + 1]);
                var w = f.length,
                    b = 0;
                if (!/^(stop|finish|finishAll)$/i.test(E) && !d.isPlainObject(v)) {
                    var H = p + 1;
                    v = {};
                    for (var S = H; S < arguments.length; S++) m.isArray(arguments[S]) || !/^(fast|normal|slow)$/i.test(arguments[S]) && !/^\d/.test(arguments[S]) ? m.isString(arguments[S]) || m.isArray(arguments[S]) ? v.easing = arguments[S] : m.isFunction(arguments[S]) && (v.complete = arguments[S]) : v.duration = arguments[S]
                }
                var _ = {
                    promise: null,
                    resolver: null,
                    rejecter: null
                };
                s && y.Promise && (_.promise = new y.Promise(function(e, t) {
                    _.resolver = e, _.rejecter = t
                }));
                var M;
                switch (E) {
                    case "scroll":
                        M = "scroll";
                        break;
                    case "reverse":
                        M = "reverse";
                        break;
                    case "finish":
                    case "finishAll":
                    case "stop":
                        d.each(f, function(e, t) {
                            a(t) && a(t).delayTimer && (clearTimeout(a(t).delayTimer.setTimeout), a(t).delayTimer.next && a(t).delayTimer.next(), delete a(t).delayTimer), "finishAll" !== E || v !== !0 && !m.isString(v) || (d.each(d.queue(t, m.isString(v) ? v : ""), function(e, t) {
                                m.isFunction(t) && t()
                            }), d.queue(t, m.isString(v) ? v : "", []))
                        });
                        var C = [];
                        return d.each(y.State.calls, function(e, t) {
                            t && d.each(t[1], function(n, r) {
                                var o = v === i ? "" : v;
                                return o !== !0 && t[2].queue !== o && (v !== i || t[2].queue !== !1) || void d.each(f, function(n, i) {
                                    i === r && ((v === !0 || m.isString(v)) && (d.each(d.queue(i, m.isString(v) ? v : ""), function(e, t) {
                                        m.isFunction(t) && t(null, !0)
                                    }), d.queue(i, m.isString(v) ? v : "", [])), "stop" === E ? (a(i) && a(i).tweensContainer && o !== !1 && d.each(a(i).tweensContainer, function(e, t) {
                                        t.endValue = t.currentValue
                                    }), C.push(e)) : ("finish" === E || "finishAll" === E) && (t[2].duration = 1))
                                })
                            })
                        }), "stop" === E && (d.each(C, function(e, t) {
                            h(t, !0)
                        }), _.promise && _.resolver(f)), e();
                    default:
                        if (!d.isPlainObject(E) || m.isEmptyObject(E)) {
                            if (m.isString(E) && y.Redirects[E]) {
                                var A = d.extend({}, v),
                                    P = A.duration,
                                    k = A.delay || 0;
                                return A.backwards === !0 && (f = d.extend(!0, [], f).reverse()), d.each(f, function(e, t) {
                                    parseFloat(A.stagger) ? A.delay = k + parseFloat(A.stagger) * e : m.isFunction(A.stagger) && (A.delay = k + A.stagger.call(t, e, w)), A.drag && (A.duration = parseFloat(P) || (/^(callout|transition)/.test(E) ? 1e3 : g), A.duration = Math.max(A.duration * (A.backwards ? 1 - e / w : (e + 1) / w), .75 * A.duration, 200)), y.Redirects[E].call(t, t, A || {}, e, w, f, _.promise ? _ : i)
                                }), e()
                            }
                            var L = "Velocity: First argument (" + E + ") was not a property map, a known action, or a registered redirect. Aborting.";
                            return _.promise ? _.rejecter(new Error(L)) : console.log(L), e()
                        }
                        M = "start"
                }
                var D = {
                        lastParent: null,
                        lastPosition: null,
                        lastFontSize: null,
                        lastPercentToPxWidth: null,
                        lastPercentToPxHeight: null,
                        lastEmToPx: null,
                        remToPx: null,
                        vwToPx: null,
                        vhToPx: null
                    },
                    O = [];
                d.each(f, function(e, t) {
                    m.isNode(t) && r.call(t)
                });
                var F, A = d.extend({}, y.defaults, v);
                if (A.loop = parseInt(A.loop), F = 2 * A.loop - 1, A.loop)
                    for (var j = 0; F > j; j++) {
                        var V = {
                            delay: A.delay,
                            progress: A.progress
                        };
                        j === F - 1 && (V.display = A.display, V.visibility = A.visibility, V.complete = A.complete), R(f, "reverse", V)
                    }
                return e()
            }
        };
        y = d.extend(R, y), y.animate = R;
        var w = t.requestAnimationFrame || f;
        return y.State.isMobile || n.hidden === i || n.addEventListener("visibilitychange", function() {
            n.hidden ? (w = function(e) {
                return setTimeout(function() {
                    e(!0)
                }, 16)
            }, u()) : w = t.requestAnimationFrame || f
        }), e.Velocity = y, e !== t && (e.fn.velocity = R, e.fn.velocity.defaults = y.defaults), d.each(["Down", "Up"], function(e, t) {
            y.Redirects["slide" + t] = function(e, n, r, o, a, s) {
                var l = d.extend({}, n),
                    c = l.begin,
                    u = l.complete,
                    h = {
                        height: "",
                        marginTop: "",
                        marginBottom: "",
                        paddingTop: "",
                        paddingBottom: ""
                    },
                    p = {};
                l.display === i && (l.display = "Down" === t ? "inline" === y.CSS.Values.getDisplayType(e) ? "inline-block" : "block" : "none"), l.begin = function() {
                    c && c.call(a, a);
                    for (var n in h) {
                        p[n] = e.style[n];
                        var i = y.CSS.getPropertyValue(e, n);
                        h[n] = "Down" === t ? [i, 0] : [0, i]
                    }
                    p.overflow = e.style.overflow, e.style.overflow = "hidden"
                }, l.complete = function() {
                    for (var t in p) e.style[t] = p[t];
                    u && u.call(a, a), s && s.resolver(a)
                }, y(e, h, l)
            }
        }), d.each(["In", "Out"], function(e, t) {
            y.Redirects["fade" + t] = function(e, n, r, o, a, s) {
                var l = d.extend({}, n),
                    c = {
                        opacity: "In" === t ? 1 : 0
                    },
                    u = l.complete;
                l.complete = r !== o - 1 ? l.begin = null : function() {
                    u && u.call(a, a), s && s.resolver(a)
                }, l.display === i && (l.display = "In" === t ? "auto" : "none"), y(this, c, l)
            }
        }), y
    }(window.jQuery || window.Zepto || window, window, document)
}),
function() {
    "use strict";
    /**
     * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
     *
     * @codingstandard ftlabs-jsv2
     * @copyright The Financial Times Limited [All Rights Reserved]
     * @license MIT License (see LICENSE.txt)
     */
    function e(t, i) {
        function r(e, t) {
            return function() {
                return e.apply(t, arguments)
            }
        }
        var o;
        if (i = i || {}, this.trackingClick = !1, this.trackingClickStart = 0, this.targetElement = null, this.touchStartX = 0, this.touchStartY = 0, this.lastTouchIdentifier = 0, this.touchBoundary = i.touchBoundary || 10, this.layer = t, this.tapDelay = i.tapDelay || 200, this.tapTimeout = i.tapTimeout || 700, !e.notNeeded(t)) {
            for (var a = ["onMouse", "onClick", "onTouchStart", "onTouchMove", "onTouchEnd", "onTouchCancel"], s = this, l = 0, c = a.length; l < c; l++) s[a[l]] = r(s[a[l]], s);
            n && (t.addEventListener("mouseover", this.onMouse, !0), t.addEventListener("mousedown", this.onMouse, !0), t.addEventListener("mouseup", this.onMouse, !0)), t.addEventListener("click", this.onClick, !0), t.addEventListener("touchstart", this.onTouchStart, !1), t.addEventListener("touchmove", this.onTouchMove, !1), t.addEventListener("touchend", this.onTouchEnd, !1), t.addEventListener("touchcancel", this.onTouchCancel, !1), Event.prototype.stopImmediatePropagation || (t.removeEventListener = function(e, n, i) {
                var r = Node.prototype.removeEventListener;
                "click" === e ? r.call(t, e, n.hijacked || n, i) : r.call(t, e, n, i)
            }, t.addEventListener = function(e, n, i) {
                var r = Node.prototype.addEventListener;
                "click" === e ? r.call(t, e, n.hijacked || (n.hijacked = function(e) {
                    e.propagationStopped || n(e)
                }), i) : r.call(t, e, n, i)
            }), "function" == typeof t.onclick && (o = t.onclick, t.addEventListener("click", function(e) {
                o(e)
            }, !1), t.onclick = null)
        }
    }
    var t = navigator.userAgent.indexOf("Windows Phone") >= 0,
        n = navigator.userAgent.indexOf("Android") > 0 && !t,
        i = /iP(ad|hone|od)/.test(navigator.userAgent) && !t,
        r = i && /OS 4_\d(_\d)?/.test(navigator.userAgent),
        o = i && /OS [6-7]_\d/.test(navigator.userAgent),
        a = navigator.userAgent.indexOf("BB10") > 0;
    e.prototype.needsClick = function(e) {
        switch (e.nodeName.toLowerCase()) {
            case "button":
            case "select":
            case "textarea":
                if (e.disabled) return !0;
                break;
            case "input":
                if (i && "file" === e.type || e.disabled) return !0;
                break;
            case "label":
            case "iframe":
            case "video":
                return !0
        }
        return /\bneedsclick\b/.test(e.className)
    }, e.prototype.needsFocus = function(e) {
        switch (e.nodeName.toLowerCase()) {
            case "textarea":
                return !0;
            case "select":
                return !n;
            case "input":
                switch (e.type) {
                    case "button":
                    case "checkbox":
                    case "file":
                    case "image":
                    case "radio":
                    case "submit":
                        return !1
                }
                return !e.disabled && !e.readOnly;
            default:
                return /\bneedsfocus\b/.test(e.className)
        }
    }, e.prototype.sendClick = function(e, t) {
        var n, i;
        document.activeElement && document.activeElement !== e && document.activeElement.blur(), i = t.changedTouches[0], n = document.createEvent("MouseEvents"), n.initMouseEvent(this.determineEventType(e), !0, !0, window, 1, i.screenX, i.screenY, i.clientX, i.clientY, !1, !1, !1, !1, 0, null), n.forwardedTouchEvent = !0, e.dispatchEvent(n)
    }, e.prototype.determineEventType = function(e) {
        return n && "select" === e.tagName.toLowerCase() ? "mousedown" : "click"
    }, e.prototype.focus = function(e) {
        var t;
        i && e.setSelectionRange && 0 !== e.type.indexOf("date") && "time" !== e.type && "month" !== e.type ? (t = e.value.length, e.setSelectionRange(t, t)) : e.focus()
    }, e.prototype.updateScrollParent = function(e) {
        var t, n;
        if (t = e.fastClickScrollParent, !t || !t.contains(e)) {
            n = e;
            do {
                if (n.scrollHeight > n.offsetHeight) {
                    t = n, e.fastClickScrollParent = n;
                    break
                }
                n = n.parentElement
            } while (n)
        }
        t && (t.fastClickLastScrollTop = t.scrollTop)
    }, e.prototype.getTargetElementFromEventTarget = function(e) {
        return e.nodeType === Node.TEXT_NODE ? e.parentNode : e
    }, e.prototype.onTouchStart = function(e) {
        var t, n, o;
        if (e.targetTouches.length > 1) return !0;
        if (t = this.getTargetElementFromEventTarget(e.target), n = e.targetTouches[0], i) {
            if (o = window.getSelection(), o.rangeCount && !o.isCollapsed) return !0;
            if (!r) {
                if (n.identifier && n.identifier === this.lastTouchIdentifier) return e.preventDefault(), !1;
                this.lastTouchIdentifier = n.identifier, this.updateScrollParent(t)
            }
        }
        return this.trackingClick = !0, this.trackingClickStart = e.timeStamp, this.targetElement = t, this.touchStartX = n.pageX, this.touchStartY = n.pageY, e.timeStamp - this.lastClickTime < this.tapDelay && e.preventDefault(), !0
    }, e.prototype.touchHasMoved = function(e) {
        var t = e.changedTouches[0],
            n = this.touchBoundary;
        return Math.abs(t.pageX - this.touchStartX) > n || Math.abs(t.pageY - this.touchStartY) > n
    }, e.prototype.onTouchMove = function(e) {
        return !this.trackingClick || ((this.targetElement !== this.getTargetElementFromEventTarget(e.target) || this.touchHasMoved(e)) && (this.trackingClick = !1, this.targetElement = null), !0)
    }, e.prototype.findControl = function(e) {
        return void 0 !== e.control ? e.control : e.htmlFor ? document.getElementById(e.htmlFor) : e.querySelector("button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea")
    }, e.prototype.onTouchEnd = function(e) {
        var t, a, s, l, c, u = this.targetElement;
        if (!this.trackingClick) return !0;
        if (e.timeStamp - this.lastClickTime < this.tapDelay) return this.cancelNextClick = !0, !0;
        if (e.timeStamp - this.trackingClickStart > this.tapTimeout) return !0;
        if (this.cancelNextClick = !1, this.lastClickTime = e.timeStamp, a = this.trackingClickStart, this.trackingClick = !1, this.trackingClickStart = 0, o && (c = e.changedTouches[0], u = document.elementFromPoint(c.pageX - window.pageXOffset, c.pageY - window.pageYOffset) || u, u.fastClickScrollParent = this.targetElement.fastClickScrollParent), s = u.tagName.toLowerCase(), "label" === s) {
            if (t = this.findControl(u)) {
                if (this.focus(u), n) return !1;
                u = t
            }
        } else if (this.needsFocus(u)) return e.timeStamp - a > 100 || i && window.top !== window && "input" === s ? (this.targetElement = null, !1) : (this.focus(u), this.sendClick(u, e), i && "select" === s || (this.targetElement = null, e.preventDefault()), !1);
        return !(!i || r || (l = u.fastClickScrollParent, !l || l.fastClickLastScrollTop === l.scrollTop)) || (this.needsClick(u) || (e.preventDefault(), this.sendClick(u, e)), !1)
    }, e.prototype.onTouchCancel = function() {
        this.trackingClick = !1, this.targetElement = null
    }, e.prototype.onMouse = function(e) {
        return !this.targetElement || (!!e.forwardedTouchEvent || (!e.cancelable || (!(!this.needsClick(this.targetElement) || this.cancelNextClick) || (e.stopImmediatePropagation ? e.stopImmediatePropagation() : e.propagationStopped = !0, e.stopPropagation(), e.preventDefault(), !1))))
    }, e.prototype.onClick = function(e) {
        var t;
        return this.trackingClick ? (this.targetElement = null, this.trackingClick = !1, !0) : "submit" === e.target.type && 0 === e.detail || (t = this.onMouse(e), t || (this.targetElement = null), t)
    }, e.prototype.destroy = function() {
        var e = this.layer;
        n && (e.removeEventListener("mouseover", this.onMouse, !0), e.removeEventListener("mousedown", this.onMouse, !0), e.removeEventListener("mouseup", this.onMouse, !0)), e.removeEventListener("click", this.onClick, !0), e.removeEventListener("touchstart", this.onTouchStart, !1), e.removeEventListener("touchmove", this.onTouchMove, !1), e.removeEventListener("touchend", this.onTouchEnd, !1), e.removeEventListener("touchcancel", this.onTouchCancel, !1)
    }, e.notNeeded = function(e) {
        var t, i, r, o;
        if ("undefined" == typeof window.ontouchstart) return !0;
        if (i = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1]) {
            if (!n) return !0;
            if (t = document.querySelector("meta[name=viewport]")) {
                if (t.content.indexOf("user-scalable=no") !== -1) return !0;
                if (i > 31 && document.documentElement.scrollWidth <= window.outerWidth) return !0
            }
        }
        if (a && (r = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/), r[1] >= 10 && r[2] >= 3 && (t = document.querySelector("meta[name=viewport]")))) {
            if (t.content.indexOf("user-scalable=no") !== -1) return !0;
            if (document.documentElement.scrollWidth <= window.outerWidth) return !0
        }
        return "none" === e.style.msTouchAction || "manipulation" === e.style.touchAction || (o = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1], !!(o >= 27 && (t = document.querySelector("meta[name=viewport]"), t && (t.content.indexOf("user-scalable=no") !== -1 || document.documentElement.scrollWidth <= window.outerWidth))) || ("none" === e.style.touchAction || "manipulation" === e.style.touchAction))
    }, e.attach = function(t, n) {
        return new e(t, n)
    }, "function" == typeof define && "object" == typeof define.amd && define.amd ? define(function() {
        return e
    }) : "undefined" != typeof module && module.exports ? (module.exports = e.attach, module.exports.FastClick = e) : window.FastClick = e
}(),
function() {
    "use strict";
    var e = "undefined" != typeof module && module.exports,
        t = "undefined" != typeof Element && "ALLOW_KEYBOARD_INPUT" in Element,
        n = function() {
            for (var e, t, n = [
                    ["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"],
                    ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"],
                    ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"],
                    ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"],
                    ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]
                ], i = 0, r = n.length, o = {}; i < r; i++)
                if (e = n[i], e && e[1] in document) {
                    for (i = 0, t = e.length; i < t; i++) o[n[0][i]] = e[i];
                    return o
                }
            return !1
        }(),
        i = {
            request: function(e) {
                var i = n.requestFullscreen;
                e = e || document.documentElement, /5\.1[\.\d]* Safari/.test(navigator.userAgent) ? e[i]() : e[i](t && Element.ALLOW_KEYBOARD_INPUT)
            },
            exit: function() {
                document[n.exitFullscreen]()
            },
            toggle: function(e) {
                this.isFullscreen ? this.exit() : this.request(e)
            },
            raw: n
        };
    return n ? (Object.defineProperties(i, {
        isFullscreen: {
            get: function() {
                return Boolean(document[n.fullscreenElement])
            }
        },
        element: {
            enumerable: !0,
            get: function() {
                return document[n.fullscreenElement]
            }
        },
        enabled: {
            enumerable: !0,
            get: function() {
                return Boolean(document[n.fullscreenEnabled])
            }
        }
    }), void(e ? module.exports = i : window.screenfull = i)) : void(e ? module.exports = !1 : window.screenfull = !1)
}(), ! function(e, t, n) {
    function i(e, t) {
        return typeof e === t
    }

    function r() {
        var e, t, n, r, o, a, s;
        for (var l in y)
            if (y.hasOwnProperty(l)) {
                if (e = [], t = y[l], t.name && (e.push(t.name.toLowerCase()), t.options && t.options.aliases && t.options.aliases.length))
                    for (n = 0; n < t.options.aliases.length; n++) e.push(t.options.aliases[n].toLowerCase());
                for (r = i(t.fn, "function") ? t.fn() : t.fn, o = 0; o < e.length; o++) a = e[o], s = a.split("."), 1 === s.length ? x[s[0]] = r : (!x[s[0]] || x[s[0]] instanceof Boolean || (x[s[0]] = new Boolean(x[s[0]])), x[s[0]][s[1]] = r), v.push((r ? "" : "no-") + s.join("-"))
            }
    }

    function o(e) {
        var t = w.className,
            n = x._config.classPrefix || "";
        if (b && (t = t.baseVal), x._config.enableJSClass) {
            var i = new RegExp("(^|\\s)" + n + "no-js(\\s|$)");
            t = t.replace(i, "$1" + n + "js$2")
        }
        x._config.enableClasses && (t += " " + n + e.join(" " + n), b ? w.className.baseVal = t : w.className = t)
    }

    function a(e) {
        return e.replace(/([a-z])-([a-z])/g, function(e, t, n) {
            return t + n.toUpperCase()
        }).replace(/^-/, "")
    }

    function s() {
        return "function" != typeof t.createElement ? t.createElement(arguments[0]) : b ? t.createElementNS.call(t, "http://www.w3.org/2000/svg", arguments[0]) : t.createElement.apply(t, arguments)
    }

    function l(e, t) {
        return !!~("" + e).indexOf(t)
    }

    function c() {
        var e = t.body;
        return e || (e = s(b ? "svg" : "body"), e.fake = !0), e
    }

    function u(e, n, i, r) {
        var o, a, l, u, h = "modernizr",
            d = s("div"),
            p = c();
        if (parseInt(i, 10))
            for (; i--;) l = s("div"), l.id = r ? r[i] : h + (i + 1), d.appendChild(l);
        return o = s("style"), o.type = "text/css", o.id = "s" + h, (p.fake ? p : d).appendChild(o), p.appendChild(d), o.styleSheet ? o.styleSheet.cssText = e : o.appendChild(t.createTextNode(e)), d.id = h, p.fake && (p.style.background = "", p.style.overflow = "hidden", u = w.style.overflow, w.style.overflow = "hidden", w.appendChild(p)), a = n(d, e), p.fake ? (p.parentNode.removeChild(p), w.style.overflow = u, w.offsetHeight) : d.parentNode.removeChild(d), !!a
    }

    function h(e, t) {
        return function() {
            return e.apply(t, arguments)
        }
    }

    function d(e, t, n) {
        var r;
        for (var o in e)
            if (e[o] in t) return n === !1 ? e[o] : (r = t[e[o]], i(r, "function") ? h(r, n || t) : r);
        return !1
    }

    function p(e) {
        return e.replace(/([A-Z])/g, function(e, t) {
            return "-" + t.toLowerCase()
        }).replace(/^ms-/, "-ms-")
    }

    function f(t, i) {
        var r = t.length;
        if ("CSS" in e && "supports" in e.CSS) {
            for (; r--;)
                if (e.CSS.supports(p(t[r]), i)) return !0;
            return !1
        }
        if ("CSSSupportsRule" in e) {
            for (var o = []; r--;) o.push("(" + p(t[r]) + ":" + i + ")");
            return o = o.join(" or "), u("@supports (" + o + ") { #modernizr { position: absolute; } }", function(e) {
                return "absolute" == getComputedStyle(e, null).position
            })
        }
        return n
    }

    function m(e, t, r, o) {
        function c() {
            h && (delete A.style, delete A.modElem)
        }
        if (o = !i(o, "undefined") && o, !i(r, "undefined")) {
            var u = f(e, r);
            if (!i(u, "undefined")) return u
        }
        for (var h, d, p, m, E, g = ["modernizr", "tspan"]; !A.style;) h = !0, A.modElem = s(g.shift()), A.style = A.modElem.style;
        for (p = e.length, d = 0; p > d; d++)
            if (m = e[d], E = A.style[m], l(m, "-") && (m = a(m)), A.style[m] !== n) {
                if (o || i(r, "undefined")) return c(), "pfx" != t || m;
                try {
                    A.style[m] = r
                } catch (e) {}
                if (A.style[m] != E) return c(), "pfx" != t || m
            }
        return c(), !1
    }

    function E(e, t, n, r, o) {
        var a = e.charAt(0).toUpperCase() + e.slice(1),
            s = (e + " " + _.join(a + " ") + a).split(" ");
        return i(t, "string") || i(t, "undefined") ? m(s, t, r, o) : (s = (e + " " + S.join(a + " ") + a).split(" "), d(s, t, n))
    }

    function g(e, t, i) {
        return E(e, n, n, t, i)
    }
    var v = [],
        y = [],
        T = {
            _version: "3.3.1",
            _config: {
                classPrefix: "",
                enableClasses: !0,
                enableJSClass: !0,
                usePrefixes: !0
            },
            _q: [],
            on: function(e, t) {
                var n = this;
                setTimeout(function() {
                    t(n[e])
                }, 0)
            },
            addTest: function(e, t, n) {
                y.push({
                    name: e,
                    fn: t,
                    options: n
                })
            },
            addAsyncTest: function(e) {
                y.push({
                    name: null,
                    fn: e
                })
            }
        },
        x = function() {};
    x.prototype = T, x = new x;
    var R = T._config.usePrefixes ? " -webkit- -moz- -o- -ms- ".split(" ") : ["", ""];
    T._prefixes = R;
    var w = t.documentElement,
        b = "svg" === w.nodeName.toLowerCase();
    b || ! function(e, t) {
        function n(e, t) {
            var n = e.createElement("p"),
                i = e.getElementsByTagName("head")[0] || e.documentElement;
            return n.innerHTML = "x<style>" + t + "</style>", i.insertBefore(n.lastChild, i.firstChild)
        }

        function i() {
            var e = y.elements;
            return "string" == typeof e ? e.split(" ") : e
        }

        function r(e, t) {
            var n = y.elements;
            "string" != typeof n && (n = n.join(" ")), "string" != typeof e && (e = e.join(" ")), y.elements = n + " " + e, c(t)
        }

        function o(e) {
            var t = v[e[E]];
            return t || (t = {}, g++, e[E] = g, v[g] = t), t
        }

        function a(e, n, i) {
            if (n || (n = t), h) return n.createElement(e);
            i || (i = o(n));
            var r;
            return r = i.cache[e] ? i.cache[e].cloneNode() : m.test(e) ? (i.cache[e] = i.createElem(e)).cloneNode() : i.createElem(e), !r.canHaveChildren || f.test(e) || r.tagUrn ? r : i.frag.appendChild(r)
        }

        function s(e, n) {
            if (e || (e = t), h) return e.createDocumentFragment();
            n = n || o(e);
            for (var r = n.frag.cloneNode(), a = 0, s = i(), l = s.length; l > a; a++) r.createElement(s[a]);
            return r
        }

        function l(e, t) {
            t.cache || (t.cache = {}, t.createElem = e.createElement, t.createFrag = e.createDocumentFragment, t.frag = t.createFrag()), e.createElement = function(n) {
                return y.shivMethods ? a(n, e, t) : t.createElem(n)
            }, e.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + i().join().replace(/[\w\-:]+/g, function(e) {
                return t.createElem(e), t.frag.createElement(e), 'c("' + e + '")'
            }) + ");return n}")(y, t.frag)
        }

        function c(e) {
            e || (e = t);
            var i = o(e);
            return !y.shivCSS || u || i.hasCSS || (i.hasCSS = !!n(e, "article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")), h || l(e, i), e
        }
        var u, h, d = "3.7.3",
            p = e.html5 || {},
            f = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,
            m = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,
            E = "_html5shiv",
            g = 0,
            v = {};
        ! function() {
            try {
                var e = t.createElement("a");
                e.innerHTML = "<xyz></xyz>", u = "hidden" in e, h = 1 == e.childNodes.length || function() {
                    t.createElement("a");
                    var e = t.createDocumentFragment();
                    return "undefined" == typeof e.cloneNode || "undefined" == typeof e.createDocumentFragment || "undefined" == typeof e.createElement
                }()
            } catch (e) {
                u = !0, h = !0
            }
        }();
        var y = {
            elements: p.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video",
            version: d,
            shivCSS: p.shivCSS !== !1,
            supportsUnknownElements: h,
            shivMethods: p.shivMethods !== !1,
            type: "default",
            shivDocument: c,
            createElement: a,
            createDocumentFragment: s,
            addElements: r
        };
        e.html5 = y, c(t), "object" == typeof module && module.exports && (module.exports = y)
    }("undefined" != typeof e ? e : this, t);
    var H = "Moz O ms Webkit",
        S = T._config.usePrefixes ? H.toLowerCase().split(" ") : [];
    T._domPrefixes = S, x.addTest("video", function() {
        var e = s("video"),
            t = !1;
        try {
            (t = !!e.canPlayType) && (t = new Boolean(t), t.ogg = e.canPlayType('video/ogg; codecs="theora"').replace(/^no$/, ""), t.h264 = e.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/, ""), t.webm = e.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/, ""), t.vp9 = e.canPlayType('video/webm; codecs="vp9"').replace(/^no$/, ""), t.hls = e.canPlayType('application/x-mpegURL; codecs="avc1.42E01E"').replace(/^no$/, ""))
        } catch (e) {}
        return t
    });
    var _ = T._config.usePrefixes ? H.split(" ") : [];
    T._cssomPrefixes = _;
    var M = function(t) {
        var i, r = R.length,
            o = e.CSSRule;
        if ("undefined" == typeof o) return n;
        if (!t) return !1;
        if (t = t.replace(/^@/, ""), i = t.replace(/-/g, "_").toUpperCase() + "_RULE", i in o) return "@" + t;
        for (var a = 0; r > a; a++) {
            var s = R[a],
                l = s.toUpperCase() + "_" + i;
            if (l in o) return "@-" + s.toLowerCase() + "-" + t
        }
        return !1
    };
    T.atRule = M;
    var C = (T.testStyles = u, {
        elem: s("modernizr")
    });
    x._q.push(function() {
        delete C.elem
    });
    var A = {
        style: C.elem.style
    };
    x._q.unshift(function() {
        delete A.style
    }), T.testProp = function(e, t, i) {
        return m([e], n, t, i)
    }, T.testAllProps = E;
    var P = T.prefixed = function(e, t, n) {
        return 0 === e.indexOf("@") ? M(e) : (-1 != e.indexOf("-") && (e = a(e)), t ? E(e, t, n) : E(e, "pfx"))
    };
    x.addTest("fullscreen", !(!P("exitFullscreen", t, !1) && !P("cancelFullScreen", t, !1))), T.testAllProps = g, x.addTest("cssanimations", g("animationName", "a", !0)), x.addTest("csstransitions", g("transition", "all", !0)), r(), o(v), delete T.addTest, delete T.addAsyncTest;
    for (var k = 0; k < x._q.length; k++) x._q[k]();
    e.Modernizr = x
}(window, document), ! function(e, t, n, i) {
    "use strict";

    function r(e, t, n) {
        return setTimeout(c(e, n), t)
    }

    function o(e, t, n) {
        return !!Array.isArray(e) && (a(e, n[t], n), !0)
    }

    function a(e, t, n) {
        var r;
        if (e)
            if (e.forEach) e.forEach(t, n);
            else if (e.length !== i)
            for (r = 0; r < e.length;) t.call(n, e[r], r, e), r++;
        else
            for (r in e) e.hasOwnProperty(r) && t.call(n, e[r], r, e)
    }

    function s(t, n, i) {
        var r = "DEPRECATED METHOD: " + n + "\n" + i + " AT \n";
        return function() {
            var n = new Error("get-stack-trace"),
                i = n && n.stack ? n.stack.replace(/^[^\(]+?[\n$]/gm, "").replace(/^\s+at\s+/gm, "").replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@") : "Unknown Stack Trace",
                o = e.console && (e.console.warn || e.console.log);
            return o && o.call(e.console, r, i), t.apply(this, arguments)
        }
    }

    function l(e, t, n) {
        var i, r = t.prototype;
        i = e.prototype = Object.create(r), i.constructor = e, i._super = r, n && se(i, n)
    }

    function c(e, t) {
        return function() {
            return e.apply(t, arguments)
        }
    }

    function u(e, t) {
        return typeof e == ue ? e.apply(t ? t[0] || i : i, t) : e
    }

    function h(e, t) {
        return e === i ? t : e
    }

    function d(e, t, n) {
        a(E(t), function(t) {
            e.addEventListener(t, n, !1)
        })
    }

    function p(e, t, n) {
        a(E(t), function(t) {
            e.removeEventListener(t, n, !1)
        })
    }

    function f(e, t) {
        for (; e;) {
            if (e == t) return !0;
            e = e.parentNode
        }
        return !1
    }

    function m(e, t) {
        return e.indexOf(t) > -1
    }

    function E(e) {
        return e.trim().split(/\s+/g)
    }

    function g(e, t, n) {
        if (e.indexOf && !n) return e.indexOf(t);
        for (var i = 0; i < e.length;) {
            if (n && e[i][n] == t || !n && e[i] === t) return i;
            i++
        }
        return -1
    }

    function v(e) {
        return Array.prototype.slice.call(e, 0)
    }

    function y(e, t, n) {
        for (var i = [], r = [], o = 0; o < e.length;) {
            var a = t ? e[o][t] : e[o];
            g(r, a) < 0 && i.push(e[o]), r[o] = a, o++
        }
        return n && (i = t ? i.sort(function(e, n) {
            return e[t] > n[t]
        }) : i.sort()), i
    }

    function T(e, t) {
        for (var n, r, o = t[0].toUpperCase() + t.slice(1), a = 0; a < le.length;) {
            if (n = le[a], r = n ? n + o : t, r in e) return r;
            a++
        }
        return i
    }

    function x() {
        return Ee++
    }

    function R(t) {
        var n = t.ownerDocument || t;
        return n.defaultView || n.parentWindow || e
    }

    function w(e, t) {
        var n = this;
        this.manager = e, this.callback = t, this.element = e.element, this.target = e.options.inputTarget, this.domHandler = function(t) {
            u(e.options.enable, [e]) && n.handler(t)
        }, this.init()
    }

    function b(e) {
        var t, n = e.options.inputClass;
        return new(t = n ? n : ye ? V : Te ? B : ve ? U : j)(e, H)
    }

    function H(e, t, n) {
        var i = n.pointers.length,
            r = n.changedPointers.length,
            o = t & Se && i - r === 0,
            a = t & (Me | Ce) && i - r === 0;
        n.isFirst = !!o, n.isFinal = !!a, o && (e.session = {}), n.eventType = t, S(e, n), e.emit("hammer.input", n), e.recognize(n), e.session.prevInput = n
    }

    function S(e, t) {
        var n = e.session,
            i = t.pointers,
            r = i.length;
        n.firstInput || (n.firstInput = C(t)), r > 1 && !n.firstMultiple ? n.firstMultiple = C(t) : 1 === r && (n.firstMultiple = !1);
        var o = n.firstInput,
            a = n.firstMultiple,
            s = a ? a.center : o.center,
            l = t.center = A(i);
        t.timeStamp = pe(), t.deltaTime = t.timeStamp - o.timeStamp, t.angle = D(s, l), t.distance = L(s, l), _(n, t), t.offsetDirection = k(t.deltaX, t.deltaY);
        var c = P(t.deltaTime, t.deltaX, t.deltaY);
        t.overallVelocityX = c.x, t.overallVelocityY = c.y, t.overallVelocity = de(c.x) > de(c.y) ? c.x : c.y, t.scale = a ? F(a.pointers, i) : 1, t.rotation = a ? O(a.pointers, i) : 0, t.maxPointers = n.prevInput ? t.pointers.length > n.prevInput.maxPointers ? t.pointers.length : n.prevInput.maxPointers : t.pointers.length, M(n, t);
        var u = e.element;
        f(t.srcEvent.target, u) && (u = t.srcEvent.target), t.target = u
    }

    function _(e, t) {
        var n = t.center,
            i = e.offsetDelta || {},
            r = e.prevDelta || {},
            o = e.prevInput || {};
        (t.eventType === Se || o.eventType === Me) && (r = e.prevDelta = {
            x: o.deltaX || 0,
            y: o.deltaY || 0
        }, i = e.offsetDelta = {
            x: n.x,
            y: n.y
        }), t.deltaX = r.x + (n.x - i.x), t.deltaY = r.y + (n.y - i.y)
    }

    function M(e, t) {
        var n, r, o, a, s = e.lastInterval || t,
            l = t.timeStamp - s.timeStamp;
        if (t.eventType != Ce && (l > He || s.velocity === i)) {
            var c = t.deltaX - s.deltaX,
                u = t.deltaY - s.deltaY,
                h = P(l, c, u);
            r = h.x, o = h.y, n = de(h.x) > de(h.y) ? h.x : h.y, a = k(c, u), e.lastInterval = t
        } else n = s.velocity, r = s.velocityX, o = s.velocityY, a = s.direction;
        t.velocity = n, t.velocityX = r, t.velocityY = o, t.direction = a
    }

    function C(e) {
        for (var t = [], n = 0; n < e.pointers.length;) t[n] = {
            clientX: he(e.pointers[n].clientX),
            clientY: he(e.pointers[n].clientY)
        }, n++;
        return {
            timeStamp: pe(),
            pointers: t,
            center: A(t),
            deltaX: e.deltaX,
            deltaY: e.deltaY
        }
    }

    function A(e) {
        var t = e.length;
        if (1 === t) return {
            x: he(e[0].clientX),
            y: he(e[0].clientY)
        };
        for (var n = 0, i = 0, r = 0; t > r;) n += e[r].clientX, i += e[r].clientY, r++;
        return {
            x: he(n / t),
            y: he(i / t)
        }
    }

    function P(e, t, n) {
        return {
            x: t / e || 0,
            y: n / e || 0
        }
    }

    function k(e, t) {
        return e === t ? Ae : de(e) >= de(t) ? 0 > e ? Pe : ke : 0 > t ? Le : De
    }

    function L(e, t, n) {
        n || (n = Ve);
        var i = t[n[0]] - e[n[0]],
            r = t[n[1]] - e[n[1]];
        return Math.sqrt(i * i + r * r)
    }

    function D(e, t, n) {
        n || (n = Ve);
        var i = t[n[0]] - e[n[0]],
            r = t[n[1]] - e[n[1]];
        return 180 * Math.atan2(r, i) / Math.PI
    }

    function O(e, t) {
        return D(t[1], t[0], Ie) + D(e[1], e[0], Ie)
    }

    function F(e, t) {
        return L(t[0], t[1], Ie) / L(e[0], e[1], Ie)
    }

    function j() {
        this.evEl = Be, this.evWin = ze, this.allow = !0, this.pressed = !1, w.apply(this, arguments)
    }

    function V() {
        this.evEl = We, this.evWin = qe, w.apply(this, arguments), this.store = this.manager.session.pointerEvents = []
    }

    function I() {
        this.evTarget = $e, this.evWin = Ye, this.started = !1, w.apply(this, arguments)
    }

    function N(e, t) {
        var n = v(e.touches),
            i = v(e.changedTouches);
        return t & (Me | Ce) && (n = y(n.concat(i), "identifier", !0)), [n, i]
    }

    function B() {
        this.evTarget = Ke, this.targetIds = {}, w.apply(this, arguments)
    }

    function z(e, t) {
        var n = v(e.touches),
            i = this.targetIds;
        if (t & (Se | _e) && 1 === n.length) return i[n[0].identifier] = !0, [n, n];
        var r, o, a = v(e.changedTouches),
            s = [],
            l = this.target;
        if (o = n.filter(function(e) {
                return f(e.target, l)
            }), t === Se)
            for (r = 0; r < o.length;) i[o[r].identifier] = !0, r++;
        for (r = 0; r < a.length;) i[a[r].identifier] && s.push(a[r]), t & (Me | Ce) && delete i[a[r].identifier], r++;
        return s.length ? [y(o.concat(s), "identifier", !0), s] : void 0
    }

    function U() {
        w.apply(this, arguments);
        var e = c(this.handler, this);
        this.touch = new B(this.manager, e), this.mouse = new j(this.manager, e)
    }

    function G(e, t) {
        this.manager = e, this.set(t)
    }

    function W(e) {
        if (m(e, it)) return it;
        var t = m(e, rt),
            n = m(e, ot);
        return t && n ? it : t || n ? t ? rt : ot : m(e, nt) ? nt : tt
    }

    function q(e) {
        this.options = se({}, this.defaults, e || {}), this.id = x(), this.manager = null, this.options.enable = h(this.options.enable, !0), this.state = at, this.simultaneous = {}, this.requireFail = []
    }

    function X(e) {
        return e & ht ? "cancel" : e & ct ? "end" : e & lt ? "move" : e & st ? "start" : ""
    }

    function Y(e) {
        return e == De ? "down" : e == Le ? "up" : e == Pe ? "left" : e == ke ? "right" : ""
    }

    function Z(e, t) {
        var n = t.manager;
        return n ? n.get(e) : e
    }

    function K() {
        q.apply(this, arguments)
    }

    function Q() {
        K.apply(this, arguments), this.pX = null, this.pY = null
    }

    function $() {
        K.apply(this, arguments)
    }

    function J() {
        q.apply(this, arguments), this._timer = null, this._input = null
    }

    function ee() {
        K.apply(this, arguments)
    }

    function te() {
        K.apply(this, arguments)
    }

    function ne() {
        q.apply(this, arguments), this.pTime = !1, this.pCenter = !1, this._timer = null, this._input = null, this.count = 0
    }

    function ie(e, t) {
        return t = t || {}, t.recognizers = h(t.recognizers, ie.defaults.preset), new re(e, t)
    }

    function re(e, t) {
        this.options = se({}, ie.defaults, t || {}), this.options.inputTarget = this.options.inputTarget || e, this.handlers = {}, this.session = {}, this.recognizers = [], this.element = e, this.input = b(this), this.touchAction = new G(this, this.options.touchAction), oe(this, !0), a(this.options.recognizers, function(e) {
            var t = this.add(new e[0](e[1]));
            e[2] && t.recognizeWith(e[2]), e[3] && t.requireFailure(e[3])
        }, this)
    }

    function oe(e, t) {
        var n = e.element;
        n.style && a(e.options.cssProps, function(e, i) {
            n.style[T(n.style, i)] = t ? e : ""
        })
    }

    function ae(e, n) {
        var i = t.createEvent("Event");
        i.initEvent(e, !0, !0), i.gesture = n, n.target.dispatchEvent(i)
    }
    var se, le = ["", "webkit", "Moz", "MS", "ms", "o"],
        ce = t.createElement("div"),
        ue = "function",
        he = Math.round,
        de = Math.abs,
        pe = Date.now;
    se = "function" != typeof Object.assign ? function(e) {
        if (e === i || null === e) throw new TypeError("Cannot convert undefined or null to object");
        for (var t = Object(e), n = 1; n < arguments.length; n++) {
            var r = arguments[n];
            if (r !== i && null !== r)
                for (var o in r) r.hasOwnProperty(o) && (t[o] = r[o])
        }
        return t
    } : Object.assign;
    var fe = s(function(e, t, n) {
            for (var r = Object.keys(t), o = 0; o < r.length;)(!n || n && e[r[o]] === i) && (e[r[o]] = t[r[o]]), o++;
            return e
        }, "extend", "Use `assign`."),
        me = s(function(e, t) {
            return fe(e, t, !0)
        }, "merge", "Use `assign`."),
        Ee = 1,
        ge = /mobile|tablet|ip(ad|hone|od)|android/i,
        ve = "ontouchstart" in e,
        ye = T(e, "PointerEvent") !== i,
        Te = ve && ge.test(navigator.userAgent),
        xe = "touch",
        Re = "pen",
        we = "mouse",
        be = "kinect",
        He = 25,
        Se = 1,
        _e = 2,
        Me = 4,
        Ce = 8,
        Ae = 1,
        Pe = 2,
        ke = 4,
        Le = 8,
        De = 16,
        Oe = Pe | ke,
        Fe = Le | De,
        je = Oe | Fe,
        Ve = ["x", "y"],
        Ie = ["clientX", "clientY"];
    w.prototype = {
        handler: function() {},
        init: function() {
            this.evEl && d(this.element, this.evEl, this.domHandler), this.evTarget && d(this.target, this.evTarget, this.domHandler), this.evWin && d(R(this.element), this.evWin, this.domHandler)
        },
        destroy: function() {
            this.evEl && p(this.element, this.evEl, this.domHandler), this.evTarget && p(this.target, this.evTarget, this.domHandler), this.evWin && p(R(this.element), this.evWin, this.domHandler)
        }
    };
    var Ne = {
            mousedown: Se,
            mousemove: _e,
            mouseup: Me
        },
        Be = "mousedown",
        ze = "mousemove mouseup";
    l(j, w, {
        handler: function(e) {
            var t = Ne[e.type];
            t & Se && 0 === e.button && (this.pressed = !0), t & _e && 1 !== e.which && (t = Me), this.pressed && this.allow && (t & Me && (this.pressed = !1), this.callback(this.manager, t, {
                pointers: [e],
                changedPointers: [e],
                pointerType: we,
                srcEvent: e
            }))
        }
    });
    var Ue = {
            pointerdown: Se,
            pointermove: _e,
            pointerup: Me,
            pointercancel: Ce,
            pointerout: Ce
        },
        Ge = {
            2: xe,
            3: Re,
            4: we,
            5: be
        },
        We = "pointerdown",
        qe = "pointermove pointerup pointercancel";
    e.MSPointerEvent && !e.PointerEvent && (We = "MSPointerDown", qe = "MSPointerMove MSPointerUp MSPointerCancel"), l(V, w, {
        handler: function(e) {
            var t = this.store,
                n = !1,
                i = e.type.toLowerCase().replace("ms", ""),
                r = Ue[i],
                o = Ge[e.pointerType] || e.pointerType,
                a = o == xe,
                s = g(t, e.pointerId, "pointerId");
            r & Se && (0 === e.button || a) ? 0 > s && (t.push(e), s = t.length - 1) : r & (Me | Ce) && (n = !0), 0 > s || (t[s] = e, this.callback(this.manager, r, {
                pointers: t,
                changedPointers: [e],
                pointerType: o,
                srcEvent: e
            }), n && t.splice(s, 1))
        }
    });
    var Xe = {
            touchstart: Se,
            touchmove: _e,
            touchend: Me,
            touchcancel: Ce
        },
        $e = "touchstart",
        Ye = "touchstart touchmove touchend touchcancel";
    l(I, w, {
        handler: function(e) {
            var t = Xe[e.type];
            if (t === Se && (this.started = !0), this.started) {
                var n = N.call(this, e, t);
                t & (Me | Ce) && n[0].length - n[1].length === 0 && (this.started = !1), this.callback(this.manager, t, {
                    pointers: n[0],
                    changedPointers: n[1],
                    pointerType: xe,
                    srcEvent: e
                })
            }
        }
    });
    var Ze = {
            touchstart: Se,
            touchmove: _e,
            touchend: Me,
            touchcancel: Ce
        },
        Ke = "touchstart touchmove touchend touchcancel";
    l(B, w, {
        handler: function(e) {
            var t = Ze[e.type],
                n = z.call(this, e, t);
            n && this.callback(this.manager, t, {
                pointers: n[0],
                changedPointers: n[1],
                pointerType: xe,
                srcEvent: e
            })
        }
    }), l(U, w, {
        handler: function(e, t, n) {
            var i = n.pointerType == xe,
                r = n.pointerType == we;
            if (i) this.mouse.allow = !1;
            else if (r && !this.mouse.allow) return;
            t & (Me | Ce) && (this.mouse.allow = !0), this.callback(e, t, n)
        },
        destroy: function() {
            this.touch.destroy(), this.mouse.destroy()
        }
    });
    var Qe = T(ce.style, "touchAction"),
        Je = Qe !== i,
        et = "compute",
        tt = "auto",
        nt = "manipulation",
        it = "none",
        rt = "pan-x",
        ot = "pan-y";
    G.prototype = {
        set: function(e) {
            e == et && (e = this.compute()), Je && this.manager.element.style && (this.manager.element.style[Qe] = e), this.actions = e.toLowerCase().trim()
        },
        update: function() {
            this.set(this.manager.options.touchAction)
        },
        compute: function() {
            var e = [];
            return a(this.manager.recognizers, function(t) {
                u(t.options.enable, [t]) && (e = e.concat(t.getTouchAction()))
            }), W(e.join(" "))
        },
        preventDefaults: function(e) {
            if (!Je) {
                var t = e.srcEvent,
                    n = e.offsetDirection;
                if (this.manager.session.prevented) return void t.preventDefault();
                var i = this.actions,
                    r = m(i, it),
                    o = m(i, ot),
                    a = m(i, rt);
                if (r) {
                    var s = 1 === e.pointers.length,
                        l = e.distance < 2,
                        c = e.deltaTime < 250;
                    if (s && l && c) return
                }
                if (!a || !o) return r || o && n & Oe || a && n & Fe ? this.preventSrc(t) : void 0
            }
        },
        preventSrc: function(e) {
            this.manager.session.prevented = !0, e.preventDefault()
        }
    };
    var at = 1,
        st = 2,
        lt = 4,
        ct = 8,
        ut = ct,
        ht = 16,
        dt = 32;
    q.prototype = {
        defaults: {},
        set: function(e) {
            return se(this.options, e), this.manager && this.manager.touchAction.update(), this
        },
        recognizeWith: function(e) {
            if (o(e, "recognizeWith", this)) return this;
            var t = this.simultaneous;
            return e = Z(e, this), t[e.id] || (t[e.id] = e, e.recognizeWith(this)), this
        },
        dropRecognizeWith: function(e) {
            return o(e, "dropRecognizeWith", this) ? this : (e = Z(e, this), delete this.simultaneous[e.id], this)
        },
        requireFailure: function(e) {
            if (o(e, "requireFailure", this)) return this;
            var t = this.requireFail;
            return e = Z(e, this), -1 === g(t, e) && (t.push(e), e.requireFailure(this)), this
        },
        dropRequireFailure: function(e) {
            if (o(e, "dropRequireFailure", this)) return this;
            e = Z(e, this);
            var t = g(this.requireFail, e);
            return t > -1 && this.requireFail.splice(t, 1), this
        },
        hasRequireFailures: function() {
            return this.requireFail.length > 0
        },
        canRecognizeWith: function(e) {
            return !!this.simultaneous[e.id]
        },
        emit: function(e) {
            function t(t) {
                n.manager.emit(t, e)
            }
            var n = this,
                i = this.state;
            ct > i && t(n.options.event + X(i)), t(n.options.event), e.additionalEvent && t(e.additionalEvent), i >= ct && t(n.options.event + X(i))
        },
        tryEmit: function(e) {
            return this.canEmit() ? this.emit(e) : void(this.state = dt)
        },
        canEmit: function() {
            for (var e = 0; e < this.requireFail.length;) {
                if (!(this.requireFail[e].state & (dt | at))) return !1;
                e++
            }
            return !0
        },
        recognize: function(e) {
            var t = se({}, e);
            return u(this.options.enable, [this, t]) ? (this.state & (ut | ht | dt) && (this.state = at), this.state = this.process(t), void(this.state & (st | lt | ct | ht) && this.tryEmit(t))) : (this.reset(), void(this.state = dt))
        },
        process: function(e) {},
        getTouchAction: function() {},
        reset: function() {}
    }, l(K, q, {
        defaults: {
            pointers: 1
        },
        attrTest: function(e) {
            var t = this.options.pointers;
            return 0 === t || e.pointers.length === t
        },
        process: function(e) {
            var t = this.state,
                n = e.eventType,
                i = t & (st | lt),
                r = this.attrTest(e);
            return i && (n & Ce || !r) ? t | ht : i || r ? n & Me ? t | ct : t & st ? t | lt : st : dt
        }
    }), l(Q, K, {
        defaults: {
            event: "pan",
            threshold: 10,
            pointers: 1,
            direction: je
        },
        getTouchAction: function() {
            var e = this.options.direction,
                t = [];
            return e & Oe && t.push(ot), e & Fe && t.push(rt), t
        },
        directionTest: function(e) {
            var t = this.options,
                n = !0,
                i = e.distance,
                r = e.direction,
                o = e.deltaX,
                a = e.deltaY;
            return r & t.direction || (t.direction & Oe ? (r = 0 === o ? Ae : 0 > o ? Pe : ke, n = o != this.pX, i = Math.abs(e.deltaX)) : (r = 0 === a ? Ae : 0 > a ? Le : De, n = a != this.pY, i = Math.abs(e.deltaY))), e.direction = r, n && i > t.threshold && r & t.direction
        },
        attrTest: function(e) {
            return K.prototype.attrTest.call(this, e) && (this.state & st || !(this.state & st) && this.directionTest(e))
        },
        emit: function(e) {
            this.pX = e.deltaX, this.pY = e.deltaY;
            var t = Y(e.direction);
            t && (e.additionalEvent = this.options.event + t), this._super.emit.call(this, e)
        }
    }), l($, K, {
        defaults: {
            event: "pinch",
            threshold: 0,
            pointers: 2
        },
        getTouchAction: function() {
            return [it]
        },
        attrTest: function(e) {
            return this._super.attrTest.call(this, e) && (Math.abs(e.scale - 1) > this.options.threshold || this.state & st)
        },
        emit: function(e) {
            if (1 !== e.scale) {
                var t = e.scale < 1 ? "in" : "out";
                e.additionalEvent = this.options.event + t
            }
            this._super.emit.call(this, e)
        }
    }), l(J, q, {
        defaults: {
            event: "press",
            pointers: 1,
            time: 251,
            threshold: 9
        },
        getTouchAction: function() {
            return [tt]
        },
        process: function(e) {
            var t = this.options,
                n = e.pointers.length === t.pointers,
                i = e.distance < t.threshold,
                o = e.deltaTime > t.time;
            if (this._input = e, !i || !n || e.eventType & (Me | Ce) && !o) this.reset();
            else if (e.eventType & Se) this.reset(), this._timer = r(function() {
                this.state = ut, this.tryEmit()
            }, t.time, this);
            else if (e.eventType & Me) return ut;
            return dt
        },
        reset: function() {
            clearTimeout(this._timer)
        },
        emit: function(e) {
            this.state === ut && (e && e.eventType & Me ? this.manager.emit(this.options.event + "up", e) : (this._input.timeStamp = pe(),
                this.manager.emit(this.options.event, this._input)))
        }
    }), l(ee, K, {
        defaults: {
            event: "rotate",
            threshold: 0,
            pointers: 2
        },
        getTouchAction: function() {
            return [it]
        },
        attrTest: function(e) {
            return this._super.attrTest.call(this, e) && (Math.abs(e.rotation) > this.options.threshold || this.state & st)
        }
    }), l(te, K, {
        defaults: {
            event: "swipe",
            threshold: 10,
            velocity: .3,
            direction: Oe | Fe,
            pointers: 1
        },
        getTouchAction: function() {
            return Q.prototype.getTouchAction.call(this)
        },
        attrTest: function(e) {
            var t, n = this.options.direction;
            return n & (Oe | Fe) ? t = e.overallVelocity : n & Oe ? t = e.overallVelocityX : n & Fe && (t = e.overallVelocityY), this._super.attrTest.call(this, e) && n & e.offsetDirection && e.distance > this.options.threshold && e.maxPointers == this.options.pointers && de(t) > this.options.velocity && e.eventType & Me
        },
        emit: function(e) {
            var t = Y(e.offsetDirection);
            t && this.manager.emit(this.options.event + t, e), this.manager.emit(this.options.event, e)
        }
    }), l(ne, q, {
        defaults: {
            event: "tap",
            pointers: 1,
            taps: 1,
            interval: 300,
            time: 250,
            threshold: 9,
            posThreshold: 10
        },
        getTouchAction: function() {
            return [nt]
        },
        process: function(e) {
            var t = this.options,
                n = e.pointers.length === t.pointers,
                i = e.distance < t.threshold,
                o = e.deltaTime < t.time;
            if (this.reset(), e.eventType & Se && 0 === this.count) return this.failTimeout();
            if (i && o && n) {
                if (e.eventType != Me) return this.failTimeout();
                var a = !this.pTime || e.timeStamp - this.pTime < t.interval,
                    s = !this.pCenter || L(this.pCenter, e.center) < t.posThreshold;
                this.pTime = e.timeStamp, this.pCenter = e.center, s && a ? this.count += 1 : this.count = 1, this._input = e;
                var l = this.count % t.taps;
                if (0 === l) return this.hasRequireFailures() ? (this._timer = r(function() {
                    this.state = ut, this.tryEmit()
                }, t.interval, this), st) : ut
            }
            return dt
        },
        failTimeout: function() {
            return this._timer = r(function() {
                this.state = dt
            }, this.options.interval, this), dt
        },
        reset: function() {
            clearTimeout(this._timer)
        },
        emit: function() {
            this.state == ut && (this._input.tapCount = this.count, this.manager.emit(this.options.event, this._input))
        }
    }), ie.VERSION = "2.0.6", ie.defaults = {
        domEvents: !1,
        touchAction: et,
        enable: !0,
        inputTarget: null,
        inputClass: null,
        preset: [
            [ee, {
                enable: !1
            }],
            [$, {
                    enable: !1
                },
                ["rotate"]
            ],
            [te, {
                direction: Oe
            }],
            [Q, {
                    direction: Oe
                },
                ["swipe"]
            ],
            [ne],
            [ne, {
                    event: "doubletap",
                    taps: 2
                },
                ["tap"]
            ],
            [J]
        ],
        cssProps: {
            userSelect: "none",
            touchSelect: "none",
            touchCallout: "none",
            contentZooming: "none",
            userDrag: "none",
            tapHighlightColor: "rgba(0,0,0,0)"
        }
    };
    var pt = 1,
        ft = 2;
    re.prototype = {
        set: function(e) {
            return se(this.options, e), e.touchAction && this.touchAction.update(), e.inputTarget && (this.input.destroy(), this.input.target = e.inputTarget, this.input.init()), this
        },
        stop: function(e) {
            this.session.stopped = e ? ft : pt
        },
        recognize: function(e) {
            var t = this.session;
            if (!t.stopped) {
                this.touchAction.preventDefaults(e);
                var n, i = this.recognizers,
                    r = t.curRecognizer;
                (!r || r && r.state & ut) && (r = t.curRecognizer = null);
                for (var o = 0; o < i.length;) n = i[o], t.stopped === ft || r && n != r && !n.canRecognizeWith(r) ? n.reset() : n.recognize(e), !r && n.state & (st | lt | ct) && (r = t.curRecognizer = n), o++
            }
        },
        get: function(e) {
            if (e instanceof q) return e;
            for (var t = this.recognizers, n = 0; n < t.length; n++)
                if (t[n].options.event == e) return t[n];
            return null
        },
        add: function(e) {
            if (o(e, "add", this)) return this;
            var t = this.get(e.options.event);
            return t && this.remove(t), this.recognizers.push(e), e.manager = this, this.touchAction.update(), e
        },
        remove: function(e) {
            if (o(e, "remove", this)) return this;
            if (e = this.get(e)) {
                var t = this.recognizers,
                    n = g(t, e); - 1 !== n && (t.splice(n, 1), this.touchAction.update())
            }
            return this
        },
        on: function(e, t) {
            var n = this.handlers;
            return a(E(e), function(e) {
                n[e] = n[e] || [], n[e].push(t)
            }), this
        },
        off: function(e, t) {
            var n = this.handlers;
            return a(E(e), function(e) {
                t ? n[e] && n[e].splice(g(n[e], t), 1) : delete n[e]
            }), this
        },
        emit: function(e, t) {
            this.options.domEvents && ae(e, t);
            var n = this.handlers[e] && this.handlers[e].slice();
            if (n && n.length) {
                t.type = e, t.preventDefault = function() {
                    t.srcEvent.preventDefault()
                };
                for (var i = 0; i < n.length;) n[i](t), i++
            }
        },
        destroy: function() {
            this.element && oe(this, !1), this.handlers = {}, this.session = {}, this.input.destroy(), this.element = null
        }
    }, se(ie, {
        INPUT_START: Se,
        INPUT_MOVE: _e,
        INPUT_END: Me,
        INPUT_CANCEL: Ce,
        STATE_POSSIBLE: at,
        STATE_BEGAN: st,
        STATE_CHANGED: lt,
        STATE_ENDED: ct,
        STATE_RECOGNIZED: ut,
        STATE_CANCELLED: ht,
        STATE_FAILED: dt,
        DIRECTION_NONE: Ae,
        DIRECTION_LEFT: Pe,
        DIRECTION_RIGHT: ke,
        DIRECTION_UP: Le,
        DIRECTION_DOWN: De,
        DIRECTION_HORIZONTAL: Oe,
        DIRECTION_VERTICAL: Fe,
        DIRECTION_ALL: je,
        Manager: re,
        Input: w,
        TouchAction: G,
        TouchInput: B,
        MouseInput: j,
        PointerEventInput: V,
        TouchMouseInput: U,
        SingleTouchInput: I,
        Recognizer: q,
        AttrRecognizer: K,
        Tap: ne,
        Pan: Q,
        Swipe: te,
        Pinch: $,
        Rotate: ee,
        Press: J,
        on: d,
        off: p,
        each: a,
        merge: me,
        extend: fe,
        assign: se,
        inherit: l,
        bindFn: c,
        prefixed: T
    });
    var mt = "undefined" != typeof e ? e : "undefined" != typeof self ? self : {};
    mt.Hammer = ie, "function" == typeof define && define.amd ? define(function() {
        return ie
    }) : "undefined" != typeof module && module.exports ? module.exports = ie : e[n] = ie
}(window, document, "Hammer"),
function(e) {
    "function" == typeof require && "object" == typeof exports ? module.exports = e() : "function" == typeof define && define.amd ? define(["velocity"], e) : e()
}(function() {
    return function(e, t, n, i) {
        function r(e, t) {
            var n = [];
            return !(!e || !t) && ($.each([e, t], function(e, t) {
                var i = [];
                $.each(t, function(e, t) {
                    for (; t.toString().length < 5;) t = "0" + t;
                    i.push(t)
                }), n.push(i.join(""))
            }), parseFloat(n[0]) > parseFloat(n[1]))
        }
        if (!e.Velocity || !e.Velocity.Utilities) return void(t.console && console.log("Velocity UI Pack: Velocity must be loaded first. Aborting."));
        var o = e.Velocity,
            $ = o.Utilities,
            a = o.version,
            s = {
                major: 1,
                minor: 1,
                patch: 0
            };
        if (r(s, a)) {
            var l = "Velocity UI Pack: You need to update Velocity (jquery.velocity.js) to a newer version. Visit http://github.com/julianshapiro/velocity.";
            throw alert(l), new Error(l)
        }
        o.RegisterEffect = o.RegisterUI = function(e, t) {
            function n(e, t, n, i) {
                var r = 0,
                    a;
                $.each(e.nodeType ? [e] : e, function(e, t) {
                    i && (n += e * i), a = t.parentNode, $.each(["height", "paddingTop", "paddingBottom", "marginTop", "marginBottom"], function(e, n) {
                        r += parseFloat(o.CSS.getPropertyValue(t, n))
                    })
                }), o.animate(a, {
                    height: ("In" === t ? "+" : "-") + "=" + r
                }, {
                    queue: !1,
                    easing: "ease-in-out",
                    duration: n * ("In" === t ? .6 : 1)
                })
            }
            return o.Redirects[e] = function(r, a, s, l, c, u) {
                function h() {
                    a.display !== i && "none" !== a.display || !/Out$/.test(e) || $.each(c.nodeType ? [c] : c, function(e, t) {
                        o.CSS.setPropertyValue(t, "display", "none")
                    }), a.complete && a.complete.call(c, c), u && u.resolver(c || r)
                }
                var d = s === l - 1;
                "function" == typeof t.defaultDuration ? t.defaultDuration = t.defaultDuration.call(c, c) : t.defaultDuration = parseFloat(t.defaultDuration);
                for (var p = 0; p < t.calls.length; p++) {
                    var f = t.calls[p],
                        m = f[0],
                        E = a.duration || t.defaultDuration || 1e3,
                        g = f[1],
                        v = f[2] || {},
                        y = {};
                    if (y.duration = E * (g || 1), y.queue = a.queue || "", y.easing = v.easing || "ease", y.delay = parseFloat(v.delay) || 0, y._cacheValues = v._cacheValues || !0, 0 === p) {
                        if (y.delay += parseFloat(a.delay) || 0, 0 === s && (y.begin = function() {
                                a.begin && a.begin.call(c, c);
                                var t = e.match(/(In|Out)$/);
                                t && "In" === t[0] && m.opacity !== i && $.each(c.nodeType ? [c] : c, function(e, t) {
                                    o.CSS.setPropertyValue(t, "opacity", 0)
                                }), a.animateParentHeight && t && n(c, t[0], E + y.delay, a.stagger)
                            }), null !== a.display)
                            if (a.display !== i && "none" !== a.display) y.display = a.display;
                            else if (/In$/.test(e)) {
                            var T = o.CSS.Values.getDisplayType(r);
                            y.display = "inline" === T ? "inline-block" : T
                        }
                        a.visibility && "hidden" !== a.visibility && (y.visibility = a.visibility)
                    }
                    p === t.calls.length - 1 && (y.complete = function() {
                        if (t.reset) {
                            for (var e in t.reset) {
                                var n = t.reset[e];
                                o.CSS.Hooks.registered[e] !== i || "string" != typeof n && "number" != typeof n || (t.reset[e] = [t.reset[e], t.reset[e]])
                            }
                            var a = {
                                duration: 0,
                                queue: !1
                            };
                            d && (a.complete = h), o.animate(r, t.reset, a)
                        } else d && h()
                    }, "hidden" === a.visibility && (y.visibility = a.visibility)), o.animate(r, m, y)
                }
            }, o
        }, o.RegisterEffect.packagedEffects = {
            "callout.bounce": {
                defaultDuration: 550,
                calls: [
                    [{
                        translateY: -30
                    }, .25],
                    [{
                        translateY: 0
                    }, .125],
                    [{
                        translateY: -15
                    }, .125],
                    [{
                        translateY: 0
                    }, .25]
                ]
            },
            "callout.shake": {
                defaultDuration: 800,
                calls: [
                    [{
                        translateX: -11
                    }, .125],
                    [{
                        translateX: 11
                    }, .125],
                    [{
                        translateX: -11
                    }, .125],
                    [{
                        translateX: 11
                    }, .125],
                    [{
                        translateX: -11
                    }, .125],
                    [{
                        translateX: 11
                    }, .125],
                    [{
                        translateX: -11
                    }, .125],
                    [{
                        translateX: 0
                    }, .125]
                ]
            },
            "callout.flash": {
                defaultDuration: 1100,
                calls: [
                    [{
                        opacity: [0, "easeInOutQuad", 1]
                    }, .25],
                    [{
                        opacity: [1, "easeInOutQuad"]
                    }, .25],
                    [{
                        opacity: [0, "easeInOutQuad"]
                    }, .25],
                    [{
                        opacity: [1, "easeInOutQuad"]
                    }, .25]
                ]
            },
            "callout.pulse": {
                defaultDuration: 825,
                calls: [
                    [{
                        scaleX: 1.1,
                        scaleY: 1.1
                    }, .5, {
                        easing: "easeInExpo"
                    }],
                    [{
                        scaleX: 1,
                        scaleY: 1
                    }, .5]
                ]
            },
            "callout.swing": {
                defaultDuration: 950,
                calls: [
                    [{
                        rotateZ: 15
                    }, .2],
                    [{
                        rotateZ: -10
                    }, .2],
                    [{
                        rotateZ: 5
                    }, .2],
                    [{
                        rotateZ: -5
                    }, .2],
                    [{
                        rotateZ: 0
                    }, .2]
                ]
            },
            "callout.tada": {
                defaultDuration: 1e3,
                calls: [
                    [{
                        scaleX: .9,
                        scaleY: .9,
                        rotateZ: -3
                    }, .1],
                    [{
                        scaleX: 1.1,
                        scaleY: 1.1,
                        rotateZ: 3
                    }, .1],
                    [{
                        scaleX: 1.1,
                        scaleY: 1.1,
                        rotateZ: -3
                    }, .1],
                    ["reverse", .125],
                    ["reverse", .125],
                    ["reverse", .125],
                    ["reverse", .125],
                    ["reverse", .125],
                    [{
                        scaleX: 1,
                        scaleY: 1,
                        rotateZ: 0
                    }, .2]
                ]
            },
            "transition.fadeIn": {
                defaultDuration: 500,
                calls: [
                    [{
                        opacity: [1, 0]
                    }]
                ]
            },
            "transition.fadeOut": {
                defaultDuration: 500,
                calls: [
                    [{
                        opacity: [0, 1]
                    }]
                ]
            },
            "transition.flipXIn": {
                defaultDuration: 700,
                calls: [
                    [{
                        opacity: [1, 0],
                        transformPerspective: [800, 800],
                        rotateY: [0, -55]
                    }]
                ],
                reset: {
                    transformPerspective: 0
                }
            },
            "transition.flipXOut": {
                defaultDuration: 700,
                calls: [
                    [{
                        opacity: [0, 1],
                        transformPerspective: [800, 800],
                        rotateY: 55
                    }]
                ],
                reset: {
                    transformPerspective: 0,
                    rotateY: 0
                }
            },
            "transition.flipYIn": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [1, 0],
                        transformPerspective: [800, 800],
                        rotateX: [0, -45]
                    }]
                ],
                reset: {
                    transformPerspective: 0
                }
            },
            "transition.flipYOut": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [0, 1],
                        transformPerspective: [800, 800],
                        rotateX: 25
                    }]
                ],
                reset: {
                    transformPerspective: 0,
                    rotateX: 0
                }
            },
            "transition.flipBounceXIn": {
                defaultDuration: 900,
                calls: [
                    [{
                        opacity: [.725, 0],
                        transformPerspective: [400, 400],
                        rotateY: [-10, 90]
                    }, .5],
                    [{
                        opacity: .8,
                        rotateY: 10
                    }, .25],
                    [{
                        opacity: 1,
                        rotateY: 0
                    }, .25]
                ],
                reset: {
                    transformPerspective: 0
                }
            },
            "transition.flipBounceXOut": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [.9, 1],
                        transformPerspective: [400, 400],
                        rotateY: -10
                    }, .5],
                    [{
                        opacity: 0,
                        rotateY: 90
                    }, .5]
                ],
                reset: {
                    transformPerspective: 0,
                    rotateY: 0
                }
            },
            "transition.flipBounceYIn": {
                defaultDuration: 850,
                calls: [
                    [{
                        opacity: [.725, 0],
                        transformPerspective: [400, 400],
                        rotateX: [-10, 90]
                    }, .5],
                    [{
                        opacity: .8,
                        rotateX: 10
                    }, .25],
                    [{
                        opacity: 1,
                        rotateX: 0
                    }, .25]
                ],
                reset: {
                    transformPerspective: 0
                }
            },
            "transition.flipBounceYOut": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [.9, 1],
                        transformPerspective: [400, 400],
                        rotateX: -15
                    }, .5],
                    [{
                        opacity: 0,
                        rotateX: 90
                    }, .5]
                ],
                reset: {
                    transformPerspective: 0,
                    rotateX: 0
                }
            },
            "transition.swoopIn": {
                defaultDuration: 850,
                calls: [
                    [{
                        opacity: [1, 0],
                        transformOriginX: ["100%", "50%"],
                        transformOriginY: ["100%", "100%"],
                        scaleX: [1, 0],
                        scaleY: [1, 0],
                        translateX: [0, -700],
                        translateZ: 0
                    }]
                ],
                reset: {
                    transformOriginX: "50%",
                    transformOriginY: "50%"
                }
            },
            "transition.swoopOut": {
                defaultDuration: 850,
                calls: [
                    [{
                        opacity: [0, 1],
                        transformOriginX: ["50%", "100%"],
                        transformOriginY: ["100%", "100%"],
                        scaleX: 0,
                        scaleY: 0,
                        translateX: -700,
                        translateZ: 0
                    }]
                ],
                reset: {
                    transformOriginX: "50%",
                    transformOriginY: "50%",
                    scaleX: 1,
                    scaleY: 1,
                    translateX: 0
                }
            },
            "transition.whirlIn": {
                defaultDuration: 850,
                calls: [
                    [{
                        opacity: [1, 0],
                        transformOriginX: ["50%", "50%"],
                        transformOriginY: ["50%", "50%"],
                        scaleX: [1, 0],
                        scaleY: [1, 0],
                        rotateY: [0, 160]
                    }, 1, {
                        easing: "easeInOutSine"
                    }]
                ]
            },
            "transition.whirlOut": {
                defaultDuration: 750,
                calls: [
                    [{
                        opacity: [0, "easeInOutQuint", 1],
                        transformOriginX: ["50%", "50%"],
                        transformOriginY: ["50%", "50%"],
                        scaleX: 0,
                        scaleY: 0,
                        rotateY: 160
                    }, 1, {
                        easing: "swing"
                    }]
                ],
                reset: {
                    scaleX: 1,
                    scaleY: 1,
                    rotateY: 0
                }
            },
            "transition.shrinkIn": {
                defaultDuration: 750,
                calls: [
                    [{
                        opacity: [1, 0],
                        transformOriginX: ["50%", "50%"],
                        transformOriginY: ["50%", "50%"],
                        scaleX: [1, 1.5],
                        scaleY: [1, 1.5],
                        translateZ: 0
                    }]
                ]
            },
            "transition.shrinkOut": {
                defaultDuration: 600,
                calls: [
                    [{
                        opacity: [0, 1],
                        transformOriginX: ["50%", "50%"],
                        transformOriginY: ["50%", "50%"],
                        scaleX: 1.3,
                        scaleY: 1.3,
                        translateZ: 0
                    }]
                ],
                reset: {
                    scaleX: 1,
                    scaleY: 1
                }
            },
            "transition.expandIn": {
                defaultDuration: 700,
                calls: [
                    [{
                        opacity: [1, 0],
                        transformOriginX: ["50%", "50%"],
                        transformOriginY: ["50%", "50%"],
                        scaleX: [1, .625],
                        scaleY: [1, .625],
                        translateZ: 0
                    }]
                ]
            },
            "transition.expandOut": {
                defaultDuration: 700,
                calls: [
                    [{
                        opacity: [0, 1],
                        transformOriginX: ["50%", "50%"],
                        transformOriginY: ["50%", "50%"],
                        scaleX: .5,
                        scaleY: .5,
                        translateZ: 0
                    }]
                ],
                reset: {
                    scaleX: 1,
                    scaleY: 1
                }
            },
            "transition.bounceIn": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [1, 0],
                        scaleX: [1.05, .3],
                        scaleY: [1.05, .3]
                    }, .4],
                    [{
                        scaleX: .9,
                        scaleY: .9,
                        translateZ: 0
                    }, .2],
                    [{
                        scaleX: 1,
                        scaleY: 1
                    }, .5]
                ]
            },
            "transition.bounceOut": {
                defaultDuration: 800,
                calls: [
                    [{
                        scaleX: .95,
                        scaleY: .95
                    }, .35],
                    [{
                        scaleX: 1.1,
                        scaleY: 1.1,
                        translateZ: 0
                    }, .35],
                    [{
                        opacity: [0, 1],
                        scaleX: .3,
                        scaleY: .3
                    }, .3]
                ],
                reset: {
                    scaleX: 1,
                    scaleY: 1
                }
            },
            "transition.bounceUpIn": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateY: [-30, 1e3]
                    }, .6, {
                        easing: "easeOutCirc"
                    }],
                    [{
                        translateY: 10
                    }, .2],
                    [{
                        translateY: 0
                    }, .2]
                ]
            },
            "transition.bounceUpOut": {
                defaultDuration: 1e3,
                calls: [
                    [{
                        translateY: 20
                    }, .2],
                    [{
                        opacity: [0, "easeInCirc", 1],
                        translateY: -1e3
                    }, .8]
                ],
                reset: {
                    translateY: 0
                }
            },
            "transition.bounceDownIn": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateY: [30, -1e3]
                    }, .6, {
                        easing: "easeOutCirc"
                    }],
                    [{
                        translateY: -10
                    }, .2],
                    [{
                        translateY: 0
                    }, .2]
                ]
            },
            "transition.bounceDownOut": {
                defaultDuration: 1e3,
                calls: [
                    [{
                        translateY: -20
                    }, .2],
                    [{
                        opacity: [0, "easeInCirc", 1],
                        translateY: 1e3
                    }, .8]
                ],
                reset: {
                    translateY: 0
                }
            },
            "transition.bounceLeftIn": {
                defaultDuration: 750,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateX: [30, -1250]
                    }, .6, {
                        easing: "easeOutCirc"
                    }],
                    [{
                        translateX: -10
                    }, .2],
                    [{
                        translateX: 0
                    }, .2]
                ]
            },
            "transition.bounceLeftOut": {
                defaultDuration: 750,
                calls: [
                    [{
                        translateX: 30
                    }, .2],
                    [{
                        opacity: [0, "easeInCirc", 1],
                        translateX: -1250
                    }, .8]
                ],
                reset: {
                    translateX: 0
                }
            },
            "transition.bounceRightIn": {
                defaultDuration: 750,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateX: [-30, 1250]
                    }, .6, {
                        easing: "easeOutCirc"
                    }],
                    [{
                        translateX: 10
                    }, .2],
                    [{
                        translateX: 0
                    }, .2]
                ]
            },
            "transition.bounceRightOut": {
                defaultDuration: 750,
                calls: [
                    [{
                        translateX: -30
                    }, .2],
                    [{
                        opacity: [0, "easeInCirc", 1],
                        translateX: 1250
                    }, .8]
                ],
                reset: {
                    translateX: 0
                }
            },
            "transition.slideUpIn": {
                defaultDuration: 900,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateY: [0, 20],
                        translateZ: 0
                    }]
                ]
            },
            "transition.slideUpOut": {
                defaultDuration: 900,
                calls: [
                    [{
                        opacity: [0, 1],
                        translateY: -20,
                        translateZ: 0
                    }]
                ],
                reset: {
                    translateY: 0
                }
            },
            "transition.slideDownIn": {
                defaultDuration: 900,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateY: [0, -20],
                        translateZ: 0
                    }]
                ]
            },
            "transition.slideDownOut": {
                defaultDuration: 900,
                calls: [
                    [{
                        opacity: [0, 1],
                        translateY: 20,
                        translateZ: 0
                    }]
                ],
                reset: {
                    translateY: 0
                }
            },
            "transition.slideLeftIn": {
                defaultDuration: 1e3,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateX: [0, -20],
                        translateZ: 0
                    }]
                ]
            },
            "transition.slideLeftOut": {
                defaultDuration: 1050,
                calls: [
                    [{
                        opacity: [0, 1],
                        translateX: -20,
                        translateZ: 0
                    }]
                ],
                reset: {
                    translateX: 0
                }
            },
            "transition.slideRightIn": {
                defaultDuration: 1e3,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateX: [0, 20],
                        translateZ: 0
                    }]
                ]
            },
            "transition.slideRightOut": {
                defaultDuration: 1050,
                calls: [
                    [{
                        opacity: [0, 1],
                        translateX: 20,
                        translateZ: 0
                    }]
                ],
                reset: {
                    translateX: 0
                }
            },
            "transition.slideUpBigIn": {
                defaultDuration: 850,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateY: [0, 75],
                        translateZ: 0
                    }]
                ]
            },
            "transition.slideUpBigOut": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [0, 1],
                        translateY: -75,
                        translateZ: 0
                    }]
                ],
                reset: {
                    translateY: 0
                }
            },
            "transition.slideDownBigIn": {
                defaultDuration: 850,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateY: [0, -75],
                        translateZ: 0
                    }]
                ]
            },
            "transition.slideDownBigOut": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [0, 1],
                        translateY: 75,
                        translateZ: 0
                    }]
                ],
                reset: {
                    translateY: 0
                }
            },
            "transition.slideLeftBigIn": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateX: [0, -75],
                        translateZ: 0
                    }]
                ]
            },
            "transition.slideLeftBigOut": {
                defaultDuration: 750,
                calls: [
                    [{
                        opacity: [0, 1],
                        translateX: -75,
                        translateZ: 0
                    }]
                ],
                reset: {
                    translateX: 0
                }
            },
            "transition.slideRightBigIn": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [1, 0],
                        translateX: [0, 75],
                        translateZ: 0
                    }]
                ]
            },
            "transition.slideRightBigOut": {
                defaultDuration: 750,
                calls: [
                    [{
                        opacity: [0, 1],
                        translateX: 75,
                        translateZ: 0
                    }]
                ],
                reset: {
                    translateX: 0
                }
            },
            "transition.perspectiveUpIn": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [1, 0],
                        transformPerspective: [800, 800],
                        transformOriginX: [0, 0],
                        transformOriginY: ["100%", "100%"],
                        rotateX: [0, -180]
                    }]
                ],
                reset: {
                    transformPerspective: 0,
                    transformOriginX: "50%",
                    transformOriginY: "50%"
                }
            },
            "transition.perspectiveUpOut": {
                defaultDuration: 850,
                calls: [
                    [{
                        opacity: [0, 1],
                        transformPerspective: [800, 800],
                        transformOriginX: [0, 0],
                        transformOriginY: ["100%", "100%"],
                        rotateX: -180
                    }]
                ],
                reset: {
                    transformPerspective: 0,
                    transformOriginX: "50%",
                    transformOriginY: "50%",
                    rotateX: 0
                }
            },
            "transition.perspectiveDownIn": {
                defaultDuration: 800,
                calls: [
                    [{
                        opacity: [1, 0],
                        transformPerspective: [800, 800],
                        transformOriginX: [0, 0],
                        transformOriginY: [0, 0],
                        rotateX: [0, 180]
                    }]
                ],
                reset: {
                    transformPerspective: 0,
                    transformOriginX: "50%",
                    transformOriginY: "50%"
                }
            },
            "transition.perspectiveDownOut": {
                defaultDuration: 850,
                calls: [
                    [{
                        opacity: [0, 1],
                        transformPerspective: [800, 800],
                        transformOriginX: [0, 0],
                        transformOriginY: [0, 0],
                        rotateX: 180
                    }]
                ],
                reset: {
                    transformPerspective: 0,
                    transformOriginX: "50%",
                    transformOriginY: "50%",
                    rotateX: 0
                }
            },
            "transition.perspectiveLeftIn": {
                defaultDuration: 950,
                calls: [
                    [{
                        opacity: [1, 0],
                        transformPerspective: [2e3, 2e3],
                        transformOriginX: [0, 0],
                        transformOriginY: [0, 0],
                        rotateY: [0, -180]
                    }]
                ],
                reset: {
                    transformPerspective: 0,
                    transformOriginX: "50%",
                    transformOriginY: "50%"
                }
            },
            "transition.perspectiveLeftOut": {
                defaultDuration: 950,
                calls: [
                    [{
                        opacity: [0, 1],
                        transformPerspective: [2e3, 2e3],
                        transformOriginX: [0, 0],
                        transformOriginY: [0, 0],
                        rotateY: -180
                    }]
                ],
                reset: {
                    transformPerspective: 0,
                    transformOriginX: "50%",
                    transformOriginY: "50%",
                    rotateY: 0
                }
            },
            "transition.perspectiveRightIn": {
                defaultDuration: 950,
                calls: [
                    [{
                        opacity: [1, 0],
                        transformPerspective: [2e3, 2e3],
                        transformOriginX: ["100%", "100%"],
                        transformOriginY: [0, 0],
                        rotateY: [0, 180]
                    }]
                ],
                reset: {
                    transformPerspective: 0,
                    transformOriginX: "50%",
                    transformOriginY: "50%"
                }
            },
            "transition.perspectiveRightOut": {
                defaultDuration: 950,
                calls: [
                    [{
                        opacity: [0, 1],
                        transformPerspective: [2e3, 2e3],
                        transformOriginX: ["100%", "100%"],
                        transformOriginY: [0, 0],
                        rotateY: 180
                    }]
                ],
                reset: {
                    transformPerspective: 0,
                    transformOriginX: "50%",
                    transformOriginY: "50%",
                    rotateY: 0
                }
            }
        };
        for (var c in o.RegisterEffect.packagedEffects) o.RegisterEffect(c, o.RegisterEffect.packagedEffects[c]);
        o.RunSequence = function(e) {
            var t = $.extend(!0, [], e);
            t.length > 1 && ($.each(t.reverse(), function(e, n) {
                var i = t[e + 1];
                if (i) {
                    var r = n.o || n.options,
                        a = i.o || i.options,
                        s = r && r.sequenceQueue === !1 ? "begin" : "complete",
                        l = a && a[s],
                        c = {};
                    c[s] = function() {
                        var e = i.e || i.elements,
                            t = e.nodeType ? [e] : e;
                        l && l.call(t, t), o(n)
                    }, i.o ? i.o = $.extend({}, a, c) : i.options = $.extend({}, a, c)
                }
            }), t.reverse()), o(t[0])
        }
    }(window.jQuery || window.Zepto || window, window, document)
}),
function(e, t) {
    "function" == typeof define && define.amd ? define(["jquery"], t) : t("object" == typeof exports ? require("jquery") : e.jQuery ? e.jQuery : e.Zepto)
}(this, function($, e) {
    $.fn.jPlayer = function(t) {
        var n = "jPlayer",
            i = "string" == typeof t,
            r = Array.prototype.slice.call(arguments, 1),
            o = this;
        return t = !i && r.length ? $.extend.apply(null, [!0, t].concat(r)) : t, i && "_" === t.charAt(0) ? o : (i ? this.each(function() {
            var i = $(this).data(n),
                a = i && $.isFunction(i[t]) ? i[t].apply(i, r) : i;
            if (a !== i && a !== e) return o = a, !1
        }) : this.each(function() {
            var e = $(this).data(n);
            e ? e.option(t || {}) : $(this).data(n, new $.jPlayer(t, this))
        }), o)
    }, $.jPlayer = function(e, t) {
        if (arguments.length) {
            this.element = $(t), this.options = $.extend(!0, {}, this.options, e);
            var n = this;
            this.element.bind("remove.jPlayer", function() {
                n.destroy()
            }), this._init()
        }
    }, "function" != typeof $.fn.stop && ($.fn.stop = function() {}), $.jPlayer.emulateMethods = "load play pause", $.jPlayer.emulateStatus = "src readyState networkState currentTime duration paused ended playbackRate", $.jPlayer.emulateOptions = "muted volume", $.jPlayer.reservedEvent = "ready flashreset resize repeat error warning", $.jPlayer.event = {}, $.each(["ready", "setmedia", "flashreset", "resize", "repeat", "click", "error", "warning", "loadstart", "progress", "suspend", "abort", "emptied", "stalled", "play", "pause", "loadedmetadata", "loadeddata", "waiting", "playing", "canplay", "canplaythrough", "seeking", "seeked", "timeupdate", "ended", "ratechange", "durationchange", "volumechange"], function() {
        $.jPlayer.event[this] = "jPlayer_" + this
    }), $.jPlayer.htmlEvent = ["loadstart", "abort", "emptied", "stalled", "loadedmetadata", "canplay", "canplaythrough"], $.jPlayer.pause = function() {
        $.jPlayer.prototype.destroyRemoved(), $.each($.jPlayer.prototype.instances, function(e, t) {
            t.data("jPlayer").status.srcSet && t.jPlayer("pause")
        })
    }, $.jPlayer.timeFormat = {
        showHour: !1,
        showMin: !0,
        showSec: !0,
        padHour: !1,
        padMin: !0,
        padSec: !0,
        sepHour: ":",
        sepMin: ":",
        sepSec: ""
    };
    var t = function() {
        this.init()
    };
    t.prototype = {
        init: function() {
            this.options = {
                timeFormat: $.jPlayer.timeFormat
            }
        },
        time: function(e) {
            e = e && "number" == typeof e ? e : 0;
            var t = new Date(1e3 * e),
                n = t.getUTCHours(),
                i = this.options.timeFormat.showHour ? t.getUTCMinutes() : t.getUTCMinutes() + 60 * n,
                r = this.options.timeFormat.showMin ? t.getUTCSeconds() : t.getUTCSeconds() + 60 * i,
                o = this.options.timeFormat.padHour && n < 10 ? "0" + n : n,
                a = this.options.timeFormat.padMin && i < 10 ? "0" + i : i,
                s = this.options.timeFormat.padSec && r < 10 ? "0" + r : r,
                l = "";
            return l += this.options.timeFormat.showHour ? o + this.options.timeFormat.sepHour : "", l += this.options.timeFormat.showMin ? a + this.options.timeFormat.sepMin : "", l += this.options.timeFormat.showSec ? s + this.options.timeFormat.sepSec : ""
        }
    };
    var n = new t;
    $.jPlayer.convertTime = function(e) {
        return n.time(e)
    }, $.jPlayer.uaBrowser = function(e) {
        var t = e.toLowerCase(),
            n = /(webkit)[ \/]([\w.]+)/,
            i = /(opera)(?:.*version)?[ \/]([\w.]+)/,
            r = /(msie) ([\w.]+)/,
            o = /(mozilla)(?:.*? rv:([\w.]+))?/,
            a = n.exec(t) || i.exec(t) || r.exec(t) || t.indexOf("compatible") < 0 && o.exec(t) || [];
        return {
            browser: a[1] || "",
            version: a[2] || "0"
        }
    }, $.jPlayer.uaPlatform = function(e) {
        var t = e.toLowerCase(),
            n = /(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/,
            i = /(ipad|playbook)/,
            r = /(android)/,
            o = /(mobile)/,
            a = n.exec(t) || [],
            s = i.exec(t) || !o.exec(t) && r.exec(t) || [];
        return a[1] && (a[1] = a[1].replace(/\s/g, "_")), {
            platform: a[1] || "",
            tablet: s[1] || ""
        }
    }, $.jPlayer.browser = {}, $.jPlayer.platform = {};
    var i = $.jPlayer.uaBrowser(navigator.userAgent);
    i.browser && ($.jPlayer.browser[i.browser] = !0, $.jPlayer.browser.version = i.version);
    var r = $.jPlayer.uaPlatform(navigator.userAgent);
    r.platform && ($.jPlayer.platform[r.platform] = !0, $.jPlayer.platform.mobile = !r.tablet, $.jPlayer.platform.tablet = !!r.tablet), $.jPlayer.getDocMode = function() {
        var e;
        return $.jPlayer.browser.msie && (document.documentMode ? e = document.documentMode : (e = 5, document.compatMode && "CSS1Compat" === document.compatMode && (e = 7))), e
    }, $.jPlayer.browser.documentMode = $.jPlayer.getDocMode(), $.jPlayer.nativeFeatures = {
        init: function() {
            var e = document,
                t = e.createElement("video"),
                n = {
                    w3c: ["fullscreenEnabled", "fullscreenElement", "requestFullscreen", "exitFullscreen", "fullscreenchange", "fullscreenerror"],
                    moz: ["mozFullScreenEnabled", "mozFullScreenElement", "mozRequestFullScreen", "mozCancelFullScreen", "mozfullscreenchange", "mozfullscreenerror"],
                    webkit: ["", "webkitCurrentFullScreenElement", "webkitRequestFullScreen", "webkitCancelFullScreen", "webkitfullscreenchange", ""],
                    webkitVideo: ["webkitSupportsFullscreen", "webkitDisplayingFullscreen", "webkitEnterFullscreen", "webkitExitFullscreen", "", ""],
                    ms: ["", "msFullscreenElement", "msRequestFullscreen", "msExitFullscreen", "MSFullscreenChange", "MSFullscreenError"]
                },
                i = ["w3c", "moz", "webkit", "webkitVideo", "ms"],
                r, o, a;
            for (this.fullscreen = r = {
                    support: {
                        w3c: !!e[n.w3c[0]],
                        moz: !!e[n.moz[0]],
                        webkit: "function" == typeof e[n.webkit[3]],
                        webkitVideo: "function" == typeof t[n.webkitVideo[2]],
                        ms: "function" == typeof t[n.ms[2]]
                    },
                    used: {}
                }, o = 0, a = i.length; o < a; o++) {
                var s = i[o];
                if (r.support[s]) {
                    r.spec = s, r.used[s] = !0;
                    break
                }
            }
            if (r.spec) {
                var l = n[r.spec];
                r.api = {
                    fullscreenEnabled: !0,
                    fullscreenElement: function(t) {
                        return t = t ? t : e, t[l[1]]
                    },
                    requestFullscreen: function(e) {
                        return e[l[2]]()
                    },
                    exitFullscreen: function(t) {
                        return t = t ? t : e, t[l[3]]()
                    }
                }, r.event = {
                    fullscreenchange: l[4],
                    fullscreenerror: l[5]
                }
            } else r.api = {
                fullscreenEnabled: !1,
                fullscreenElement: function() {
                    return null
                },
                requestFullscreen: function() {},
                exitFullscreen: function() {}
            }, r.event = {}
        }
    }, $.jPlayer.nativeFeatures.init(), $.jPlayer.focus = null, $.jPlayer.keyIgnoreElementNames = "A INPUT TEXTAREA SELECT BUTTON";
    var o = function(e) {
        var t = $.jPlayer.focus,
            n;
        t && ($.each($.jPlayer.keyIgnoreElementNames.split(/\s+/g), function(t, i) {
            if (e.target.nodeName.toUpperCase() === i.toUpperCase()) return n = !0, !1
        }), n || $.each(t.options.keyBindings, function(n, i) {
            if (i && $.isFunction(i.fn) && ("number" == typeof i.key && e.which === i.key || "string" == typeof i.key && e.key === i.key)) return e.preventDefault(), i.fn(t), !1
        }))
    };
    $.jPlayer.keys = function(e) {
        var t = "keydown.jPlayer";
        $(document.documentElement).unbind(t), e && $(document.documentElement).bind(t, o)
    }, $.jPlayer.keys(!0), $.jPlayer.prototype = {
        count: 0,
        version: {
            script: "2.9.2",
            needFlash: "2.9.0",
            flash: "unknown"
        },
        options: {
            swfPath: "js",
            solution: "html, flash",
            supplied: "mp3",
            auroraFormats: "wav",
            preload: "metadata",
            volume: .8,
            muted: !1,
            remainingDuration: !1,
            toggleDuration: !1,
            captureDuration: !0,
            playbackRate: 1,
            defaultPlaybackRate: 1,
            minPlaybackRate: .5,
            maxPlaybackRate: 4,
            wmode: "opaque",
            backgroundColor: "#000000",
            cssSelectorAncestor: "#jp_container_1",
            cssSelector: {
                videoPlay: ".jp-video-play",
                play: ".jp-play",
                pause: ".jp-pause",
                stop: ".jp-stop",
                seekBar: ".jp-seek-bar",
                playBar: ".jp-play-bar",
                mute: ".jp-mute",
                unmute: ".jp-unmute",
                volumeBar: ".jp-volume-bar",
                volumeBarValue: ".jp-volume-bar-value",
                volumeMax: ".jp-volume-max",
                playbackRateBar: ".jp-playback-rate-bar",
                playbackRateBarValue: ".jp-playback-rate-bar-value",
                currentTime: ".jp-current-time",
                duration: ".jp-duration",
                title: ".jp-title",
                fullScreen: ".jp-full-screen",
                restoreScreen: ".jp-restore-screen",
                repeat: ".jp-repeat",
                repeatOff: ".jp-repeat-off",
                gui: ".jp-gui",
                noSolution: ".jp-no-solution"
            },
            stateClass: {
                playing: "jp-state-playing",
                seeking: "jp-state-seeking",
                muted: "jp-state-muted",
                looped: "jp-state-looped",
                fullScreen: "jp-state-full-screen",
                noVolume: "jp-state-no-volume"
            },
            useStateClassSkin: !1,
            autoBlur: !0,
            smoothPlayBar: !1,
            fullScreen: !1,
            fullWindow: !1,
            autohide: {
                restored: !1,
                full: !0,
                fadeIn: 200,
                fadeOut: 600,
                hold: 1e3
            },
            loop: !1,
            repeat: function(e) {
                e.jPlayer.options.loop ? $(this).unbind(".jPlayerRepeat").bind($.jPlayer.event.ended + ".jPlayer.jPlayerRepeat", function() {
                    $(this).jPlayer("play")
                }) : $(this).unbind(".jPlayerRepeat")
            },
            nativeVideoControls: {},
            noFullWindow: {
                msie: /msie [0-6]\./,
                ipad: /ipad.*?os [0-4]\./,
                iphone: /iphone/,
                ipod: /ipod/,
                android_pad: /android [0-3]\.(?!.*?mobile)/,
                android_phone: /(?=.*android)(?!.*chrome)(?=.*mobile)/,
                blackberry: /blackberry/,
                windows_ce: /windows ce/,
                iemobile: /iemobile/,
                webos: /webos/
            },
            noVolume: {
                ipad: /ipad/,
                iphone: /iphone/,
                ipod: /ipod/,
                android_pad: /android(?!.*?mobile)/,
                android_phone: /android.*?mobile/,
                blackberry: /blackberry/,
                windows_ce: /windows ce/,
                iemobile: /iemobile/,
                webos: /webos/,
                playbook: /playbook/
            },
            timeFormat: {},
            keyEnabled: !1,
            audioFullScreen: !1,
            keyBindings: {
                play: {
                    key: 80,
                    fn: function(e) {
                        e.status.paused ? e.play() : e.pause()
                    }
                },
                fullScreen: {
                    key: 70,
                    fn: function(e) {
                        (e.status.video || e.options.audioFullScreen) && e._setOption("fullScreen", !e.options.fullScreen)
                    }
                },
                muted: {
                    key: 77,
                    fn: function(e) {
                        e._muted(!e.options.muted)
                    }
                },
                volumeUp: {
                    key: 190,
                    fn: function(e) {
                        e.volume(e.options.volume + .1)
                    }
                },
                volumeDown: {
                    key: 188,
                    fn: function(e) {
                        e.volume(e.options.volume - .1)
                    }
                },
                loop: {
                    key: 76,
                    fn: function(e) {
                        e._loop(!e.options.loop)
                    }
                }
            },
            verticalVolume: !1,
            verticalPlaybackRate: !1,
            globalVolume: !1,
            idPrefix: "jp",
            noConflict: "jQuery",
            emulateHtml: !1,
            consoleAlerts: !0,
            errorAlerts: !1,
            warningAlerts: !1
        },
        optionsAudio: {
            size: {
                width: "0px",
                height: "0px",
                cssClass: ""
            },
            sizeFull: {
                width: "0px",
                height: "0px",
                cssClass: ""
            }
        },
        optionsVideo: {
            size: {
                width: "480px",
                height: "270px",
                cssClass: "jp-video-270p"
            },
            sizeFull: {
                width: "100%",
                height: "100%",
                cssClass: "jp-video-full"
            }
        },
        instances: {},
        status: {
            src: "",
            media: {},
            paused: !0,
            format: {},
            formatType: "",
            waitForPlay: !0,
            waitForLoad: !0,
            srcSet: !1,
            video: !1,
            seekPercent: 0,
            currentPercentRelative: 0,
            currentPercentAbsolute: 0,
            currentTime: 0,
            duration: 0,
            remaining: 0,
            videoWidth: 0,
            videoHeight: 0,
            readyState: 0,
            networkState: 0,
            playbackRate: 1,
            ended: 0
        },
        internal: {
            ready: !1
        },
        solution: {
            html: !0,
            aurora: !0,
            flash: !0
        },
        format: {
            mp3: {
                codec: "audio/mpeg",
                flashCanPlay: !0,
                media: "audio"
            },
            m4a: {
                codec: 'audio/mp4; codecs="mp4a.40.2"',
                flashCanPlay: !0,
                media: "audio"
            },
            m3u8a: {
                codec: 'application/vnd.apple.mpegurl; codecs="mp4a.40.2"',
                flashCanPlay: !1,
                media: "audio"
            },
            m3ua: {
                codec: "audio/mpegurl",
                flashCanPlay: !1,
                media: "audio"
            },
            oga: {
                codec: 'audio/ogg; codecs="vorbis, opus"',
                flashCanPlay: !1,
                media: "audio"
            },
            flac: {
                codec: "audio/x-flac",
                flashCanPlay: !1,
                media: "audio"
            },
            wav: {
                codec: 'audio/wav; codecs="1"',
                flashCanPlay: !1,
                media: "audio"
            },
            webma: {
                codec: 'audio/webm; codecs="vorbis"',
                flashCanPlay: !1,
                media: "audio"
            },
            fla: {
                codec: "audio/x-flv",
                flashCanPlay: !0,
                media: "audio"
            },
            rtmpa: {
                codec: 'audio/rtmp; codecs="rtmp"',
                flashCanPlay: !0,
                media: "audio"
            },
            m4v: {
                codec: 'video/mp4; codecs="avc1.42E01E, mp4a.40.2"',
                flashCanPlay: !0,
                media: "video"
            },
            m3u8v: {
                codec: 'application/vnd.apple.mpegurl; codecs="avc1.42E01E, mp4a.40.2"',
                flashCanPlay: !1,
                media: "video"
            },
            m3uv: {
                codec: "audio/mpegurl",
                flashCanPlay: !1,
                media: "video"
            },
            ogv: {
                codec: 'video/ogg; codecs="theora, vorbis"',
                flashCanPlay: !1,
                media: "video"
            },
            webmv: {
                codec: 'video/webm; codecs="vorbis, vp8"',
                flashCanPlay: !1,
                media: "video"
            },
            flv: {
                codec: "video/x-flv",
                flashCanPlay: !0,
                media: "video"
            },
            rtmpv: {
                codec: 'video/rtmp; codecs="rtmp"',
                flashCanPlay: !0,
                media: "video"
            }
        },
        _init: function() {
            var t = this;
            if (this.element.empty(), this.status = $.extend({}, this.status), this.internal = $.extend({}, this.internal), this.options.timeFormat = $.extend({}, $.jPlayer.timeFormat, this.options.timeFormat), this.internal.cmdsIgnored = $.jPlayer.platform.ipad || $.jPlayer.platform.iphone || $.jPlayer.platform.ipod, this.internal.domNode = this.element.get(0), this.options.keyEnabled && !$.jPlayer.focus && ($.jPlayer.focus = this), this.androidFix = {
                    setMedia: !1,
                    play: !1,
                    pause: !1,
                    time: NaN
                }, $.jPlayer.platform.android && (this.options.preload = "auto" !== this.options.preload ? "metadata" : "auto"), this.formats = [], this.solutions = [], this.require = {}, this.htmlElement = {}, this.html = {}, this.html.audio = {}, this.html.video = {}, this.aurora = {}, this.aurora.formats = [], this.aurora.properties = [], this.flash = {}, this.css = {}, this.css.cs = {}, this.css.jq = {}, this.ancestorJq = [], this.options.volume = this._limitValue(this.options.volume, 0, 1), $.each(this.options.supplied.toLowerCase().split(","), function(e, n) {
                    var i = n.replace(/^\s+|\s+$/g, "");
                    if (t.format[i]) {
                        var r = !1;
                        $.each(t.formats, function(e, t) {
                            if (i === t) return r = !0, !1
                        }), r || t.formats.push(i)
                    }
                }), $.each(this.options.solution.toLowerCase().split(","), function(e, n) {
                    var i = n.replace(/^\s+|\s+$/g, "");
                    if (t.solution[i]) {
                        var r = !1;
                        $.each(t.solutions, function(e, t) {
                            if (i === t) return r = !0, !1
                        }), r || t.solutions.push(i)
                    }
                }), $.each(this.options.auroraFormats.toLowerCase().split(","), function(e, n) {
                    var i = n.replace(/^\s+|\s+$/g, "");
                    if (t.format[i]) {
                        var r = !1;
                        $.each(t.aurora.formats, function(e, t) {
                            if (i === t) return r = !0, !1
                        }), r || t.aurora.formats.push(i)
                    }
                }), this.internal.instance = "jp_" + this.count, this.instances[this.internal.instance] = this.element, this.element.attr("id") || this.element.attr("id", this.options.idPrefix + "_jplayer_" + this.count), this.internal.self = $.extend({}, {
                    id: this.element.attr("id"),
                    jq: this.element
                }), this.internal.audio = $.extend({}, {
                    id: this.options.idPrefix + "_audio_" + this.count,
                    jq: e
                }), this.internal.video = $.extend({}, {
                    id: this.options.idPrefix + "_video_" + this.count,
                    jq: e
                }), this.internal.flash = $.extend({}, {
                    id: this.options.idPrefix + "_flash_" + this.count,
                    jq: e,
                    swf: this.options.swfPath + (".swf" !== this.options.swfPath.toLowerCase().slice(-4) ? (this.options.swfPath && "/" !== this.options.swfPath.slice(-1) ? "/" : "") + "jquery.jplayer.swf" : "")
                }), this.internal.poster = $.extend({}, {
                    id: this.options.idPrefix + "_poster_" + this.count,
                    jq: e
                }), $.each($.jPlayer.event, function(n, i) {
                    t.options[n] !== e && (t.element.bind(i + ".jPlayer", t.options[n]), t.options[n] = e)
                }), this.require.audio = !1, this.require.video = !1, $.each(this.formats, function(e, n) {
                    t.require[t.format[n].media] = !0
                }), this.require.video ? this.options = $.extend(!0, {}, this.optionsVideo, this.options) : this.options = $.extend(!0, {}, this.optionsAudio, this.options), this._setSize(), this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls), this.status.noFullWindow = this._uaBlocklist(this.options.noFullWindow), this.status.noVolume = this._uaBlocklist(this.options.noVolume), $.jPlayer.nativeFeatures.fullscreen.api.fullscreenEnabled && this._fullscreenAddEventListeners(), this._restrictNativeVideoControls(), this.htmlElement.poster = document.createElement("img"), this.htmlElement.poster.id = this.internal.poster.id, this.htmlElement.poster.onload = function() {
                    t.status.video && !t.status.waitForPlay || t.internal.poster.jq.show()
                }, this.element.append(this.htmlElement.poster), this.internal.poster.jq = $("#" + this.internal.poster.id), this.internal.poster.jq.css({
                    width: this.status.width,
                    height: this.status.height
                }), this.internal.poster.jq.hide(), this.internal.poster.jq.bind("click.jPlayer", function() {
                    t._trigger($.jPlayer.event.click)
                }), this.html.audio.available = !1, this.require.audio && (this.htmlElement.audio = document.createElement("audio"),
                    this.htmlElement.audio.id = this.internal.audio.id, this.html.audio.available = !!this.htmlElement.audio.canPlayType && this._testCanPlayType(this.htmlElement.audio)), this.html.video.available = !1, this.require.video && (this.htmlElement.video = document.createElement("video"), this.htmlElement.video.id = this.internal.video.id, this.html.video.available = !!this.htmlElement.video.canPlayType && this._testCanPlayType(this.htmlElement.video)), this.flash.available = this._checkForFlash(10.1), this.html.canPlay = {}, this.aurora.canPlay = {}, this.flash.canPlay = {}, $.each(this.formats, function(e, n) {
                    t.html.canPlay[n] = t.html[t.format[n].media].available && "" !== t.htmlElement[t.format[n].media].canPlayType(t.format[n].codec), t.aurora.canPlay[n] = $.inArray(n, t.aurora.formats) > -1, t.flash.canPlay[n] = t.format[n].flashCanPlay && t.flash.available
                }), this.html.desired = !1, this.aurora.desired = !1, this.flash.desired = !1, $.each(this.solutions, function(e, n) {
                    if (0 === e) t[n].desired = !0;
                    else {
                        var i = !1,
                            r = !1;
                        $.each(t.formats, function(e, n) {
                            t[t.solutions[0]].canPlay[n] && ("video" === t.format[n].media ? r = !0 : i = !0)
                        }), t[n].desired = t.require.audio && !i || t.require.video && !r
                    }
                }), this.html.support = {}, this.aurora.support = {}, this.flash.support = {}, $.each(this.formats, function(e, n) {
                    t.html.support[n] = t.html.canPlay[n] && t.html.desired, t.aurora.support[n] = t.aurora.canPlay[n] && t.aurora.desired, t.flash.support[n] = t.flash.canPlay[n] && t.flash.desired
                }), this.html.used = !1, this.aurora.used = !1, this.flash.used = !1, $.each(this.solutions, function(e, n) {
                    $.each(t.formats, function(e, i) {
                        if (t[n].support[i]) return t[n].used = !0, !1
                    })
                }), this._resetActive(), this._resetGate(), this._cssSelectorAncestor(this.options.cssSelectorAncestor), this.html.used || this.aurora.used || this.flash.used ? this.css.jq.noSolution.length && this.css.jq.noSolution.hide() : (this._error({
                    type: $.jPlayer.error.NO_SOLUTION,
                    context: "{solution:'" + this.options.solution + "', supplied:'" + this.options.supplied + "'}",
                    message: $.jPlayer.errorMsg.NO_SOLUTION,
                    hint: $.jPlayer.errorHint.NO_SOLUTION
                }), this.css.jq.noSolution.length && this.css.jq.noSolution.show()), this.flash.used) {
                var n, i = "jQuery=" + encodeURI(this.options.noConflict) + "&id=" + encodeURI(this.internal.self.id) + "&vol=" + this.options.volume + "&muted=" + this.options.muted;
                if ($.jPlayer.browser.msie && (Number($.jPlayer.browser.version) < 9 || $.jPlayer.browser.documentMode < 9)) {
                    var r = '<object id="' + this.internal.flash.id + '" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="0" height="0" tabindex="-1"></object>',
                        o = ['<param name="movie" value="' + this.internal.flash.swf + '" />', '<param name="FlashVars" value="' + i + '" />', '<param name="allowScriptAccess" value="always" />', '<param name="bgcolor" value="' + this.options.backgroundColor + '" />', '<param name="wmode" value="' + this.options.wmode + '" />'];
                    n = document.createElement(r);
                    for (var a = 0; a < o.length; a++) n.appendChild(document.createElement(o[a]))
                } else {
                    var s = function(e, t, n) {
                        var i = document.createElement("param");
                        i.setAttribute("name", t), i.setAttribute("value", n), e.appendChild(i)
                    };
                    n = document.createElement("object"), n.setAttribute("id", this.internal.flash.id), n.setAttribute("name", this.internal.flash.id), n.setAttribute("data", this.internal.flash.swf), n.setAttribute("type", "application/x-shockwave-flash"), n.setAttribute("width", "1"), n.setAttribute("height", "1"), n.setAttribute("tabindex", "-1"), s(n, "flashvars", i), s(n, "allowscriptaccess", "always"), s(n, "bgcolor", this.options.backgroundColor), s(n, "wmode", this.options.wmode)
                }
                this.element.append(n), this.internal.flash.jq = $(n)
            }
            this.html.used && !this.flash.used ? this.status.playbackRateEnabled = this._testPlaybackRate("audio") : this.status.playbackRateEnabled = !1, this._updatePlaybackRate(), this.html.used && (this.html.audio.available && (this._addHtmlEventListeners(this.htmlElement.audio, this.html.audio), this.element.append(this.htmlElement.audio), this.internal.audio.jq = $("#" + this.internal.audio.id)), this.html.video.available && (this._addHtmlEventListeners(this.htmlElement.video, this.html.video), this.element.append(this.htmlElement.video), this.internal.video.jq = $("#" + this.internal.video.id), this.status.nativeVideoControls ? this.internal.video.jq.css({
                width: this.status.width,
                height: this.status.height
            }) : this.internal.video.jq.css({
                width: "0px",
                height: "0px"
            }), this.internal.video.jq.bind("click.jPlayer", function() {
                t._trigger($.jPlayer.event.click)
            }))), this.aurora.used, this.options.emulateHtml && this._emulateHtmlBridge(), !this.html.used && !this.aurora.used || this.flash.used || setTimeout(function() {
                t.internal.ready = !0, t.version.flash = "n/a", t._trigger($.jPlayer.event.repeat), t._trigger($.jPlayer.event.ready)
            }, 100), this._updateNativeVideoControls(), this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide(), $.jPlayer.prototype.count++
        },
        destroy: function() {
            this.clearMedia(), this._removeUiClass(), this.css.jq.currentTime.length && this.css.jq.currentTime.text(""), this.css.jq.duration.length && this.css.jq.duration.text(""), $.each(this.css.jq, function(e, t) {
                t.length && t.unbind(".jPlayer")
            }), this.internal.poster.jq.unbind(".jPlayer"), this.internal.video.jq && this.internal.video.jq.unbind(".jPlayer"), this._fullscreenRemoveEventListeners(), this === $.jPlayer.focus && ($.jPlayer.focus = null), this.options.emulateHtml && this._destroyHtmlBridge(), this.element.removeData("jPlayer"), this.element.unbind(".jPlayer"), this.element.empty(), delete this.instances[this.internal.instance]
        },
        destroyRemoved: function() {
            var e = this;
            $.each(this.instances, function(t, n) {
                e.element !== n && (n.data("jPlayer") || (n.jPlayer("destroy"), delete e.instances[t]))
            })
        },
        enable: function() {},
        disable: function() {},
        _testCanPlayType: function(e) {
            try {
                return e.canPlayType(this.format.mp3.codec), !0
            } catch (e) {
                return !1
            }
        },
        _testPlaybackRate: function(e) {
            var t, n = .5;
            e = "string" == typeof e ? e : "audio", t = document.createElement(e);
            try {
                return "playbackRate" in t && (t.playbackRate = n, t.playbackRate === n)
            } catch (e) {
                return !1
            }
        },
        _uaBlocklist: function(e) {
            var t = navigator.userAgent.toLowerCase(),
                n = !1;
            return $.each(e, function(e, i) {
                if (i && i.test(t)) return n = !0, !1
            }), n
        },
        _restrictNativeVideoControls: function() {
            this.require.audio && this.status.nativeVideoControls && (this.status.nativeVideoControls = !1, this.status.noFullWindow = !0)
        },
        _updateNativeVideoControls: function() {
            this.html.video.available && this.html.used && (this.htmlElement.video.controls = this.status.nativeVideoControls, this._updateAutohide(), this.status.nativeVideoControls && this.require.video ? (this.internal.poster.jq.hide(), this.internal.video.jq.css({
                width: this.status.width,
                height: this.status.height
            })) : this.status.waitForPlay && this.status.video && (this.internal.poster.jq.show(), this.internal.video.jq.css({
                width: "0px",
                height: "0px"
            })))
        },
        _addHtmlEventListeners: function(e, t) {
            var n = this;
            e.preload = this.options.preload, e.muted = this.options.muted, e.volume = this.options.volume, this.status.playbackRateEnabled && (e.defaultPlaybackRate = this.options.defaultPlaybackRate, e.playbackRate = this.options.playbackRate), e.addEventListener("progress", function() {
                t.gate && (n.internal.cmdsIgnored && this.readyState > 0 && (n.internal.cmdsIgnored = !1), n._getHtmlStatus(e), n._updateInterface(), n._trigger($.jPlayer.event.progress))
            }, !1), e.addEventListener("loadeddata", function() {
                t.gate && (n.androidFix.setMedia = !1, n.androidFix.play && (n.androidFix.play = !1, n.play(n.androidFix.time)), n.androidFix.pause && (n.androidFix.pause = !1, n.pause(n.androidFix.time)), n._trigger($.jPlayer.event.loadeddata))
            }, !1), e.addEventListener("timeupdate", function() {
                t.gate && (n._getHtmlStatus(e), n._updateInterface(), n._trigger($.jPlayer.event.timeupdate))
            }, !1), e.addEventListener("durationchange", function() {
                t.gate && (n._getHtmlStatus(e), n._updateInterface(), n._trigger($.jPlayer.event.durationchange))
            }, !1), e.addEventListener("play", function() {
                t.gate && (n._updateButtons(!0), n._html_checkWaitForPlay(), n._trigger($.jPlayer.event.play))
            }, !1), e.addEventListener("playing", function() {
                t.gate && (n._updateButtons(!0), n._seeked(), n._trigger($.jPlayer.event.playing))
            }, !1), e.addEventListener("pause", function() {
                t.gate && (n._updateButtons(!1), n._trigger($.jPlayer.event.pause))
            }, !1), e.addEventListener("waiting", function() {
                t.gate && (n._seeking(), n._trigger($.jPlayer.event.waiting))
            }, !1), e.addEventListener("seeking", function() {
                t.gate && (n._seeking(), n._trigger($.jPlayer.event.seeking))
            }, !1), e.addEventListener("seeked", function() {
                t.gate && (n._seeked(), n._trigger($.jPlayer.event.seeked))
            }, !1), e.addEventListener("volumechange", function() {
                t.gate && (n.options.volume = e.volume, n.options.muted = e.muted, n._updateMute(), n._updateVolume(), n._trigger($.jPlayer.event.volumechange))
            }, !1), e.addEventListener("ratechange", function() {
                t.gate && (n.options.defaultPlaybackRate = e.defaultPlaybackRate, n.options.playbackRate = e.playbackRate, n._updatePlaybackRate(), n._trigger($.jPlayer.event.ratechange))
            }, !1), e.addEventListener("suspend", function() {
                t.gate && (n._seeked(), n._trigger($.jPlayer.event.suspend))
            }, !1), e.addEventListener("ended", function() {
                t.gate && ($.jPlayer.browser.webkit || (n.htmlElement.media.currentTime = 0), n.htmlElement.media.pause(), n._updateButtons(!1), n._getHtmlStatus(e, !0), n._updateInterface(), n._trigger($.jPlayer.event.ended))
            }, !1), e.addEventListener("error", function() {
                t.gate && (n._updateButtons(!1), n._seeked(), n.status.srcSet && (clearTimeout(n.internal.htmlDlyCmdId), n.status.waitForLoad = !0, n.status.waitForPlay = !0, n.status.video && !n.status.nativeVideoControls && n.internal.video.jq.css({
                    width: "0px",
                    height: "0px"
                }), n._validString(n.status.media.poster) && !n.status.nativeVideoControls && n.internal.poster.jq.show(), n.css.jq.videoPlay.length && n.css.jq.videoPlay.show(), n._error({
                    type: $.jPlayer.error.URL,
                    context: n.status.src,
                    message: $.jPlayer.errorMsg.URL,
                    hint: $.jPlayer.errorHint.URL
                })))
            }, !1), $.each($.jPlayer.htmlEvent, function(i, r) {
                e.addEventListener(this, function() {
                    t.gate && n._trigger($.jPlayer.event[r])
                }, !1)
            })
        },
        _addAuroraEventListeners: function(e, t) {
            var n = this;
            e.volume = 100 * this.options.volume, e.on("progress", function() {
                t.gate && (n.internal.cmdsIgnored && this.readyState > 0 && (n.internal.cmdsIgnored = !1), n._getAuroraStatus(e), n._updateInterface(), n._trigger($.jPlayer.event.progress), e.duration > 0 && n._trigger($.jPlayer.event.timeupdate))
            }, !1), e.on("ready", function() {
                t.gate && n._trigger($.jPlayer.event.loadeddata)
            }, !1), e.on("duration", function() {
                t.gate && (n._getAuroraStatus(e), n._updateInterface(), n._trigger($.jPlayer.event.durationchange))
            }, !1), e.on("end", function() {
                t.gate && (n._updateButtons(!1), n._getAuroraStatus(e, !0), n._updateInterface(), n._trigger($.jPlayer.event.ended))
            }, !1), e.on("error", function() {
                t.gate && (n._updateButtons(!1), n._seeked(), n.status.srcSet && (n.status.waitForLoad = !0, n.status.waitForPlay = !0, n.status.video && !n.status.nativeVideoControls && n.internal.video.jq.css({
                    width: "0px",
                    height: "0px"
                }), n._validString(n.status.media.poster) && !n.status.nativeVideoControls && n.internal.poster.jq.show(), n.css.jq.videoPlay.length && n.css.jq.videoPlay.show(), n._error({
                    type: $.jPlayer.error.URL,
                    context: n.status.src,
                    message: $.jPlayer.errorMsg.URL,
                    hint: $.jPlayer.errorHint.URL
                })))
            }, !1)
        },
        _getHtmlStatus: function(e, t) {
            var n = 0,
                i = 0,
                r = 0,
                o = 0;
            isFinite(e.duration) && (this.status.duration = e.duration), n = e.currentTime, i = this.status.duration > 0 ? 100 * n / this.status.duration : 0, "object" == typeof e.seekable && e.seekable.length > 0 ? (r = this.status.duration > 0 ? 100 * e.seekable.end(e.seekable.length - 1) / this.status.duration : 100, o = this.status.duration > 0 ? 100 * e.currentTime / e.seekable.end(e.seekable.length - 1) : 0) : (r = 100, o = i), t && (n = 0, o = 0, i = 0), this.status.seekPercent = r, this.status.currentPercentRelative = o, this.status.currentPercentAbsolute = i, this.status.currentTime = n, this.status.remaining = this.status.duration - this.status.currentTime, this.status.videoWidth = e.videoWidth, this.status.videoHeight = e.videoHeight, this.status.readyState = e.readyState, this.status.networkState = e.networkState, this.status.playbackRate = e.playbackRate, this.status.ended = e.ended
        },
        _getAuroraStatus: function(e, t) {
            var n = 0,
                i = 0,
                r = 0,
                o = 0;
            this.status.duration = e.duration / 1e3, n = e.currentTime / 1e3, i = this.status.duration > 0 ? 100 * n / this.status.duration : 0, e.buffered > 0 ? (r = this.status.duration > 0 ? e.buffered * this.status.duration / this.status.duration : 100, o = this.status.duration > 0 ? n / (e.buffered * this.status.duration) : 0) : (r = 100, o = i), t && (n = 0, o = 0, i = 0), this.status.seekPercent = r, this.status.currentPercentRelative = o, this.status.currentPercentAbsolute = i, this.status.currentTime = n, this.status.remaining = this.status.duration - this.status.currentTime, this.status.readyState = 4, this.status.networkState = 0, this.status.playbackRate = 1, this.status.ended = !1
        },
        _resetStatus: function() {
            this.status = $.extend({}, this.status, $.jPlayer.prototype.status)
        },
        _trigger: function(e, t, n) {
            var i = $.Event(e);
            i.jPlayer = {}, i.jPlayer.version = $.extend({}, this.version), i.jPlayer.options = $.extend(!0, {}, this.options), i.jPlayer.status = $.extend(!0, {}, this.status), i.jPlayer.html = $.extend(!0, {}, this.html), i.jPlayer.aurora = $.extend(!0, {}, this.aurora), i.jPlayer.flash = $.extend(!0, {}, this.flash), t && (i.jPlayer.error = $.extend({}, t)), n && (i.jPlayer.warning = $.extend({}, n)), this.element.trigger(i)
        },
        jPlayerFlashEvent: function(e, t) {
            if (e === $.jPlayer.event.ready)
                if (this.internal.ready) {
                    if (this.flash.gate) {
                        if (this.status.srcSet) {
                            var n = this.status.currentTime,
                                i = this.status.paused;
                            this.setMedia(this.status.media), this.volumeWorker(this.options.volume), n > 0 && (i ? this.pause(n) : this.play(n))
                        }
                        this._trigger($.jPlayer.event.flashreset)
                    }
                } else this.internal.ready = !0, this.internal.flash.jq.css({
                    width: "0px",
                    height: "0px"
                }), this.version.flash = t.version, this.version.needFlash !== this.version.flash && this._error({
                    type: $.jPlayer.error.VERSION,
                    context: this.version.flash,
                    message: $.jPlayer.errorMsg.VERSION + this.version.flash,
                    hint: $.jPlayer.errorHint.VERSION
                }), this._trigger($.jPlayer.event.repeat), this._trigger(e);
            if (this.flash.gate) switch (e) {
                case $.jPlayer.event.progress:
                    this._getFlashStatus(t), this._updateInterface(), this._trigger(e);
                    break;
                case $.jPlayer.event.timeupdate:
                    this._getFlashStatus(t), this._updateInterface(), this._trigger(e);
                    break;
                case $.jPlayer.event.play:
                    this._seeked(), this._updateButtons(!0), this._trigger(e);
                    break;
                case $.jPlayer.event.pause:
                    this._updateButtons(!1), this._trigger(e);
                    break;
                case $.jPlayer.event.ended:
                    this._updateButtons(!1), this._trigger(e);
                    break;
                case $.jPlayer.event.click:
                    this._trigger(e);
                    break;
                case $.jPlayer.event.error:
                    this.status.waitForLoad = !0, this.status.waitForPlay = !0, this.status.video && this.internal.flash.jq.css({
                        width: "0px",
                        height: "0px"
                    }), this._validString(this.status.media.poster) && this.internal.poster.jq.show(), this.css.jq.videoPlay.length && this.status.video && this.css.jq.videoPlay.show(), this.status.video ? this._flash_setVideo(this.status.media) : this._flash_setAudio(this.status.media), this._updateButtons(!1), this._error({
                        type: $.jPlayer.error.URL,
                        context: t.src,
                        message: $.jPlayer.errorMsg.URL,
                        hint: $.jPlayer.errorHint.URL
                    });
                    break;
                case $.jPlayer.event.seeking:
                    this._seeking(), this._trigger(e);
                    break;
                case $.jPlayer.event.seeked:
                    this._seeked(), this._trigger(e);
                    break;
                case $.jPlayer.event.ready:
                    break;
                default:
                    this._trigger(e)
            }
            return !1
        },
        _getFlashStatus: function(e) {
            this.status.seekPercent = e.seekPercent, this.status.currentPercentRelative = e.currentPercentRelative, this.status.currentPercentAbsolute = e.currentPercentAbsolute, this.status.currentTime = e.currentTime, this.status.duration = e.duration, this.status.remaining = e.duration - e.currentTime, this.status.videoWidth = e.videoWidth, this.status.videoHeight = e.videoHeight, this.status.readyState = 4, this.status.networkState = 0, this.status.playbackRate = 1, this.status.ended = !1
        },
        _updateButtons: function(t) {
            t === e ? t = !this.status.paused : this.status.paused = !t, t ? this.addStateClass("playing") : this.removeStateClass("playing"), !this.status.noFullWindow && this.options.fullWindow ? this.addStateClass("fullScreen") : this.removeStateClass("fullScreen"), this.options.loop ? this.addStateClass("looped") : this.removeStateClass("looped"), this.css.jq.play.length && this.css.jq.pause.length && (t ? (this.css.jq.play.hide(), this.css.jq.pause.show()) : (this.css.jq.play.show(), this.css.jq.pause.hide())), this.css.jq.restoreScreen.length && this.css.jq.fullScreen.length && (this.status.noFullWindow ? (this.css.jq.fullScreen.hide(), this.css.jq.restoreScreen.hide()) : this.options.fullWindow ? (this.css.jq.fullScreen.hide(), this.css.jq.restoreScreen.show()) : (this.css.jq.fullScreen.show(), this.css.jq.restoreScreen.hide())), this.css.jq.repeat.length && this.css.jq.repeatOff.length && (this.options.loop ? (this.css.jq.repeat.hide(), this.css.jq.repeatOff.show()) : (this.css.jq.repeat.show(), this.css.jq.repeatOff.hide()))
        },
        _updateInterface: function() {
            this.css.jq.seekBar.length && this.css.jq.seekBar.width(this.status.seekPercent + "%"), this.css.jq.playBar.length && (this.options.smoothPlayBar ? this.css.jq.playBar.stop().animate({
                width: this.status.currentPercentAbsolute + "%"
            }, 250, "linear") : this.css.jq.playBar.width(this.status.currentPercentRelative + "%"));
            var e = "";
            this.css.jq.currentTime.length && (e = this._convertTime(this.status.currentTime), e !== this.css.jq.currentTime.text() && this.css.jq.currentTime.text(this._convertTime(this.status.currentTime)));
            var t = "",
                n = this.status.duration,
                i = this.status.remaining;
            this.css.jq.duration.length && ("string" == typeof this.status.media.duration ? t = this.status.media.duration : ("number" == typeof this.status.media.duration && (n = this.status.media.duration, i = n - this.status.currentTime), t = this.options.remainingDuration ? (i > 0 ? "-" : "") + this._convertTime(i) : this._convertTime(n)), t !== this.css.jq.duration.text() && this.css.jq.duration.text(t))
        },
        _convertTime: t.prototype.time,
        _seeking: function() {
            this.css.jq.seekBar.length && this.css.jq.seekBar.addClass("jp-seeking-bg"), this.addStateClass("seeking")
        },
        _seeked: function() {
            this.css.jq.seekBar.length && this.css.jq.seekBar.removeClass("jp-seeking-bg"), this.removeStateClass("seeking")
        },
        _resetGate: function() {
            this.html.audio.gate = !1, this.html.video.gate = !1, this.aurora.gate = !1, this.flash.gate = !1
        },
        _resetActive: function() {
            this.html.active = !1, this.aurora.active = !1, this.flash.active = !1
        },
        _escapeHtml: function(e) {
            return e.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;").split('"').join("&quot;")
        },
        _qualifyURL: function(e) {
            var t = document.createElement("div");
            return t.innerHTML = '<a href="' + this._escapeHtml(e) + '">x</a>', t.firstChild.href
        },
        _absoluteMediaUrls: function(e) {
            var t = this;
            return $.each(e, function(n, i) {
                i && t.format[n] && "data:" !== i.substr(0, 5) && (e[n] = t._qualifyURL(i))
            }), e
        },
        addStateClass: function(e) {
            this.ancestorJq.length && this.ancestorJq.addClass(this.options.stateClass[e])
        },
        removeStateClass: function(e) {
            this.ancestorJq.length && this.ancestorJq.removeClass(this.options.stateClass[e])
        },
        setMedia: function(e) {
            var t = this,
                n = !1,
                i = this.status.media.poster !== e.poster;
            this._resetMedia(), this._resetGate(), this._resetActive(), this.androidFix.setMedia = !1, this.androidFix.play = !1, this.androidFix.pause = !1, e = this._absoluteMediaUrls(e), $.each(this.formats, function(i, r) {
                var o = "video" === t.format[r].media;
                if ($.each(t.solutions, function(i, a) {
                        if (t[a].support[r] && t._validString(e[r])) {
                            var s = "html" === a,
                                l = "aurora" === a;
                            return o ? (s ? (t.html.video.gate = !0, t._html_setVideo(e), t.html.active = !0) : (t.flash.gate = !0, t._flash_setVideo(e), t.flash.active = !0), t.css.jq.videoPlay.length && t.css.jq.videoPlay.show(), t.status.video = !0) : (s ? (t.html.audio.gate = !0, t._html_setAudio(e), t.html.active = !0, $.jPlayer.platform.android && (t.androidFix.setMedia = !0)) : l ? (t.aurora.gate = !0, t._aurora_setAudio(e), t.aurora.active = !0) : (t.flash.gate = !0, t._flash_setAudio(e), t.flash.active = !0), t.css.jq.videoPlay.length && t.css.jq.videoPlay.hide(), t.status.video = !1), n = !0, !1
                        }
                    }), n) return !1
            }), n ? (this.status.nativeVideoControls && this.html.video.gate || this._validString(e.poster) && (i ? this.htmlElement.poster.src = e.poster : this.internal.poster.jq.show()), "string" == typeof e.title && (this.css.jq.title.length && this.css.jq.title.html(e.title), this.htmlElement.audio && this.htmlElement.audio.setAttribute("title", e.title), this.htmlElement.video && this.htmlElement.video.setAttribute("title", e.title)), this.status.srcSet = !0, this.status.media = $.extend({}, e), this._updateButtons(!1), this._updateInterface(), this._trigger($.jPlayer.event.setmedia)) : this._error({
                type: $.jPlayer.error.NO_SUPPORT,
                context: "{supplied:'" + this.options.supplied + "'}",
                message: $.jPlayer.errorMsg.NO_SUPPORT,
                hint: $.jPlayer.errorHint.NO_SUPPORT
            })
        },
        _resetMedia: function() {
            this._resetStatus(), this._updateButtons(!1), this._updateInterface(), this._seeked(), this.internal.poster.jq.hide(), clearTimeout(this.internal.htmlDlyCmdId), this.html.active ? this._html_resetMedia() : this.aurora.active ? this._aurora_resetMedia() : this.flash.active && this._flash_resetMedia()
        },
        clearMedia: function() {
            this._resetMedia(), this.html.active ? this._html_clearMedia() : this.aurora.active ? this._aurora_clearMedia() : this.flash.active && this._flash_clearMedia(), this._resetGate(), this._resetActive()
        },
        load: function() {
            this.status.srcSet ? this.html.active ? this._html_load() : this.aurora.active ? this._aurora_load() : this.flash.active && this._flash_load() : this._urlNotSetError("load")
        },
        focus: function() {
            this.options.keyEnabled && ($.jPlayer.focus = this)
        },
        play: function(e) {
            var t = "object" == typeof e;
            t && this.options.useStateClassSkin && !this.status.paused ? this.pause(e) : (e = "number" == typeof e ? e : NaN, this.status.srcSet ? (this.focus(), this.html.active ? this._html_play(e) : this.aurora.active ? this._aurora_play(e) : this.flash.active && this._flash_play(e)) : this._urlNotSetError("play"))
        },
        videoPlay: function() {
            this.play()
        },
        pause: function(e) {
            e = "number" == typeof e ? e : NaN, this.status.srcSet ? this.html.active ? this._html_pause(e) : this.aurora.active ? this._aurora_pause(e) : this.flash.active && this._flash_pause(e) : this._urlNotSetError("pause")
        },
        tellOthers: function(e, t) {
            var n = this,
                i = "function" == typeof t,
                r = Array.prototype.slice.call(arguments);
            "string" == typeof e && (i && r.splice(1, 1), $.jPlayer.prototype.destroyRemoved(), $.each(this.instances, function() {
                n.element !== this && (i && !t.call(this.data("jPlayer"), n) || this.jPlayer.apply(this, r))
            }))
        },
        pauseOthers: function(e) {
            this.tellOthers("pause", function() {
                return this.status.srcSet
            }, e)
        },
        stop: function() {
            this.status.srcSet ? this.html.active ? this._html_pause(0) : this.aurora.active ? this._aurora_pause(0) : this.flash.active && this._flash_pause(0) : this._urlNotSetError("stop")
        },
        playHead: function(e) {
            e = this._limitValue(e, 0, 100), this.status.srcSet ? this.html.active ? this._html_playHead(e) : this.aurora.active ? this._aurora_playHead(e) : this.flash.active && this._flash_playHead(e) : this._urlNotSetError("playHead")
        },
        _muted: function(e) {
            this.mutedWorker(e), this.options.globalVolume && this.tellOthers("mutedWorker", function() {
                return this.options.globalVolume
            }, e)
        },
        mutedWorker: function(e) {
            this.options.muted = e, this.html.used && this._html_setProperty("muted", e), this.aurora.used && this._aurora_mute(e), this.flash.used && this._flash_mute(e), this.html.video.gate || this.html.audio.gate || (this._updateMute(e), this._updateVolume(this.options.volume), this._trigger($.jPlayer.event.volumechange))
        },
        mute: function(t) {
            var n = "object" == typeof t;
            n && this.options.useStateClassSkin && this.options.muted ? this._muted(!1) : (t = t === e || !!t, this._muted(t))
        },
        unmute: function(t) {
            t = t === e || !!t, this._muted(!t)
        },
        _updateMute: function(t) {
            t === e && (t = this.options.muted), t ? this.addStateClass("muted") : this.removeStateClass("muted"), this.css.jq.mute.length && this.css.jq.unmute.length && (this.status.noVolume ? (this.css.jq.mute.hide(), this.css.jq.unmute.hide()) : t ? (this.css.jq.mute.hide(), this.css.jq.unmute.show()) : (this.css.jq.mute.show(), this.css.jq.unmute.hide()))
        },
        volume: function(e) {
            this.volumeWorker(e), this.options.globalVolume && this.tellOthers("volumeWorker", function() {
                return this.options.globalVolume
            }, e)
        },
        volumeWorker: function(e) {
            e = this._limitValue(e, 0, 1), this.options.volume = e, this.html.used && this._html_setProperty("volume", e), this.aurora.used && this._aurora_volume(e), this.flash.used && this._flash_volume(e), this.html.video.gate || this.html.audio.gate || (this._updateVolume(e), this._trigger($.jPlayer.event.volumechange))
        },
        volumeBar: function(e) {
            if (this.css.jq.volumeBar.length) {
                var t = $(e.currentTarget),
                    n = t.offset(),
                    i = e.pageX - n.left,
                    r = t.width(),
                    o = t.height() - e.pageY + n.top,
                    a = t.height();
                this.options.verticalVolume ? this.volume(o / a) : this.volume(i / r)
            }
            this.options.muted && this._muted(!1)
        },
        _updateVolume: function(t) {
            t === e && (t = this.options.volume), t = this.options.muted ? 0 : t, this.status.noVolume ? (this.addStateClass("noVolume"), this.css.jq.volumeBar.length && this.css.jq.volumeBar.hide(), this.css.jq.volumeBarValue.length && this.css.jq.volumeBarValue.hide(), this.css.jq.volumeMax.length && this.css.jq.volumeMax.hide()) : (this.removeStateClass("noVolume"), this.css.jq.volumeBar.length && this.css.jq.volumeBar.show(), this.css.jq.volumeBarValue.length && (this.css.jq.volumeBarValue.show(), this.css.jq.volumeBarValue[this.options.verticalVolume ? "height" : "width"](100 * t + "%")), this.css.jq.volumeMax.length && this.css.jq.volumeMax.show())
        },
        volumeMax: function() {
            this.volume(1), this.options.muted && this._muted(!1)
        },
        _cssSelectorAncestor: function(e) {
            var t = this;
            this.options.cssSelectorAncestor = e, this._removeUiClass(), this.ancestorJq = e ? $(e) : [], e && 1 !== this.ancestorJq.length && this._warning({
                type: $.jPlayer.warning.CSS_SELECTOR_COUNT,
                context: e,
                message: $.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.ancestorJq.length + " found for cssSelectorAncestor.",
                hint: $.jPlayer.warningHint.CSS_SELECTOR_COUNT
            }), this._addUiClass(), $.each(this.options.cssSelector, function(e, n) {
                t._cssSelector(e, n)
            }), this._updateInterface(), this._updateButtons(), this._updateAutohide(), this._updateVolume(), this._updateMute()
        },
        _cssSelector: function(e, t) {
            var n = this;
            if ("string" == typeof t)
                if ($.jPlayer.prototype.options.cssSelector[e]) {
                    if (this.css.jq[e] && this.css.jq[e].length && this.css.jq[e].unbind(".jPlayer"), this.options.cssSelector[e] = t, this.css.cs[e] = this.options.cssSelectorAncestor + " " + t, t ? this.css.jq[e] = $(this.css.cs[e]) : this.css.jq[e] = [], this.css.jq[e].length && this[e]) {
                        var i = function(t) {
                            t.preventDefault(), n[e](t), n.options.autoBlur ? $(this).blur() : $(this).focus()
                        };
                        this.css.jq[e].bind("click.jPlayer", i)
                    }
                    t && 1 !== this.css.jq[e].length && this._warning({
                        type: $.jPlayer.warning.CSS_SELECTOR_COUNT,
                        context: this.css.cs[e],
                        message: $.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.css.jq[e].length + " found for " + e + " method.",
                        hint: $.jPlayer.warningHint.CSS_SELECTOR_COUNT
                    })
                } else this._warning({
                    type: $.jPlayer.warning.CSS_SELECTOR_METHOD,
                    context: e,
                    message: $.jPlayer.warningMsg.CSS_SELECTOR_METHOD,
                    hint: $.jPlayer.warningHint.CSS_SELECTOR_METHOD
                });
            else this._warning({
                type: $.jPlayer.warning.CSS_SELECTOR_STRING,
                context: t,
                message: $.jPlayer.warningMsg.CSS_SELECTOR_STRING,
                hint: $.jPlayer.warningHint.CSS_SELECTOR_STRING
            })
        },
        duration: function(e) {
            this.options.toggleDuration && (this.options.captureDuration && e.stopPropagation(), this._setOption("remainingDuration", !this.options.remainingDuration))
        },
        seekBar: function(e) {
            if (this.css.jq.seekBar.length) {
                var t = $(e.currentTarget),
                    n = t.offset(),
                    i = e.pageX - n.left,
                    r = t.width(),
                    o = 100 * i / r;
                this.playHead(o)
            }
        },
        playbackRate: function(e) {
            this._setOption("playbackRate", e)
        },
        playbackRateBar: function(e) {
            if (this.css.jq.playbackRateBar.length) {
                var t = $(e.currentTarget),
                    n = t.offset(),
                    i = e.pageX - n.left,
                    r = t.width(),
                    o = t.height() - e.pageY + n.top,
                    a = t.height(),
                    s, l;
                s = this.options.verticalPlaybackRate ? o / a : i / r, l = s * (this.options.maxPlaybackRate - this.options.minPlaybackRate) + this.options.minPlaybackRate, this.playbackRate(l)
            }
        },
        _updatePlaybackRate: function() {
            var e = this.options.playbackRate,
                t = (e - this.options.minPlaybackRate) / (this.options.maxPlaybackRate - this.options.minPlaybackRate);
            this.status.playbackRateEnabled ? (this.css.jq.playbackRateBar.length && this.css.jq.playbackRateBar.show(), this.css.jq.playbackRateBarValue.length && (this.css.jq.playbackRateBarValue.show(), this.css.jq.playbackRateBarValue[this.options.verticalPlaybackRate ? "height" : "width"](100 * t + "%"))) : (this.css.jq.playbackRateBar.length && this.css.jq.playbackRateBar.hide(), this.css.jq.playbackRateBarValue.length && this.css.jq.playbackRateBarValue.hide())
        },
        repeat: function(e) {
            var t = "object" == typeof e;
            t && this.options.useStateClassSkin && this.options.loop ? this._loop(!1) : this._loop(!0)
        },
        repeatOff: function() {
            this._loop(!1)
        },
        _loop: function(e) {
            this.options.loop !== e && (this.options.loop = e, this._updateButtons(), this._trigger($.jPlayer.event.repeat))
        },
        option: function(t, n) {
            var i = t;
            if (0 === arguments.length) return $.extend(!0, {}, this.options);
            if ("string" == typeof t) {
                var r = t.split(".");
                if (n === e) {
                    for (var o = $.extend(!0, {}, this.options), a = 0; a < r.length; a++) {
                        if (o[r[a]] === e) return this._warning({
                            type: $.jPlayer.warning.OPTION_KEY,
                            context: t,
                            message: $.jPlayer.warningMsg.OPTION_KEY,
                            hint: $.jPlayer.warningHint.OPTION_KEY
                        }), e;
                        o = o[r[a]]
                    }
                    return o
                }
                i = {};
                for (var s = i, l = 0; l < r.length; l++) l < r.length - 1 ? (s[r[l]] = {}, s = s[r[l]]) : s[r[l]] = n
            }
            return this._setOptions(i), this
        },
        _setOptions: function(e) {
            var t = this;
            return $.each(e, function(e, n) {
                t._setOption(e, n)
            }), this
        },
        _setOption: function(e, t) {
            var n = this;
            switch (e) {
                case "volume":
                    this.volume(t);
                    break;
                case "muted":
                    this._muted(t);
                    break;
                case "globalVolume":
                    this.options[e] = t;
                    break;
                case "cssSelectorAncestor":
                    this._cssSelectorAncestor(t);
                    break;
                case "cssSelector":
                    $.each(t, function(e, t) {
                        n._cssSelector(e, t)
                    });
                    break;
                case "playbackRate":
                    this.options[e] = t = this._limitValue(t, this.options.minPlaybackRate, this.options.maxPlaybackRate), this.html.used && this._html_setProperty("playbackRate", t), this._updatePlaybackRate();
                    break;
                case "defaultPlaybackRate":
                    this.options[e] = t = this._limitValue(t, this.options.minPlaybackRate, this.options.maxPlaybackRate), this.html.used && this._html_setProperty("defaultPlaybackRate", t), this._updatePlaybackRate();
                    break;
                case "minPlaybackRate":
                    this.options[e] = t = this._limitValue(t, .1, this.options.maxPlaybackRate - .1), this._updatePlaybackRate();
                    break;
                case "maxPlaybackRate":
                    this.options[e] = t = this._limitValue(t, this.options.minPlaybackRate + .1, 16), this._updatePlaybackRate();
                    break;
                case "fullScreen":
                    if (this.options[e] !== t) {
                        var i = $.jPlayer.nativeFeatures.fullscreen.used.webkitVideo;
                        (!i || i && !this.status.waitForPlay) && (i || (this.options[e] = t), t ? this._requestFullscreen() : this._exitFullscreen(), i || this._setOption("fullWindow", t))
                    }
                    break;
                case "fullWindow":
                    this.options[e] !== t && (this._removeUiClass(), this.options[e] = t, this._refreshSize());
                    break;
                case "size":
                    this.options.fullWindow || this.options[e].cssClass === t.cssClass || this._removeUiClass(), this.options[e] = $.extend({}, this.options[e], t), this._refreshSize();
                    break;
                case "sizeFull":
                    this.options.fullWindow && this.options[e].cssClass !== t.cssClass && this._removeUiClass(), this.options[e] = $.extend({}, this.options[e], t), this._refreshSize();
                    break;
                case "autohide":
                    this.options[e] = $.extend({}, this.options[e], t), this._updateAutohide();
                    break;
                case "loop":
                    this._loop(t);
                    break;
                case "remainingDuration":
                    this.options[e] = t, this._updateInterface();
                    break;
                case "toggleDuration":
                    this.options[e] = t;
                    break;
                case "nativeVideoControls":
                    this.options[e] = $.extend({}, this.options[e], t), this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls), this._restrictNativeVideoControls(), this._updateNativeVideoControls();
                    break;
                case "noFullWindow":
                    this.options[e] = $.extend({}, this.options[e], t), this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls), this.status.noFullWindow = this._uaBlocklist(this.options.noFullWindow), this._restrictNativeVideoControls(), this._updateButtons();
                    break;
                case "noVolume":
                    this.options[e] = $.extend({}, this.options[e], t), this.status.noVolume = this._uaBlocklist(this.options.noVolume), this._updateVolume(), this._updateMute();
                    break;
                case "emulateHtml":
                    this.options[e] !== t && (this.options[e] = t, t ? this._emulateHtmlBridge() : this._destroyHtmlBridge());
                    break;
                case "timeFormat":
                    this.options[e] = $.extend({}, this.options[e], t);
                    break;
                case "keyEnabled":
                    this.options[e] = t, t || this !== $.jPlayer.focus || ($.jPlayer.focus = null);
                    break;
                case "keyBindings":
                    this.options[e] = $.extend(!0, {}, this.options[e], t);
                    break;
                case "audioFullScreen":
                    this.options[e] = t;
                    break;
                case "autoBlur":
                    this.options[e] = t
            }
            return this
        },
        _refreshSize: function() {
            this._setSize(), this._addUiClass(), this._updateSize(), this._updateButtons(), this._updateAutohide(), this._trigger($.jPlayer.event.resize)
        },
        _setSize: function() {
            this.options.fullWindow ? (this.status.width = this.options.sizeFull.width, this.status.height = this.options.sizeFull.height, this.status.cssClass = this.options.sizeFull.cssClass) : (this.status.width = this.options.size.width, this.status.height = this.options.size.height, this.status.cssClass = this.options.size.cssClass), this.element.css({
                width: this.status.width,
                height: this.status.height
            })
        },
        _addUiClass: function() {
            this.ancestorJq.length && this.ancestorJq.addClass(this.status.cssClass)
        },
        _removeUiClass: function() {
            this.ancestorJq.length && this.ancestorJq.removeClass(this.status.cssClass)
        },
        _updateSize: function() {
            this.internal.poster.jq.css({
                width: this.status.width,
                height: this.status.height
            }), !this.status.waitForPlay && this.html.active && this.status.video || this.html.video.available && this.html.used && this.status.nativeVideoControls ? this.internal.video.jq.css({
                width: this.status.width,
                height: this.status.height
            }) : !this.status.waitForPlay && this.flash.active && this.status.video && this.internal.flash.jq.css({
                width: this.status.width,
                height: this.status.height
            })
        },
        _updateAutohide: function() {
            var e = this,
                t = "mousemove.jPlayer",
                n = ".jPlayerAutohide",
                i = t + n,
                r = function(t) {
                    var n = !1,
                        i, r;
                    "undefined" != typeof e.internal.mouse ? (i = e.internal.mouse.x - t.pageX, r = e.internal.mouse.y - t.pageY, n = Math.floor(i) > 0 || Math.floor(r) > 0) : n = !0, e.internal.mouse = {
                        x: t.pageX,
                        y: t.pageY
                    }, n && e.css.jq.gui.fadeIn(e.options.autohide.fadeIn, function() {
                        clearTimeout(e.internal.autohideId), e.internal.autohideId = setTimeout(function() {
                            e.css.jq.gui.fadeOut(e.options.autohide.fadeOut)
                        }, e.options.autohide.hold)
                    })
                };
            this.css.jq.gui.length && (this.css.jq.gui.stop(!0, !0), clearTimeout(this.internal.autohideId), delete this.internal.mouse, this.element.unbind(n), this.css.jq.gui.unbind(n), this.status.nativeVideoControls ? this.css.jq.gui.hide() : this.options.fullWindow && this.options.autohide.full || !this.options.fullWindow && this.options.autohide.restored ? (this.element.bind(i, r), this.css.jq.gui.bind(i, r), this.css.jq.gui.hide()) : this.css.jq.gui.show())
        },
        fullScreen: function(e) {
            var t = "object" == typeof e;
            t && this.options.useStateClassSkin && this.options.fullScreen ? this._setOption("fullScreen", !1) : this._setOption("fullScreen", !0)
        },
        restoreScreen: function() {
            this._setOption("fullScreen", !1)
        },
        _fullscreenAddEventListeners: function() {
            var e = this,
                t = $.jPlayer.nativeFeatures.fullscreen;
            t.api.fullscreenEnabled && t.event.fullscreenchange && ("function" != typeof this.internal.fullscreenchangeHandler && (this.internal.fullscreenchangeHandler = function() {
                e._fullscreenchange()
            }), document.addEventListener(t.event.fullscreenchange, this.internal.fullscreenchangeHandler, !1))
        },
        _fullscreenRemoveEventListeners: function() {
            var e = $.jPlayer.nativeFeatures.fullscreen;
            this.internal.fullscreenchangeHandler && document.removeEventListener(e.event.fullscreenchange, this.internal.fullscreenchangeHandler, !1)
        },
        _fullscreenchange: function() {
            this.options.fullScreen && !$.jPlayer.nativeFeatures.fullscreen.api.fullscreenElement() && this._setOption("fullScreen", !1)
        },
        _requestFullscreen: function() {
            var e = this.ancestorJq.length ? this.ancestorJq[0] : this.element[0],
                t = $.jPlayer.nativeFeatures.fullscreen;
            t.used.webkitVideo && (e = this.htmlElement.video), t.api.fullscreenEnabled && t.api.requestFullscreen(e)
        },
        _exitFullscreen: function() {
            var e = $.jPlayer.nativeFeatures.fullscreen,
                t;
            e.used.webkitVideo && (t = this.htmlElement.video), e.api.fullscreenEnabled && e.api.exitFullscreen(t)
        },
        _html_initMedia: function(e) {
            var t = $(this.htmlElement.media).empty();
            $.each(e.track || [], function(e, n) {
                var i = document.createElement("track");
                i.setAttribute("kind", n.kind ? n.kind : ""), i.setAttribute("src", n.src ? n.src : ""), i.setAttribute("srclang", n.srclang ? n.srclang : ""), i.setAttribute("label", n.label ? n.label : ""), n.def && i.setAttribute("default", n.def), t.append(i)
            }), this.htmlElement.media.src = this.status.src, "none" !== this.options.preload && this._html_load(), this._trigger($.jPlayer.event.timeupdate)
        },
        _html_setFormat: function(e) {
            var t = this;
            $.each(this.formats, function(n, i) {
                if (t.html.support[i] && e[i]) return t.status.src = e[i], t.status.format[i] = !0, t.status.formatType = i, !1
            })
        },
        _html_setAudio: function(e) {
            this._html_setFormat(e), this.htmlElement.media = this.htmlElement.audio, this._html_initMedia(e)
        },
        _html_setVideo: function(e) {
            this._html_setFormat(e), this.status.nativeVideoControls && (this.htmlElement.video.poster = this._validString(e.poster) ? e.poster : ""), this.htmlElement.media = this.htmlElement.video, this._html_initMedia(e)
        },
        _html_resetMedia: function() {
            this.htmlElement.media && (this.htmlElement.media.id !== this.internal.video.id || this.status.nativeVideoControls || this.internal.video.jq.css({
                width: "0px",
                height: "0px"
            }), this.htmlElement.media.pause())
        },
        _html_clearMedia: function() {
            this.htmlElement.media && (this.htmlElement.media.src = "about:blank", this.htmlElement.media.load())
        },
        _html_load: function() {
            this.status.waitForLoad && (this.status.waitForLoad = !1, this.htmlElement.media.load()), clearTimeout(this.internal.htmlDlyCmdId)
        },
        _html_play: function(e) {
            var t = this,
                n = this.htmlElement.media;
            if (this.androidFix.pause = !1, this._html_load(), this.androidFix.setMedia) this.androidFix.play = !0, this.androidFix.time = e;
            else if (isNaN(e)) n.play();
            else {
                this.internal.cmdsIgnored && n.play();
                try {
                    if (n.seekable && !("object" == typeof n.seekable && n.seekable.length > 0)) throw 1;
                    n.currentTime = e, n.play()
                } catch (n) {
                    return void(this.internal.htmlDlyCmdId = setTimeout(function() {
                        t.play(e)
                    }, 250))
                }
            }
            this._html_checkWaitForPlay()
        },
        _html_pause: function(e) {
            var t = this,
                n = this.htmlElement.media;
            if (this.androidFix.play = !1, e > 0 ? this._html_load() : clearTimeout(this.internal.htmlDlyCmdId), n.pause(), this.androidFix.setMedia) this.androidFix.pause = !0, this.androidFix.time = e;
            else if (!isNaN(e)) try {
                if (n.seekable && !("object" == typeof n.seekable && n.seekable.length > 0)) throw 1;
                n.currentTime = e
            } catch (n) {
                return void(this.internal.htmlDlyCmdId = setTimeout(function() {
                    t.pause(e)
                }, 250))
            }
            e > 0 && this._html_checkWaitForPlay()
        },
        _html_playHead: function(e) {
            var t = this,
                n = this.htmlElement.media;
            this._html_load();
            try {
                if ("object" == typeof n.seekable && n.seekable.length > 0) n.currentTime = e * n.seekable.end(n.seekable.length - 1) / 100;
                else {
                    if (!(n.duration > 0) || isNaN(n.duration)) throw "e";
                    n.currentTime = e * n.duration / 100
                }
            } catch (n) {
                return void(this.internal.htmlDlyCmdId = setTimeout(function() {
                    t.playHead(e)
                }, 250))
            }
            this.status.waitForLoad || this._html_checkWaitForPlay()
        },
        _html_checkWaitForPlay: function() {
            this.status.waitForPlay && (this.status.waitForPlay = !1, this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide(), this.status.video && (this.internal.poster.jq.hide(), this.internal.video.jq.css({
                width: this.status.width,
                height: this.status.height
            })))
        },
        _html_setProperty: function(e, t) {
            this.html.audio.available && (this.htmlElement.audio[e] = t), this.html.video.available && (this.htmlElement.video[e] = t)
        },
        _aurora_setAudio: function(e) {
            var t = this;
            $.each(this.formats, function(n, i) {
                if (t.aurora.support[i] && e[i]) return t.status.src = e[i], t.status.format[i] = !0, t.status.formatType = i, !1
            }), this.aurora.player = new AV.Player.fromURL(this.status.src), this._addAuroraEventListeners(this.aurora.player, this.aurora), "auto" === this.options.preload && (this._aurora_load(), this.status.waitForLoad = !1)
        },
        _aurora_resetMedia: function() {
            this.aurora.player && this.aurora.player.stop()
        },
        _aurora_clearMedia: function() {},
        _aurora_load: function() {
            this.status.waitForLoad && (this.status.waitForLoad = !1, this.aurora.player.preload())
        },
        _aurora_play: function(e) {
            this.status.waitForLoad || isNaN(e) || this.aurora.player.seek(e), this.aurora.player.playing || this.aurora.player.play(), this.status.waitForLoad = !1, this._aurora_checkWaitForPlay(), this._updateButtons(!0), this._trigger($.jPlayer.event.play)
        },
        _aurora_pause: function(e) {
            isNaN(e) || this.aurora.player.seek(1e3 * e), this.aurora.player.pause(), e > 0 && this._aurora_checkWaitForPlay(), this._updateButtons(!1), this._trigger($.jPlayer.event.pause)
        },
        _aurora_playHead: function(e) {
            this.aurora.player.duration > 0 && this.aurora.player.seek(e * this.aurora.player.duration / 100), this.status.waitForLoad || this._aurora_checkWaitForPlay()
        },
        _aurora_checkWaitForPlay: function() {
            this.status.waitForPlay && (this.status.waitForPlay = !1)
        },
        _aurora_volume: function(e) {
            this.aurora.player.volume = 100 * e
        },
        _aurora_mute: function(e) {
            e ? (this.aurora.properties.lastvolume = this.aurora.player.volume, this.aurora.player.volume = 0) : this.aurora.player.volume = this.aurora.properties.lastvolume, this.aurora.properties.muted = e
        },
        _flash_setAudio: function(e) {
            var t = this;
            try {
                $.each(this.formats, function(n, i) {
                    if (t.flash.support[i] && e[i]) {
                        switch (i) {
                            case "m4a":
                            case "fla":
                                t._getMovie().fl_setAudio_m4a(e[i]);
                                break;
                            case "mp3":
                                t._getMovie().fl_setAudio_mp3(e[i]);
                                break;
                            case "rtmpa":
                                t._getMovie().fl_setAudio_rtmp(e[i])
                        }
                        return t.status.src = e[i], t.status.format[i] = !0, t.status.formatType = i, !1
                    }
                }), "auto" === this.options.preload && (this._flash_load(), this.status.waitForLoad = !1)
            } catch (e) {
                this._flashError(e)
            }
        },
        _flash_setVideo: function(e) {
            var t = this;
            try {
                $.each(this.formats, function(n, i) {
                    if (t.flash.support[i] && e[i]) {
                        switch (i) {
                            case "m4v":
                            case "flv":
                                t._getMovie().fl_setVideo_m4v(e[i]);
                                break;
                            case "rtmpv":
                                t._getMovie().fl_setVideo_rtmp(e[i])
                        }
                        return t.status.src = e[i], t.status.format[i] = !0, t.status.formatType = i, !1
                    }
                }), "auto" === this.options.preload && (this._flash_load(), this.status.waitForLoad = !1)
            } catch (e) {
                this._flashError(e)
            }
        },
        _flash_resetMedia: function() {
            this.internal.flash.jq.css({
                width: "0px",
                height: "0px"
            }), this._flash_pause(NaN)
        },
        _flash_clearMedia: function() {
            try {
                this._getMovie().fl_clearMedia()
            } catch (e) {
                this._flashError(e)
            }
        },
        _flash_load: function() {
            try {
                this._getMovie().fl_load()
            } catch (e) {
                this._flashError(e)
            }
            this.status.waitForLoad = !1
        },
        _flash_play: function(e) {
            try {
                this._getMovie().fl_play(e)
            } catch (e) {
                this._flashError(e)
            }
            this.status.waitForLoad = !1, this._flash_checkWaitForPlay()
        },
        _flash_pause: function(e) {
            try {
                this._getMovie().fl_pause(e)
            } catch (e) {
                this._flashError(e)
            }
            e > 0 && (this.status.waitForLoad = !1, this._flash_checkWaitForPlay())
        },
        _flash_playHead: function(e) {
            try {
                this._getMovie().fl_play_head(e)
            } catch (e) {
                this._flashError(e)
            }
            this.status.waitForLoad || this._flash_checkWaitForPlay()
        },
        _flash_checkWaitForPlay: function() {
            this.status.waitForPlay && (this.status.waitForPlay = !1, this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide(), this.status.video && (this.internal.poster.jq.hide(), this.internal.flash.jq.css({
                width: this.status.width,
                height: this.status.height
            })))
        },
        _flash_volume: function(e) {
            try {
                this._getMovie().fl_volume(e)
            } catch (e) {
                this._flashError(e)
            }
        },
        _flash_mute: function(e) {
            try {
                this._getMovie().fl_mute(e)
            } catch (e) {
                this._flashError(e)
            }
        },
        _getMovie: function() {
            return document[this.internal.flash.id]
        },
        _getFlashPluginVersion: function() {
            var e = 0,
                t;
            if (window.ActiveXObject) try {
                if (t = new ActiveXObject("ShockwaveFlash.ShockwaveFlash")) {
                    var n = t.GetVariable("$version");
                    n && (n = n.split(" ")[1].split(","), e = parseInt(n[0], 10) + "." + parseInt(n[1], 10))
                }
            } catch (e) {} else navigator.plugins && navigator.mimeTypes.length > 0 && (t = navigator.plugins["Shockwave Flash"], t && (e = navigator.plugins["Shockwave Flash"].description.replace(/.*\s(\d+\.\d+).*/, "$1")));
            return 1 * e
        },
        _checkForFlash: function(e) {
            var t = !1;
            return this._getFlashPluginVersion() >= e && (t = !0), t
        },
        _validString: function(e) {
            return e && "string" == typeof e
        },
        _limitValue: function(e, t, n) {
            return e < t ? t : e > n ? n : e
        },
        _urlNotSetError: function(e) {
            this._error({
                type: $.jPlayer.error.URL_NOT_SET,
                context: e,
                message: $.jPlayer.errorMsg.URL_NOT_SET,
                hint: $.jPlayer.errorHint.URL_NOT_SET
            })
        },
        _flashError: function(e) {
            var t;
            t = this.internal.ready ? "FLASH_DISABLED" : "FLASH", this._error({
                type: $.jPlayer.error[t],
                context: this.internal.flash.swf,
                message: $.jPlayer.errorMsg[t] + e.message,
                hint: $.jPlayer.errorHint[t]
            }), this.internal.flash.jq.css({
                width: "1px",
                height: "1px"
            })
        },
        _error: function(e) {
            this._trigger($.jPlayer.event.error, e), this.options.errorAlerts && this._alert("Error!" + (e.message ? "\n" + e.message : "") + (e.hint ? "\n" + e.hint : "") + "\nContext: " + e.context)
        },
        _warning: function(t) {
            this._trigger($.jPlayer.event.warning, e, t), this.options.warningAlerts && this._alert("Warning!" + (t.message ? "\n" + t.message : "") + (t.hint ? "\n" + t.hint : "") + "\nContext: " + t.context)
        },
        _alert: function(e) {
            var t = "jPlayer " + this.version.script + " : id='" + this.internal.self.id + "' : " + e;
            this.options.consoleAlerts ? window.console && window.console.log && window.console.log(t) : alert(t)
        },
        _emulateHtmlBridge: function() {
            var e = this;
            $.each($.jPlayer.emulateMethods.split(/\s+/g), function(t, n) {
                e.internal.domNode[n] = function(t) {
                    e[n](t)
                }
            }), $.each($.jPlayer.event, function(t, n) {
                var i = !0;
                $.each($.jPlayer.reservedEvent.split(/\s+/g), function(e, n) {
                    if (n === t) return i = !1, !1
                }), i && e.element.bind(n + ".jPlayer.jPlayerHtml", function() {
                    e._emulateHtmlUpdate();
                    var n = document.createEvent("Event");
                    n.initEvent(t, !1, !0), e.internal.domNode.dispatchEvent(n)
                })
            })
        },
        _emulateHtmlUpdate: function() {
            var e = this;
            $.each($.jPlayer.emulateStatus.split(/\s+/g), function(t, n) {
                e.internal.domNode[n] = e.status[n]
            }), $.each($.jPlayer.emulateOptions.split(/\s+/g), function(t, n) {
                e.internal.domNode[n] = e.options[n]
            })
        },
        _destroyHtmlBridge: function() {
            var e = this;
            this.element.unbind(".jPlayerHtml");
            var t = $.jPlayer.emulateMethods + " " + $.jPlayer.emulateStatus + " " + $.jPlayer.emulateOptions;
            $.each(t.split(/\s+/g), function(t, n) {
                delete e.internal.domNode[n]
            })
        }
    }, $.jPlayer.error = {
        FLASH: "e_flash",
        FLASH_DISABLED: "e_flash_disabled",
        NO_SOLUTION: "e_no_solution",
        NO_SUPPORT: "e_no_support",
        URL: "e_url",
        URL_NOT_SET: "e_url_not_set",
        VERSION: "e_version"
    }, $.jPlayer.errorMsg = {
        FLASH: "jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",
        FLASH_DISABLED: "jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",
        NO_SOLUTION: "No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",
        NO_SUPPORT: "It is not possible to play any media format provided in setMedia() on this browser using your current options.",
        URL: "Media URL could not be loaded.",
        URL_NOT_SET: "Attempt to issue media playback commands, while no media url is set.",
        VERSION: "jPlayer " + $.jPlayer.prototype.version.script + " needs Jplayer.swf version " + $.jPlayer.prototype.version.needFlash + " but found "
    }, $.jPlayer.errorHint = {
        FLASH: "Check your swfPath option and that Jplayer.swf is there.",
        FLASH_DISABLED: "Check that you have not display:none; the jPlayer entity or any ancestor.",
        NO_SOLUTION: "Review the jPlayer options: support and supplied.",
        NO_SUPPORT: "Video or audio formats defined in the supplied option are missing.",
        URL: "Check media URL is valid.",
        URL_NOT_SET: "Use setMedia() to set the media URL.",
        VERSION: "Update jPlayer files."
    }, $.jPlayer.warning = {
        CSS_SELECTOR_COUNT: "e_css_selector_count",
        CSS_SELECTOR_METHOD: "e_css_selector_method",
        CSS_SELECTOR_STRING: "e_css_selector_string",
        OPTION_KEY: "e_option_key"
    }, $.jPlayer.warningMsg = {
        CSS_SELECTOR_COUNT: "The number of css selectors found did not equal one: ",
        CSS_SELECTOR_METHOD: "The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",
        CSS_SELECTOR_STRING: "The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",
        OPTION_KEY: "The option requested in jPlayer('option') is undefined."
    }, $.jPlayer.warningHint = {
        CSS_SELECTOR_COUNT: "Check your css selector and the ancestor.",
        CSS_SELECTOR_METHOD: "Check your method name.",
        CSS_SELECTOR_STRING: "Check your css selector is a string.",
        OPTION_KEY: "Check your option name."
    }
}),
function e(t, n) {
    "object" == typeof exports && exports && "string" != typeof exports.nodeName ? n(exports) : "function" == typeof define && define.amd ? define(["exports"], n) : (t.Mustache = {}, n(Mustache))
}(this, function e(t) {
    function n(e) {
        return "function" == typeof e
    }

    function i(e) {
        return E(e) ? "array" : typeof e
    }

    function r(e) {
        return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
    }

    function o(e, t) {
        return null != e && "object" == typeof e && t in e
    }

    function a(e, t) {
        return g.call(e, t)
    }

    function s(e) {
        return !a(v, e)
    }

    function l(e) {
        return String(e).replace(/[&<>"'\/]/g, function e(t) {
            return y[t]
        })
    }

    function c(e, n) {
        function i() {
            if (p && !f)
                for (; c.length;) delete l[c.pop()];
            else c = [];
            p = !1, f = !1
        }

        function o(e) {
            if ("string" == typeof e && (e = e.split(x, 2)), !E(e) || 2 !== e.length) throw new Error("Invalid tags: " + e);
            m = new RegExp(r(e[0]) + "\\s*"), g = new RegExp("\\s*" + r(e[1])), v = new RegExp("\\s*" + r("}" + e[1]))
        }
        if (!e) return [];
        var a = [],
            l = [],
            c = [],
            p = !1,
            f = !1,
            m, g, v;
        o(n || t.tags);
        for (var y = new d(e), H, S, _, M, C, A; !y.eos();) {
            if (H = y.pos, _ = y.scanUntil(m))
                for (var P = 0, k = _.length; P < k; ++P) M = _.charAt(P), s(M) ? c.push(l.length) : f = !0, l.push(["text", M, H, H + 1]), H += 1, "\n" === M && i();
            if (!y.scan(m)) break;
            if (p = !0, S = y.scan(b) || "name", y.scan(T), "=" === S ? (_ = y.scanUntil(R), y.scan(R), y.scanUntil(g)) : "{" === S ? (_ = y.scanUntil(v), y.scan(w), y.scanUntil(g), S = "&") : _ = y.scanUntil(g), !y.scan(g)) throw new Error("Unclosed tag at " + y.pos);
            if (C = [S, _, H, y.pos], l.push(C), "#" === S || "^" === S) a.push(C);
            else if ("/" === S) {
                if (A = a.pop(), !A) throw new Error('Unopened section "' + _ + '" at ' + H);
                if (A[1] !== _) throw new Error('Unclosed section "' + A[1] + '" at ' + H)
            } else "name" === S || "{" === S || "&" === S ? f = !0 : "=" === S && o(_)
        }
        if (A = a.pop()) throw new Error('Unclosed section "' + A[1] + '" at ' + y.pos);
        return h(u(l))
    }

    function u(e) {
        for (var t = [], n, i, r = 0, o = e.length; r < o; ++r) n = e[r], n && ("text" === n[0] && i && "text" === i[0] ? (i[1] += n[1], i[3] = n[3]) : (t.push(n), i = n));
        return t
    }

    function h(e) {
        for (var t = [], n = t, i = [], r, o, a = 0, s = e.length; a < s; ++a) switch (r = e[a], r[0]) {
            case "#":
            case "^":
                n.push(r), i.push(r), n = r[4] = [];
                break;
            case "/":
                o = i.pop(), o[5] = r[2], n = i.length > 0 ? i[i.length - 1][4] : t;
                break;
            default:
                n.push(r)
        }
        return t
    }

    function d(e) {
        this.string = e, this.tail = e, this.pos = 0
    }

    function p(e, t) {
        this.view = e, this.cache = {
            ".": this.view
        }, this.parent = t
    }

    function f() {
        this.cache = {}
    }
    var m = Object.prototype.toString,
        E = Array.isArray || function e(t) {
            return "[object Array]" === m.call(t)
        },
        g = RegExp.prototype.test,
        v = /\S/,
        y = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;"
        },
        T = /\s*/,
        x = /\s+/,
        R = /\s*=/,
        w = /\s*\}/,
        b = /#|\^|\/|>|\{|&|=|!/;
    d.prototype.eos = function e() {
        return "" === this.tail
    }, d.prototype.scan = function e(t) {
        var n = this.tail.match(t);
        if (!n || 0 !== n.index) return "";
        var i = n[0];
        return this.tail = this.tail.substring(i.length), this.pos += i.length, i
    }, d.prototype.scanUntil = function e(t) {
        var n = this.tail.search(t),
            i;
        switch (n) {
            case -1:
                i = this.tail, this.tail = "";
                break;
            case 0:
                i = "";
                break;
            default:
                i = this.tail.substring(0, n), this.tail = this.tail.substring(n)
        }
        return this.pos += i.length, i
    }, p.prototype.push = function e(t) {
        return new p(t, this)
    }, p.prototype.lookup = function e(t) {
        var i = this.cache,
            r;
        if (i.hasOwnProperty(t)) r = i[t];
        else {
            for (var a = this, s, l, c = !1; a;) {
                if (t.indexOf(".") > 0)
                    for (r = a.view, s = t.split("."), l = 0; null != r && l < s.length;) l === s.length - 1 && (c = o(r, s[l])), r = r[s[l++]];
                else r = a.view[t], c = o(a.view, t);
                if (c) break;
                a = a.parent
            }
            i[t] = r
        }
        return n(r) && (r = r.call(this.view)), r
    }, f.prototype.clearCache = function e() {
        this.cache = {}
    }, f.prototype.parse = function e(t, n) {
        var i = this.cache,
            r = i[t];
        return null == r && (r = i[t] = c(t, n)), r
    }, f.prototype.render = function e(t, n, i) {
        var r = this.parse(t),
            o = n instanceof p ? n : new p(n);
        return this.renderTokens(r, o, i, t)
    }, f.prototype.renderTokens = function e(t, n, i, r) {
        for (var o = "", a, s, l, c = 0, u = t.length; c < u; ++c) l = void 0, a = t[c], s = a[0], "#" === s ? l = this.renderSection(a, n, i, r) : "^" === s ? l = this.renderInverted(a, n, i, r) : ">" === s ? l = this.renderPartial(a, n, i, r) : "&" === s ? l = this.unescapedValue(a, n) : "name" === s ? l = this.escapedValue(a, n) : "text" === s && (l = this.rawValue(a)), void 0 !== l && (o += l);
        return o
    }, f.prototype.renderSection = function e(t, i, r, o) {
        function a(e) {
            return s.render(e, i, r)
        }
        var s = this,
            l = "",
            c = i.lookup(t[1]);
        if (c) {
            if (E(c))
                for (var u = 0, h = c.length; u < h; ++u) l += this.renderTokens(t[4], i.push(c[u]), r, o);
            else if ("object" == typeof c || "string" == typeof c || "number" == typeof c) l += this.renderTokens(t[4], i.push(c), r, o);
            else if (n(c)) {
                if ("string" != typeof o) throw new Error("Cannot use higher-order sections without the original template");
                c = c.call(i.view, o.slice(t[3], t[5]), a), null != c && (l += c)
            } else l += this.renderTokens(t[4], i, r, o);
            return l
        }
    }, f.prototype.renderInverted = function e(t, n, i, r) {
        var o = n.lookup(t[1]);
        if (!o || E(o) && 0 === o.length) return this.renderTokens(t[4], n, i, r)
    }, f.prototype.renderPartial = function e(t, i, r) {
        if (r) {
            var o = n(r) ? r(t[1]) : r[t[1]];
            return null != o ? this.renderTokens(this.parse(o), i, r, o) : void 0
        }
    }, f.prototype.unescapedValue = function e(t, n) {
        var i = n.lookup(t[1]);
        if (null != i) return i
    }, f.prototype.escapedValue = function e(n, i) {
        var r = i.lookup(n[1]);
        if (null != r) return t.escape(r)
    }, f.prototype.rawValue = function e(t) {
        return t[1]
    }, t.name = "mustache.js", t.version = "2.2.0", t.tags = ["{{", "}}"];
    var H = new f;
    t.clearCache = function e() {
        return H.clearCache()
    }, t.parse = function e(t, n) {
        return H.parse(t, n)
    }, t.render = function e(t, n, r) {
        if ("string" != typeof t) throw new TypeError('Invalid template! Template should be a "string" but "' + i(t) + '" was given as the first argument for mustache#render(template, view, partials)');
        return H.render(t, n, r)
    }, t.to_html = function e(i, r, o, a) {
        var s = t.render(i, r, o);
        return n(a) ? void a(s) : s
    }, t.escape = l, t.Scanner = d, t.Context = p, t.Writer = f
}),
function(e, t, n) {
    var i = window.matchMedia;
    "undefined" != typeof module && module.exports ? module.exports = n(i) : "function" == typeof define && define.amd ? define(function() {
        return t[e] = n(i)
    }) : t[e] = n(i)
}("enquire", this, function(e) {
    "use strict";

    function t(e, t) {
        var n = 0,
            i = e.length,
            r;
        for (n; n < i && (r = t(e[n], n), r !== !1); n++);
    }

    function n(e) {
        return "[object Array]" === Object.prototype.toString.apply(e)
    }

    function i(e) {
        return "function" == typeof e
    }

    function r(e) {
        this.options = e, !e.deferSetup && this.setup()
    }

    function o(t, n) {
        this.query = t, this.isUnconditional = n, this.handlers = [], this.mql = e(t);
        var i = this;
        this.listener = function(e) {
            i.mql = e, i.assess()
        }, this.mql.addListener(this.listener)
    }

    function a() {
        if (!e) throw new Error("matchMedia not present, legacy browsers require a polyfill");
        this.queries = {}, this.browserIsIncapable = !e("only all").matches
    }
    return r.prototype = {
        setup: function() {
            this.options.setup && this.options.setup(), this.initialised = !0
        },
        on: function() {
            !this.initialised && this.setup(), this.options.match && this.options.match()
        },
        off: function() {
            this.options.unmatch && this.options.unmatch()
        },
        destroy: function() {
            this.options.destroy ? this.options.destroy() : this.off()
        },
        equals: function(e) {
            return this.options === e || this.options.match === e
        }
    }, o.prototype = {
        addHandler: function(e) {
            var t = new r(e);
            this.handlers.push(t), this.matches() && t.on()
        },
        removeHandler: function(e) {
            var n = this.handlers;
            t(n, function(t, i) {
                if (t.equals(e)) return t.destroy(), !n.splice(i, 1)
            })
        },
        matches: function() {
            return this.mql.matches || this.isUnconditional
        },
        clear: function() {
            t(this.handlers, function(e) {
                e.destroy()
            }), this.mql.removeListener(this.listener), this.handlers.length = 0
        },
        assess: function() {
            var e = this.matches() ? "on" : "off";
            t(this.handlers, function(t) {
                t[e]()
            })
        }
    }, a.prototype = {
        register: function(e, r, a) {
            var s = this.queries,
                l = a && this.browserIsIncapable;
            return s[e] || (s[e] = new o(e, l)), i(r) && (r = {
                match: r
            }), n(r) || (r = [r]), t(r, function(t) {
                i(t) && (t = {
                    match: t
                }), s[e].addHandler(t)
            }), this
        },
        unregister: function(e, t) {
            var n = this.queries[e];
            return n && (t ? n.removeHandler(t) : (n.clear(), delete this.queries[e])), this
        }
    }, new a
});
var EasyAutocomplete = function(e) {
        return e.Configuration = function e(t) {
            function n() {
                if ("xml" === t.dataType && (t.getValue || (t.getValue = function(e) {
                        return $(e).text()
                    }), t.list || (t.list = {}), t.list.sort || (t.list.sort = {}), t.list.sort.method = function(e, n) {
                        return e = t.getValue(e), n = t.getValue(n), e < n ? -1 : e > n ? 1 : 0
                    }, t.list.match || (t.list.match = {}), t.list.match.method = function(e, n) {
                        return e = t.getValue(e), n = t.getValue(n), e === n
                    }), void 0 !== t.categories && t.categories instanceof Array) {
                    for (var e = [], n = 0, i = t.categories.length; n < i; n += 1) {
                        var r = t.categories[n];
                        for (var o in l.categories[0]) void 0 === r[o] && (r[o] = l.categories[0][o]);
                        e.push(r)
                    }
                    t.categories = e
                }
            }

            function i() {
                function e(t, n) {
                    var i = t || {};
                    for (var r in t) void 0 !== n[r] && null !== n[r] && ("object" != typeof n[r] || n[r] instanceof Array ? i[r] = n[r] : e(t[r], n[r]));
                    return void 0 !== n.data && null !== n.data && "object" == typeof n.data && (i.data = n.data), i
                }
                l = e(l, t)
            }

            function r() {
                if ("list-required" !== l.url && "function" != typeof l.url) {
                    var e = l.url;
                    l.url = function() {
                        return e
                    }
                }
                if (void 0 !== l.ajaxSettings.url && "function" != typeof l.ajaxSettings.url) {
                    var e = l.ajaxSettings.url;
                    l.ajaxSettings.url = function() {
                        return e
                    }
                }
                if ("string" == typeof l.listLocation) {
                    var n = l.listLocation;
                    "XML" === l.dataType.toUpperCase() ? l.listLocation = function(e) {
                        return $(e).find(n)
                    } : l.listLocation = function(e) {
                        return e[n]
                    }
                }
                if ("string" == typeof l.getValue) {
                    var i = l.getValue;
                    l.getValue = function(e) {
                        return e[i]
                    }
                }
                void 0 !== t.categories && (l.categoriesAssigned = !0)
            }

            function o() {
                void 0 !== t.ajaxSettings && "object" == typeof t.ajaxSettings ? l.ajaxSettings = t.ajaxSettings : l.ajaxSettings = {}
            }

            function a(e) {
                return void 0 !== l[e] && null !== l[e]
            }

            function s(e, t) {
                function n(t, r) {
                    for (var o in r) void 0 === t[o] && e.log("Property '" + o + "' does not exist in EasyAutocomplete options API."), "object" != typeof t[o] || i(o) || n(t[o], r[o])
                }

                function i(e) {
                    var t = ["ajaxSettings", "template"];
                    return !1;
                    return Array.prototype.contains = function(e) {
                        for (var t = this.length; t--;)
                            if (this[t] === e) return !0;
                        return !1
                    }, t.contains(e)
                }
                n(l, t)
            }
            var l = {
                data: "list-required",
                url: "list-required",
                dataType: "json",
                listLocation: function(e) {
                    return e
                },
                xmlElementName: "",
                getValue: function(e) {
                    return e
                },
                autocompleteOff: !0,
                placeholder: !1,
                ajaxCallback: function() {},
                matchResponseProperty: !1,
                list: {
                    sort: {
                        enabled: !1,
                        method: function(e, t) {
                            return e = l.getValue(e), t = l.getValue(t), e < t ? -1 : e > t ? 1 : 0
                        }
                    },
                    maxNumberOfElements: 6,
                    hideOnEmptyPhrase: !0,
                    match: {
                        enabled: !1,
                        caseSensitive: !1,
                        method: function(e, t) {
                            return e = l.getValue(e), t = l.getValue(t), e === t
                        }
                    },
                    showAnimation: {
                        type: "normal",
                        time: 400,
                        callback: function() {}
                    },
                    hideAnimation: {
                        type: "normal",
                        time: 400,
                        callback: function() {}
                    },
                    onClickEvent: function() {},
                    onSelectItemEvent: function() {},
                    onLoadEvent: function() {},
                    onChooseEvent: function() {},
                    onKeyEnterEvent: function() {},
                    onMouseOverEvent: function() {},
                    onMouseOutEvent: function() {},
                    onShowListEvent: function() {},
                    onHideListEvent: function() {}
                },
                highlightPhrase: !0,
                theme: "",
                cssClasses: "",
                minCharNumber: 0,
                requestDelay: 0,
                adjustWidth: !0,
                ajaxSettings: {},
                preparePostData: function(e, t) {
                    return e
                },
                loggerEnabled: !0,
                template: "",
                categoriesAssigned: !1,
                categories: [{
                    maxNumberOfElements: 4
                }]
            };
            this.get = function(e) {
                return l[e]
            }, this.equals = function(e, t) {
                return !(!a(e) || l[e] !== t)
            }, this.checkDataUrlProperties = function() {
                return "list-required" !== l.url || "list-required" !== l.data
            }, this.checkRequiredProperties = function() {
                for (var e in l)
                    if ("required" === l[e]) return logger.error("Option " + e + " must be defined"), !1;
                return !0
            }, this.printPropertiesThatDoesntExist = function(e, t) {
                s(e, t)
            }, n(), i(), l.loggerEnabled === !0 && s(console, t), o(), r()
        }, e
    }(EasyAutocomplete || {}),
    EasyAutocomplete = function(e) {
        return e.Logger = function e() {
            this.error = function(e) {
                console.log("ERROR: " + e)
            }, this.warning = function(e) {
                console.log("WARNING: " + e)
            }
        }, e
    }(EasyAutocomplete || {}),
    EasyAutocomplete = function(e) {
        return e.Constans = function e() {
            var t = {
                CONTAINER_CLASS: "easy-autocomplete-container",
                CONTAINER_ID: "eac-container-",
                WRAPPER_CSS_CLASS: "easy-autocomplete"
            };
            this.getValue = function(e) {
                return t[e]
            }
        }, e
    }(EasyAutocomplete || {}),
    EasyAutocomplete = function(e) {
        return e.ListBuilderService = function e(t, n) {
            function i(e, n) {
                function i() {
                    var i = {},
                        r;
                    return void 0 !== e.xmlElementName && (i.xmlElementName = e.xmlElementName), void 0 !== e.listLocation ? r = e.listLocation : void 0 !== t.get("listLocation") && (r = t.get("listLocation")), void 0 !== r ? "string" == typeof r ? i.data = $(n).find(r) : "function" == typeof r && (i.data = r(n)) : i.data = n, i
                }

                function r() {
                    var t = {};
                    return void 0 !== e.listLocation ? "string" == typeof e.listLocation ? t.data = n[e.listLocation] : "function" == typeof e.listLocation && (t.data = e.listLocation(n)) : t.data = n, t
                }
                var o = {};
                if (o = "XML" === t.get("dataType").toUpperCase() ? i() : r(), void 0 !== e.header && (o.header = e.header), void 0 !== e.maxNumberOfElements && (o.maxNumberOfElements = e.maxNumberOfElements), void 0 !== t.get("list").maxNumberOfElements && (o.maxListSize = t.get("list").maxNumberOfElements), void 0 !== e.getValue)
                    if ("string" == typeof e.getValue) {
                        var a = e.getValue;
                        o.getValue = function(e) {
                            return e[a]
                        }
                    } else "function" == typeof e.getValue && (o.getValue = e.getValue);
                else o.getValue = t.get("getValue");
                return o
            }

            function r(e) {
                var n = [];
                return void 0 === e.xmlElementName && (e.xmlElementName = t.get("xmlElementName")), $(e.data).find(e.xmlElementName).each(function() {
                    n.push(this)
                }), n
            }
            this.init = function(e) {
                var n = [],
                    i = {};
                return i.data = t.get("listLocation")(e), i.getValue = t.get("getValue"), i.maxListSize = t.get("list").maxNumberOfElements, n.push(i), n
            }, this.updateCategories = function(e, n) {
                if (t.get("categoriesAssigned")) {
                    e = [];
                    for (var r = 0; r < t.get("categories").length; r += 1) {
                        var o = i(t.get("categories")[r], n);
                        e.push(o)
                    }
                }
                return e
            }, this.convertXml = function(e) {
                if ("XML" === t.get("dataType").toUpperCase())
                    for (var n = 0; n < e.length; n += 1) e[n].data = r(e[n]);
                return e
            }, this.processData = function(e, i) {
                for (var r = 0, o = e.length; r < o; r += 1) e[r].data = n(t, e[r], i);
                return e
            }, this.checkIfDataExists = function(e) {
                for (var t = 0, n = e.length; t < n; t += 1)
                    if (void 0 !== e[t].data && e[t].data instanceof Array && e[t].data.length > 0) return !0;
                return !1
            }
        }, e
    }(EasyAutocomplete || {}),
    EasyAutocomplete = function(e) {
        return e.proccess = function e(t, n, i) {
            function r(e, n) {
                var i = [],
                    r = "";
                if (t.get("list").match.enabled)
                    for (var o = 0, a = e.length; o < a; o += 1) r = t.get("getValue")(e[o]), t.get("list").match.caseSensitive || ("string" == typeof r && (r = r.toLowerCase()), n = n.toLowerCase()), 0 == r.search(n) && i.push(e[o]);
                else i = e;
                return i
            }

            function o(e) {
                return void 0 !== n.maxNumberOfElements && e.length > n.maxNumberOfElements && (e = e.slice(0, n.maxNumberOfElements)), e
            }

            function a(e) {
                return t.get("list").sort.enabled && e.sort(t.get("list").sort.method), e
            }
            var s = n.data,
                l = i;
            return s = r(s, l), s = o(s), s = a(s)
        }, e
    }(EasyAutocomplete || {}),
    EasyAutocomplete = function(e) {
        return e.Template = function e(t) {
            var n = {
                    basic: {
                        type: "basic",
                        method: function(e) {
                            return e
                        },
                        cssClass: ""
                    },
                    description: {
                        type: "description",
                        fields: {
                            description: "description"
                        },
                        method: function(e) {
                            return e + " - description"
                        },
                        cssClass: "eac-description"
                    },
                    iconLeft: {
                        type: "iconLeft",
                        fields: {
                            icon: ""
                        },
                        method: function(e) {
                            return e
                        },
                        cssClass: "eac-icon-left"
                    },
                    iconRight: {
                        type: "iconRight",
                        fields: {
                            iconSrc: ""
                        },
                        method: function(e) {
                            return e
                        },
                        cssClass: "eac-icon-right"
                    },
                    links: {
                        type: "links",
                        fields: {
                            link: ""
                        },
                        method: function(e) {
                            return e
                        },
                        cssClass: ""
                    },
                    custom: {
                        type: "custom",
                        method: function() {},
                        cssClass: ""
                    }
                },
                i = function(e) {
                    var t = e.fields,
                        i;
                    return "description" === e.type ? (i = n.description.method, "string" == typeof t.description ? i = function(e, n) {
                        return e + " - <span>" + n[t.description] + "</span>"
                    } : "function" == typeof t.description && (i = function(e, n) {
                        return e + " - <span>" + t.description(n) + "</span>"
                    }), i) : "iconRight" === e.type ? ("string" == typeof t.iconSrc ? i = function(e, n) {
                        return e + "<img class='eac-icon' src='" + n[t.iconSrc] + "' />"
                    } : "function" == typeof t.iconSrc && (i = function(e, n) {
                        return e + "<img class='eac-icon' src='" + t.iconSrc(n) + "' />"
                    }), i) : "iconLeft" === e.type ? ("string" == typeof t.iconSrc ? i = function(e, n) {
                        return "<img class='eac-icon' src='" + n[t.iconSrc] + "' />" + e
                    } : "function" == typeof t.iconSrc && (i = function(e, n) {
                        return "<img class='eac-icon' src='" + t.iconSrc(n) + "' />" + e
                    }), i) : "links" === e.type ? ("string" == typeof t.link ? i = function(e, n) {
                        return "<a href='" + n[t.link] + "' >" + e + "</a>"
                    } : "function" == typeof t.link && (i = function(e, n) {
                        return "<a href='" + t.link(n) + "' >" + e + "</a>"
                    }), i) : "custom" === e.type ? e.method : n.basic.method
                },
                r = function(e) {
                    return e && e.type && e.type && n[e.type] ? i(e) : n.basic.method
                },
                o = function(e) {
                    var t = function() {
                        return ""
                    };
                    return e && e.type && e.type && n[e.type] ? function() {
                        var t = n[e.type].cssClass;
                        return function() {
                            return t
                        }
                    }() : t
                };
            this.getTemplateClass = o(t), this.build = r(t)
        }, e
    }(EasyAutocomplete || {}),
    EasyAutocomplete = function(e) {
        return e.main = function t(n, i) {
            function r() {
                return 0 === T.length ? void E.error("Input field doesn't exist.") : m.checkDataUrlProperties() ? m.checkRequiredProperties() ? (o(), void s()) : void E.error("Will not work without mentioned properties.") : void E.error("One of options variables 'data' or 'url' must be defined.")
            }

            function o() {
                function e() {
                    var e = $("<div>"),
                        n = f.getValue("WRAPPER_CSS_CLASS");
                    m.get("theme") && "" !== m.get("theme") && (n += " eac-" + m.get("theme")), m.get("cssClasses") && "" !== m.get("cssClasses") && (n += " " + m.get("cssClasses")), "" !== g.getTemplateClass() && (n += " " + g.getTemplateClass()), e.addClass(n), T.wrap(e), m.get("adjustWidth") === !0 && t()
                }

                function t() {
                    var e = T.outerWidth();
                    T.parent().css("width", e), $(window).resize(function(e) {
                        var t = T.outerWidth();
                        e !== t && T.parent().css("width", t)
                    })
                }

                function n() {
                    T.unwrap()
                }

                function i() {
                    var e = $("<div>").addClass(f.getValue("CONTAINER_CLASS"));
                    e.attr("id", a()).prepend($("<ul>")),
                        function() {
                            e.on("show.eac", function() {
                                switch (m.get("list").showAnimation.type) {
                                    case "slide":
                                        var t = m.get("list").showAnimation.time,
                                            n = m.get("list").showAnimation.callback;
                                        e.find("ul").slideDown(t, n);
                                        break;
                                    case "fade":
                                        var t = m.get("list").showAnimation.time,
                                            n = m.get("list").showAnimation.callback;
                                        e.find("ul").fadeIn(t), n;
                                        break;
                                    default:
                                        e.find("ul").show()
                                }
                                m.get("list").onShowListEvent()
                            }).on("hide.eac", function() {
                                switch (m.get("list").hideAnimation.type) {
                                    case "slide":
                                        var t = m.get("list").hideAnimation.time,
                                            n = m.get("list").hideAnimation.callback;
                                        e.find("ul").slideUp(t, n);
                                        break;
                                    case "fade":
                                        var t = m.get("list").hideAnimation.time,
                                            n = m.get("list").hideAnimation.callback;
                                        e.find("ul").fadeOut(t, n);
                                        break;
                                    default:
                                        e.find("ul").hide()
                                }
                                m.get("list").onHideListEvent()
                            }).on("selectElement.eac", function() {
                                e.find("ul li").removeClass("selected"), e.find("ul li").eq(w).addClass("selected"), m.get("list").onSelectItemEvent()
                            }).on("loadElements.eac", function(t, n, i) {
                                var r = "",
                                    a = e.find("ul");
                                a.empty().detach(), R = [];
                                for (var s = 0, l = 0, c = n.length; l < c; l += 1) {
                                    var h = n[l].data;
                                    if (0 !== h.length) {
                                        void 0 !== n[l].header && n[l].header.length > 0 && a.append("<div class='eac-category' >" + n[l].header + "</div>");
                                        for (var d = 0, p = h.length; d < p && s < n[l].maxListSize; d += 1) r = $("<li><div class='eac-item'></div></li>"),
                                            function() {
                                                var e = d,
                                                    t = s,
                                                    a = n[l].getValue(h[e]);
                                                r.find(" > div").on("click", function() {
                                                    T.val(a).trigger("change"), w = t, u(t), m.get("list").onClickEvent(), m.get("list").onChooseEvent()
                                                }).mouseover(function() {
                                                    w = t, u(t), m.get("list").onMouseOverEvent()
                                                }).mouseout(function() {
                                                    m.get("list").onMouseOutEvent()
                                                }).html(g.build(o(a, i), h[e]))
                                            }(), a.append(r), R.push(h[d]), s += 1
                                    }
                                }
                                e.append(a), m.get("list").onLoadEvent()
                            })
                        }(), T.after(e)
                }

                function r() {
                    T.next("." + f.getValue("CONTAINER_CLASS")).remove()
                }

                function o(e, t) {
                    return m.get("highlightPhrase") && "" !== t ? l(e, t) : e
                }

                function s(e) {
                    return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
                }

                function l(e, t) {
                    var n = s(t);
                    return (e + "").replace(new RegExp("(" + n + ")", "gi"), "<b>$1</b>")
                }
                T.parent().hasClass(f.getValue("WRAPPER_CSS_CLASS")) && (r(), n()), e(), i(), x = $("#" + a()), m.get("placeholder") && T.attr("placeholder", m.get("placeholder"))
            }

            function a() {
                var e = T.attr("id");
                return e = f.getValue("CONTAINER_ID") + e
            }

            function s() {
                function e() {
                    y("autocompleteOff", !0) && a(), t(), n(), i(), r(), o()
                }

                function t() {
                    T.off("keyup").keyup(function(e) {
                        function t(e) {
                            function t() {
                                var e = {},
                                    t = m.get("ajaxSettings") || {};
                                for (var n in t) e[n] = t[n];
                                return e
                            }

                            function n(e, t) {
                                return m.get("matchResponseProperty") === !1 || ("string" == typeof m.get("matchResponseProperty") ? t[m.get("matchResponseProperty")] === e : "function" != typeof m.get("matchResponseProperty") || m.get("matchResponseProperty")(t) === e)
                            }
                            if (!(e.length < m.get("minCharNumber"))) {
                                if ("list-required" !== m.get("data")) {
                                    var i = m.get("data"),
                                        r = v.init(i);
                                    r = v.updateCategories(r, i), r = v.processData(r, e), h(r, e), T.parent().find("li").length > 0 ? l() : c()
                                }
                                var o = t();
                                void 0 !== o.url && "" !== o.url || (o.url = m.get("url")), void 0 !== o.dataType && "" !== o.dataType || (o.dataType = m.get("dataType")), void 0 !== o.url && "list-required" !== o.url && (o.url = o.url(e), o.data = m.get("preparePostData")(o.data, e), $.ajax(o).done(function(t) {
                                    var i = v.init(t);
                                    i = v.updateCategories(i, t), i = v.convertXml(i), n(e, t) && (i = v.processData(i, e), h(i, e)), v.checkIfDataExists(i) && T.parent().find("li").length > 0 ? l() : c(), m.get("ajaxCallback")()
                                }).fail(function() {
                                    E.warning("Fail to load response data")
                                }).always(function() {}))
                            }
                        }
                        switch (e.keyCode) {
                            case 27:
                                c(), d();
                                break;
                            case 38:
                                e.preventDefault(), R.length > 0 && w > 0 && (w -= 1, T.val(m.get("getValue")(R[w])), u(w));
                                break;
                            case 40:
                                e.preventDefault(), R.length > 0 && w < R.length - 1 && (w += 1, T.val(m.get("getValue")(R[w])), u(w));
                                break;
                            default:
                                if (e.keyCode > 40 || 8 === e.keyCode) {
                                    var n = T.val();
                                    m.get("list").hideOnEmptyPhrase !== !0 || 8 !== e.keyCode || "" !== n ? m.get("requestDelay") > 0 ? (void 0 !== b && clearTimeout(b), b = setTimeout(function() {
                                        t(n)
                                    }, m.get("requestDelay"))) : t(n) : c()
                                }
                        }
                    })
                }

                function n() {
                    T.on("keydown", function(e) {
                        e = e || window.event;
                        var t = e.keyCode;
                        if (38 === t) return suppressKeypress = !0, !1
                    }).keydown(function(e) {
                        13 === e.keyCode && w > -1 && (T.val(m.get("getValue")(R[w])), m.get("list").onKeyEnterEvent(), m.get("list").onChooseEvent(), w = -1, c(), e.preventDefault())
                    })
                }

                function i() {
                    T.off("keypress")
                }

                function r() {
                    T.focus(function() {
                        "" !== T.val() && R.length > 0 && (w = -1, l())
                    })
                }

                function o() {
                    T.blur(function() {
                        setTimeout(function() {
                            w = -1, c()
                        }, 250)
                    })
                }

                function a() {
                    T.attr("autocomplete", "off")
                }
                e()
            }

            function l() {
                x.trigger("show.eac")
            }

            function c() {
                x.trigger("hide.eac")
            }

            function u(e) {
                x.trigger("selectElement.eac", e)
            }

            function h(e, t) {
                x.trigger("loadElements.eac", [e, t])
            }

            function d() {
                T.trigger("blur")
            }
            var p = {
                    name: "EasyAutocomplete",
                    shortcut: "eac"
                },
                f = new e.Constans,
                m = new e.Configuration(i),
                E = new e.Logger,
                g = new e.Template(i.template),
                v = new e.ListBuilderService(m, e.proccess),
                y = m.equals,
                T = n,
                x = "",
                R = [],
                w = -1,
                b;
            e.consts = f, this.getConstants = function() {
                return f
            }, this.getConfiguration = function() {
                return m
            }, this.getContainer = function() {
                return x
            }, this.getSelectedItemIndex = function() {
                return w
            }, this.getItemData = function(e) {
                return R.length < e || void 0 === R[e] ? -1 : R[e]
            }, this.getSelectedItemData = function() {
                return this.getItemData(w)
            }, this.build = function() {
                o()
            }, this.init = function() {
                r()
            }
        }, e.easyAutocompleteHandles = [], e.inputHasId = function(e) {
            return void 0 !== $(e).attr("id") && $(e).attr("id").length > 0
        }, e.assignRandomId = function(t) {
            var n = "";
            do n = "eac-" + Math.floor(1e4 * Math.random()); while (0 !== $("#" + n).length);
            elementId = e.consts.getValue("CONTAINER_ID") + n, $(t).attr("id", n)
        }, e
    }(EasyAutocomplete || {});
$.fn.easyAutocomplete = function(e) {
        return this.each(function() {
            var t = $(this),
                n = new EasyAutocomplete.main(t, e);
            EasyAutocomplete.inputHasId(t) || EasyAutocomplete.assignRandomId(t), n.init(), EasyAutocomplete.easyAutocompleteHandles[t.attr("id")] = n
        })
    }, $.fn.getSelectedItemIndex = function() {
        var e = $(this).attr("id");
        return void 0 !== e ? EasyAutocomplete.easyAutocompleteHandles[e].getSelectedItemIndex() : -1
    }, $.fn.getItemData = function(e) {
        var t = $(this).attr("id");
        return void 0 !== t && e > -1 ? EasyAutocomplete.easyAutocompleteHandles[t].getItemData(e) : -1
    }, $.fn.getSelectedItemData = function() {
        var e = $(this).attr("id");
        return void 0 !== e ? EasyAutocomplete.easyAutocompleteHandles[e].getSelectedItemData() : -1
    }, window.JSON || (window.JSON = {}),
    function() {
        function f(e) {
            return e < 10 ? "0" + e : e
        }

        function quote(e) {
            return escapable.lastIndex = 0, escapable.test(e) ? '"' + e.replace(escapable, function(e) {
                var t = meta[e];
                return "string" == typeof t ? t : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
            }) + '"' : '"' + e + '"'
        }

        function str(e, t) {
            var n, i, r, o, a = gap,
                s, l = t[e];
            switch (l && "object" == typeof l && "function" == typeof l.toJSON && (l = l.toJSON(e)), "function" == typeof rep && (l = rep.call(t, e, l)), typeof l) {
                case "string":
                    return quote(l);
                case "number":
                    return isFinite(l) ? String(l) : "null";
                case "boolean":
                case "null":
                    return String(l);
                case "object":
                    if (!l) return "null";
                    if (gap += indent, s = [], "[object Array]" === Object.prototype.toString.apply(l)) {
                        for (o = l.length, n = 0; n < o; n += 1) s[n] = str(n, l) || "null";
                        return r = 0 === s.length ? "[]" : gap ? "[\n" + gap + s.join(",\n" + gap) + "\n" + a + "]" : "[" + s.join(",") + "]", gap = a, r
                    }
                    if (rep && "object" == typeof rep)
                        for (o = rep.length, n = 0; n < o; n += 1) i = rep[n], "string" == typeof i && (r = str(i, l), r && s.push(quote(i) + (gap ? ": " : ":") + r));
                    else
                        for (i in l) Object.hasOwnProperty.call(l, i) && (r = str(i, l), r && s.push(quote(i) + (gap ? ": " : ":") + r));
                    return r = 0 === s.length ? "{}" : gap ? "{\n" + gap + s.join(",\n" + gap) + "\n" + a + "}" : "{" + s.join(",") + "}", gap = a, r
            }
        }
        "function" != typeof Date.prototype.toJSON && (Date.prototype.toJSON = function(e) {
            return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
        }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function(e) {
            return this.valueOf()
        });
        var JSON = window.JSON,
            cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
            escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
            gap, indent, meta = {
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\f": "\\f",
                "\r": "\\r",
                '"': '\\"',
                "\\": "\\\\"
            },
            rep;
        "function" != typeof JSON.stringify && (JSON.stringify = function(e, t, n) {
            var i;
            if (gap = "", indent = "", "number" == typeof n)
                for (i = 0; i < n; i += 1) indent += " ";
            else "string" == typeof n && (indent = n);
            if (rep = t, !t || "function" == typeof t || "object" == typeof t && "number" == typeof t.length) return str("", {
                "": e
            });
            throw new Error("JSON.stringify")
        }), "function" != typeof JSON.parse && (JSON.parse = function(text, reviver) {
            function walk(e, t) {
                var n, i, r = e[t];
                if (r && "object" == typeof r)
                    for (n in r) Object.hasOwnProperty.call(r, n) && (i = walk(r, n), void 0 !== i ? r[n] = i : delete r[n]);
                return reviver.call(e, t, r)
            }
            var j;
            if (text = String(text), cx.lastIndex = 0, cx.test(text) && (text = text.replace(cx, function(e) {
                    return "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
                })), /^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return j = eval("(" + text + ")"), "function" == typeof reviver ? walk({
                "": j
            }, "") : j;
            throw new SyntaxError("JSON.parse")
        })
    }(), window.JSON || (window.JSON = {}),
    function() {
        function f(e) {
            return e < 10 ? "0" + e : e
        }

        function quote(e) {
            return escapable.lastIndex = 0, escapable.test(e) ? '"' + e.replace(escapable, function(e) {
                var t = meta[e];
                return "string" == typeof t ? t : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
            }) + '"' : '"' + e + '"'
        }

        function str(e, t) {
            var n, i, r, o, a = gap,
                s, l = t[e];
            switch (l && "object" == typeof l && "function" == typeof l.toJSON && (l = l.toJSON(e)), "function" == typeof rep && (l = rep.call(t, e, l)), typeof l) {
                case "string":
                    return quote(l);
                case "number":
                    return isFinite(l) ? String(l) : "null";
                case "boolean":
                case "null":
                    return String(l);
                case "object":
                    if (!l) return "null";
                    if (gap += indent, s = [], "[object Array]" === Object.prototype.toString.apply(l)) {
                        for (o = l.length, n = 0; n < o; n += 1) s[n] = str(n, l) || "null";
                        return r = 0 === s.length ? "[]" : gap ? "[\n" + gap + s.join(",\n" + gap) + "\n" + a + "]" : "[" + s.join(",") + "]", gap = a, r
                    }
                    if (rep && "object" == typeof rep)
                        for (o = rep.length, n = 0; n < o; n += 1) i = rep[n], "string" == typeof i && (r = str(i, l), r && s.push(quote(i) + (gap ? ": " : ":") + r));
                    else
                        for (i in l) Object.hasOwnProperty.call(l, i) && (r = str(i, l), r && s.push(quote(i) + (gap ? ": " : ":") + r));
                    return r = 0 === s.length ? "{}" : gap ? "{\n" + gap + s.join(",\n" + gap) + "\n" + a + "}" : "{" + s.join(",") + "}", gap = a, r
            }
        }
        "function" != typeof Date.prototype.toJSON && (Date.prototype.toJSON = function(e) {
            return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
        }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function(e) {
            return this.valueOf()
        });
        var JSON = window.JSON,
            cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
            escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
            gap, indent, meta = {
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\f": "\\f",
                "\r": "\\r",
                '"': '\\"',
                "\\": "\\\\"
            },
            rep;
        "function" != typeof JSON.stringify && (JSON.stringify = function(e, t, n) {
            var i;
            if (gap = "", indent = "", "number" == typeof n)
                for (i = 0; i < n; i += 1) indent += " ";
            else "string" == typeof n && (indent = n);
            if (rep = t, !t || "function" == typeof t || "object" == typeof t && "number" == typeof t.length) return str("", {
                "": e
            });
            throw new Error("JSON.stringify")
        }), "function" != typeof JSON.parse && (JSON.parse = function(text, reviver) {
            function walk(e, t) {
                var n, i, r = e[t];
                if (r && "object" == typeof r)
                    for (n in r) Object.hasOwnProperty.call(r, n) && (i = walk(r, n), void 0 !== i ? r[n] = i : delete r[n]);
                return reviver.call(e, t, r)
            }
            var j;
            if (text = String(text), cx.lastIndex = 0, cx.test(text) && (text = text.replace(cx, function(e) {
                    return "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
                })), /^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return j = eval("(" + text + ")"), "function" == typeof reviver ? walk({
                "": j
            }, "") : j;
            throw new SyntaxError("JSON.parse")
        })
    }(),
    function(e, t) {
        "use strict";
        var n = e.History = e.History || {},
            i = e.jQuery;
        if ("undefined" != typeof n.Adapter) throw new Error("History.js Adapter has already been loaded...");
        n.Adapter = {
            bind: function(e, t, n) {
                i(e).bind(t, n)
            },
            trigger: function(e, t, n) {
                i(e).trigger(t, n)
            },
            extractEventData: function(e, n, i) {
                var r = n && n.originalEvent && n.originalEvent[e] || i && i[e] || t;
                return r
            },
            onDomLoad: function(e) {
                i(e)
            }
        }, "undefined" != typeof n.init && n.init()
    }(window),
    function(e, t) {
        "use strict";
        var n = e.document,
            i = e.setTimeout || i,
            r = e.clearTimeout || r,
            o = e.setInterval || o,
            a = e.History = e.History || {};
        if ("undefined" != typeof a.initHtml4) throw new Error("History.js HTML4 Support has already been loaded...");
        a.initHtml4 = function() {
            return "undefined" == typeof a.initHtml4.initialized && (a.initHtml4.initialized = !0, a.enabled = !0, a.savedHashes = [], a.isLastHash = function(e) {
                var t = a.getHashByIndex(),
                    n;
                return n = e === t
            }, a.saveHash = function(e) {
                return !a.isLastHash(e) && (a.savedHashes.push(e), !0)
            }, a.getHashByIndex = function(e) {
                var t = null;
                return t = "undefined" == typeof e ? a.savedHashes[a.savedHashes.length - 1] : e < 0 ? a.savedHashes[a.savedHashes.length + e] : a.savedHashes[e]
            }, a.discardedHashes = {}, a.discardedStates = {}, a.discardState = function(e, t, n) {
                var i = a.getHashByState(e),
                    r;
                return r = {
                    discardedState: e,
                    backState: n,
                    forwardState: t
                }, a.discardedStates[i] = r, !0
            }, a.discardHash = function(e, t, n) {
                var i = {
                    discardedHash: e,
                    backState: n,
                    forwardState: t
                };
                return a.discardedHashes[e] = i, !0
            }, a.discardedState = function(e) {
                var t = a.getHashByState(e),
                    n;
                return n = a.discardedStates[t] || !1
            }, a.discardedHash = function(e) {
                var t = a.discardedHashes[e] || !1;
                return t
            }, a.recycleState = function(e) {
                var t = a.getHashByState(e);
                return a.discardedState(e) && delete a.discardedStates[t], !0
            }, a.emulated.hashChange && (a.hashChangeInit = function() {
                a.checkerFunction = null;
                var t = "",
                    i, r, s, l;
                return a.isInternetExplorer() ? (i = "historyjs-iframe", r = n.createElement("iframe"), r.setAttribute("id", i), r.style.display = "none", n.body.appendChild(r), r.contentWindow.document.open(), r.contentWindow.document.close(), s = "", l = !1, a.checkerFunction = function() {
                    if (l) return !1;
                    l = !0;
                    var n = a.getHash() || "",
                        i = a.unescapeHash(r.contentWindow.document.location.hash) || "";
                    return n !== t ? (t = n, i !== n && (s = i = n, r.contentWindow.document.open(), r.contentWindow.document.close(), r.contentWindow.document.location.hash = a.escapeHash(n)), a.Adapter.trigger(e, "hashchange")) : i !== s && (s = i, a.setHash(i, !1)), l = !1, !0
                }) : a.checkerFunction = function() {
                    var n = a.getHash();
                    return n !== t && (t = n, a.Adapter.trigger(e, "hashchange")), !0
                }, a.intervalList.push(o(a.checkerFunction, a.options.hashChangeInterval)), !0
            }, a.Adapter.onDomLoad(a.hashChangeInit)), a.emulated.pushState && (a.onHashChange = function(t) {
                var i = t && t.newURL || n.location.href,
                    r = a.getHashByUrl(i),
                    o = null,
                    s = null,
                    l = null,
                    c;
                return a.isLastHash(r) ? (a.busy(!1), !1) : (a.doubleCheckComplete(), a.saveHash(r), r && a.isTraditionalAnchor(r) ? (a.Adapter.trigger(e, "anchorchange"), a.busy(!1), !1) : (o = a.extractState(a.getFullUrl(r || n.location.href, !1), !0), a.isLastSavedState(o) ? (a.busy(!1), !1) : (s = a.getHashByState(o), c = a.discardedState(o), c ? (a.getHashByIndex(-2) === a.getHashByState(c.forwardState) ? a.back(!1) : a.forward(!1), !1) : (a.pushState(o.data, o.title, o.url, !1), !0))))
            }, a.Adapter.bind(e, "hashchange", a.onHashChange), a.pushState = function(t, i, r, o) {
                if (a.getHashByUrl(r)) throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");
                if (o !== !1 && a.busy()) return a.pushQueue({
                    scope: a,
                    callback: a.pushState,
                    args: arguments,
                    queue: o
                }), !1;
                a.busy(!0);
                var s = a.createStateObject(t, i, r),
                    l = a.getHashByState(s),
                    c = a.getState(!1),
                    u = a.getHashByState(c),
                    h = a.getHash();
                return a.storeState(s), a.expectedStateId = s.id, a.recycleState(s), a.setTitle(s), l === u ? (a.busy(!1), !1) : l !== h && l !== a.getShortUrl(n.location.href) ? (a.setHash(l, !1), !1) : (a.saveState(s), a.Adapter.trigger(e, "statechange"), a.busy(!1), !0)
            }, a.replaceState = function(e, t, n, i) {
                if (a.getHashByUrl(n)) throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");
                if (i !== !1 && a.busy()) return a.pushQueue({
                    scope: a,
                    callback: a.replaceState,
                    args: arguments,
                    queue: i
                }), !1;
                a.busy(!0);
                var r = a.createStateObject(e, t, n),
                    o = a.getState(!1),
                    s = a.getStateByIndex(-2);
                return a.discardState(o, r, s), a.pushState(r.data, r.title, r.url, !1), !0
            }), a.emulated.pushState && a.getHash() && !a.emulated.hashChange && a.Adapter.onDomLoad(function() {
                a.Adapter.trigger(e, "hashchange")
            }), void 0)
        }, "undefined" != typeof a.init && a.init()
    }(window),
    function(e, t) {
        "use strict";
        var n = e.console || t,
            i = e.document,
            r = e.navigator,
            o = e.sessionStorage || !1,
            a = e.setTimeout,
            s = e.clearTimeout,
            l = e.setInterval,
            c = e.clearInterval,
            u = e.JSON,
            h = e.alert,
            d = e.History = e.History || {},
            p = e.history;
        if (u.stringify = u.stringify || u.encode, u.parse = u.parse || u.decode, "undefined" != typeof d.init) throw new Error("History.js Core has already been loaded...");
        d.init = function() {
            return "undefined" != typeof d.Adapter && ("undefined" != typeof d.initCore && d.initCore(), "undefined" != typeof d.initHtml4 && d.initHtml4(), !0)
        }, d.initCore = function() {
            if ("undefined" != typeof d.initCore.initialized) return !1;
            if (d.initCore.initialized = !0, d.options = d.options || {}, d.options.hashChangeInterval = d.options.hashChangeInterval || 100, d.options.safariPollInterval = d.options.safariPollInterval || 500, d.options.doubleCheckInterval = d.options.doubleCheckInterval || 500, d.options.storeInterval = d.options.storeInterval || 1e3, d.options.busyDelay = d.options.busyDelay || 250, d.options.debug = d.options.debug || !1, d.options.initialTitle = d.options.initialTitle || i.title, d.intervalList = [], d.clearAllIntervals = function() {
                    var e, t = d.intervalList;
                    if ("undefined" != typeof t && null !== t) {
                        for (e = 0; e < t.length; e++) c(t[e]);
                        d.intervalList = null
                    }
                }, d.debug = function() {
                    (d.options.debug || !1) && d.log.apply(d, arguments)
                }, d.log = function() {
                    var e = "undefined" != typeof n && "undefined" != typeof n.log && "undefined" != typeof n.log.apply,
                        t = i.getElementById("log"),
                        r, o, a, s, l;
                    for (e ? (s = Array.prototype.slice.call(arguments), r = s.shift(), "undefined" != typeof n.debug ? n.debug.apply(n, [r, s]) : n.log.apply(n, [r, s])) : r = "\n" + arguments[0] + "\n", o = 1, a = arguments.length; o < a; ++o) {
                        if (l = arguments[o], "object" == typeof l && "undefined" != typeof u) try {
                            l = u.stringify(l)
                        } catch (e) {}
                        r += "\n" + l + "\n"
                    }
                    return t ? (t.value += r + "\n-----\n", t.scrollTop = t.scrollHeight - t.clientHeight) : e || h(r), !0
                }, d.getInternetExplorerMajorVersion = function() {
                    var e = d.getInternetExplorerMajorVersion.cached = "undefined" != typeof d.getInternetExplorerMajorVersion.cached ? d.getInternetExplorerMajorVersion.cached : function() {
                        for (var e = 3, t = i.createElement("div"), n = t.getElementsByTagName("i");
                            (t.innerHTML = "<!--[if gt IE " + ++e + "]><i></i><![endif]-->") && n[0];);
                        return e > 4 && e
                    }();
                    return e
                }, d.isInternetExplorer = function() {
                    var e = d.isInternetExplorer.cached = "undefined" != typeof d.isInternetExplorer.cached ? d.isInternetExplorer.cached : Boolean(d.getInternetExplorerMajorVersion());
                    return e
                }, d.emulated = {
                    pushState: !Boolean(e.history && e.history.pushState && e.history.replaceState && !/ Mobile\/([1-7][a-z]|(8([abcde]|f(1[0-8]))))/i.test(r.userAgent) && !/AppleWebKit\/5([0-2]|3[0-2])/i.test(r.userAgent)),
                    hashChange: Boolean(!("onhashchange" in e || "onhashchange" in i) || d.isInternetExplorer() && d.getInternetExplorerMajorVersion() < 8)
                }, d.enabled = !d.emulated.pushState, d.bugs = {
                    setHash: Boolean(!d.emulated.pushState && "Apple Computer, Inc." === r.vendor && /AppleWebKit\/5([0-2]|3[0-3])/.test(r.userAgent)),
                    safariPoll: Boolean(!d.emulated.pushState && "Apple Computer, Inc." === r.vendor && /AppleWebKit\/5([0-2]|3[0-3])/.test(r.userAgent)),
                    ieDoubleCheck: Boolean(d.isInternetExplorer() && d.getInternetExplorerMajorVersion() < 8),
                    hashEscape: Boolean(d.isInternetExplorer() && d.getInternetExplorerMajorVersion() < 7)
                }, d.isEmptyObject = function(e) {
                    for (var t in e) return !1;
                    return !0
                }, d.cloneObject = function(e) {
                    var t, n;
                    return e ? (t = u.stringify(e), n = u.parse(t)) : n = {}, n
                }, d.getRootUrl = function() {
                    var e = i.location.protocol + "//" + (i.location.hostname || i.location.host);
                    return i.location.port && (e += ":" + i.location.port), e += "/"
                }, d.getBaseHref = function() {
                    var e = i.getElementsByTagName("base"),
                        t = null,
                        n = "";
                    return 1 === e.length && (t = e[0], n = t.href.replace(/[^\/]+$/, "")), n = n.replace(/\/+$/, ""), n && (n += "/"), n
                }, d.getBaseUrl = function() {
                    var e = d.getBaseHref() || d.getBasePageUrl() || d.getRootUrl();
                    return e
                }, d.getPageUrl = function() {
                    var e = d.getState(!1, !1),
                        t = (e || {}).url || i.location.href,
                        n;
                    return n = t.replace(/\/+$/, "").replace(/[^\/]+$/, function(e, t, n) {
                        return /\./.test(e) ? e : e + "/"
                    })
                }, d.getBasePageUrl = function() {
                    var e = i.location.href.replace(/[#\?].*/, "").replace(/[^\/]+$/, function(e, t, n) {
                        return /[^\/]$/.test(e) ? "" : e
                    }).replace(/\/+$/, "") + "/";
                    return e
                }, d.getFullUrl = function(e, t) {
                    var n = e,
                        i = e.substring(0, 1);
                    return t = "undefined" == typeof t || t, /[a-z]+\:\/\//.test(e) || (n = "/" === i ? d.getRootUrl() + e.replace(/^\/+/, "") : "#" === i ? d.getPageUrl().replace(/#.*/, "") + e : "?" === i ? d.getPageUrl().replace(/[\?#].*/, "") + e : t ? d.getBaseUrl() + e.replace(/^(\.\/)+/, "") : d.getBasePageUrl() + e.replace(/^(\.\/)+/, "")), n.replace(/\#$/, "")
                }, d.getShortUrl = function(e) {
                    var t = e,
                        n = d.getBaseUrl(),
                        i = d.getRootUrl();
                    return d.emulated.pushState && (t = t.replace(n, "")), t = t.replace(i, "/"), d.isTraditionalAnchor(t) && (t = "./" + t), t = t.replace(/^(\.\/)+/g, "./").replace(/\#$/, "")
                }, d.store = {}, d.idToState = d.idToState || {}, d.stateToId = d.stateToId || {}, d.urlToId = d.urlToId || {}, d.storedStates = d.storedStates || [], d.savedStates = d.savedStates || [], d.normalizeStore = function() {
                    d.store.idToState = d.store.idToState || {}, d.store.urlToId = d.store.urlToId || {}, d.store.stateToId = d.store.stateToId || {}
                }, d.getState = function(e, t) {
                    "undefined" == typeof e && (e = !0), "undefined" == typeof t && (t = !0);
                    var n = d.getLastSavedState();
                    return !n && t && (n = d.createStateObject()), e && (n = d.cloneObject(n), n.url = n.cleanUrl || n.url), n
                }, d.getIdByState = function(e) {
                    var t = d.extractId(e.url),
                        n;
                    if (!t)
                        if (n = d.getStateString(e), "undefined" != typeof d.stateToId[n]) t = d.stateToId[n];
                        else if ("undefined" != typeof d.store.stateToId[n]) t = d.store.stateToId[n];
                    else {
                        for (; t = (new Date).getTime() + String(Math.random()).replace(/\D/g, ""), "undefined" != typeof d.idToState[t] || "undefined" != typeof d.store.idToState[t];);
                        d.stateToId[n] = t, d.idToState[t] = e
                    }
                    return t
                }, d.normalizeState = function(e) {
                    var t, n;
                    return e && "object" == typeof e || (e = {}), "undefined" != typeof e.normalized ? e : (e.data && "object" == typeof e.data || (e.data = {}), t = {}, t.normalized = !0, t.title = e.title || "", t.url = d.getFullUrl(d.unescapeString(e.url || i.location.href)), t.hash = d.getShortUrl(t.url), t.data = d.cloneObject(e.data), t.id = d.getIdByState(t), t.cleanUrl = t.url.replace(/\??\&_suid.*/, ""), t.url = t.cleanUrl, n = !d.isEmptyObject(t.data), (t.title || n) && (t.hash = d.getShortUrl(t.url).replace(/\??\&_suid.*/, ""), /\?/.test(t.hash) || (t.hash += "?"), t.hash += "&_suid=" + t.id), t.hashedUrl = d.getFullUrl(t.hash), (d.emulated.pushState || d.bugs.safariPoll) && d.hasUrlDuplicate(t) && (t.url = t.hashedUrl), t)
                }, d.createStateObject = function(e, t, n) {
                    var i = {
                        data: e,
                        title: t,
                        url: n
                    };
                    return i = d.normalizeState(i)
                }, d.getStateById = function(e) {
                    e = String(e);
                    var n = d.idToState[e] || d.store.idToState[e] || t;
                    return n
                }, d.getStateString = function(e) {
                    var t, n, i;
                    return t = d.normalizeState(e), n = {
                        data: t.data,
                        title: e.title,
                        url: e.url
                    }, i = u.stringify(n)
                }, d.getStateId = function(e) {
                    var t, n;
                    return t = d.normalizeState(e), n = t.id
                }, d.getHashByState = function(e) {
                    var t, n;
                    return t = d.normalizeState(e), n = t.hash
                }, d.extractId = function(e) {
                    var t, n, i;
                    return n = /(.*)\&_suid=([0-9]+)$/.exec(e), i = n ? n[1] || e : e, t = n ? String(n[2] || "") : "", t || !1
                }, d.isTraditionalAnchor = function(e) {
                    var t = !/[\/\?\.]/.test(e);
                    return t
                }, d.extractState = function(e, t) {
                    var n = null,
                        i, r;
                    return t = t || !1, i = d.extractId(e), i && (n = d.getStateById(i)), n || (r = d.getFullUrl(e), i = d.getIdByUrl(r) || !1, i && (n = d.getStateById(i)), !n && t && !d.isTraditionalAnchor(e) && (n = d.createStateObject(null, null, r))), n
                }, d.getIdByUrl = function(e) {
                    var n = d.urlToId[e] || d.store.urlToId[e] || t;
                    return n
                }, d.getLastSavedState = function() {
                    return d.savedStates[d.savedStates.length - 1] || t
                }, d.getLastStoredState = function() {
                    return d.storedStates[d.storedStates.length - 1] || t
                }, d.hasUrlDuplicate = function(e) {
                    var t = !1,
                        n;
                    return n = d.extractState(e.url), t = n && n.id !== e.id
                }, d.storeState = function(e) {
                    return d.urlToId[e.url] = e.id, d.storedStates.push(d.cloneObject(e)), e
                }, d.isLastSavedState = function(e) {
                    var t = !1,
                        n, i, r;
                    return d.savedStates.length && (n = e.id, i = d.getLastSavedState(), r = i.id, t = n === r), t
                }, d.saveState = function(e) {
                    return !d.isLastSavedState(e) && (d.savedStates.push(d.cloneObject(e)), !0)
                }, d.getStateByIndex = function(e) {
                    var t = null;
                    return t = "undefined" == typeof e ? d.savedStates[d.savedStates.length - 1] : e < 0 ? d.savedStates[d.savedStates.length + e] : d.savedStates[e]
                }, d.getHash = function() {
                    var e = d.unescapeHash(i.location.hash);
                    return e
                }, d.unescapeString = function(t) {
                    for (var n = t, i; i = e.unescape(n), i !== n;) n = i;
                    return n
                }, d.unescapeHash = function(e) {
                    var t = d.normalizeHash(e);
                    return t = d.unescapeString(t)
                }, d.normalizeHash = function(e) {
                    var t = e.replace(/[^#]*#/, "").replace(/#.*/, "");
                    return t
                }, d.setHash = function(e, t) {
                    var n, r, o;
                    return t !== !1 && d.busy() ? (d.pushQueue({
                        scope: d,
                        callback: d.setHash,
                        args: arguments,
                        queue: t
                    }), !1) : (n = d.escapeHash(e), d.busy(!0), r = d.extractState(e, !0), r && !d.emulated.pushState ? d.pushState(r.data, r.title, r.url, !1) : i.location.hash !== n && (d.bugs.setHash ? (o = d.getPageUrl(), d.pushState(null, null, o + "#" + n, !1)) : i.location.hash = n), d)
                }, d.escapeHash = function(t) {
                    var n = d.normalizeHash(t);
                    return n = e.escape(n), d.bugs.hashEscape || (n = n.replace(/\%21/g, "!").replace(/\%26/g, "&").replace(/\%3D/g, "=").replace(/\%3F/g, "?")), n
                }, d.getHashByUrl = function(e) {
                    var t = String(e).replace(/([^#]*)#?([^#]*)#?(.*)/, "$2");
                    return t = d.unescapeHash(t)
                }, d.setTitle = function(e) {
                    var t = e.title,
                        n;
                    t || (n = d.getStateByIndex(0), n && n.url === e.url && (t = n.title || d.options.initialTitle));
                    try {
                        i.getElementsByTagName("title")[0].innerHTML = t.replace("<", "&lt;").replace(">", "&gt;").replace(" & ", " &amp; ")
                    } catch (e) {}
                    return i.title = t, d
                }, d.queues = [], d.busy = function(e) {
                    if ("undefined" != typeof e ? d.busy.flag = e : "undefined" == typeof d.busy.flag && (d.busy.flag = !1), !d.busy.flag) {
                        s(d.busy.timeout);
                        var t = function() {
                            var e, n, i;
                            if (!d.busy.flag)
                                for (e = d.queues.length - 1; e >= 0; --e) n = d.queues[e], 0 !== n.length && (i = n.shift(), d.fireQueueItem(i), d.busy.timeout = a(t, d.options.busyDelay))
                        };
                        d.busy.timeout = a(t, d.options.busyDelay)
                    }
                    return d.busy.flag
                }, d.busy.flag = !1, d.fireQueueItem = function(e) {
                    return e.callback.apply(e.scope || d, e.args || [])
                }, d.pushQueue = function(e) {
                    return d.queues[e.queue || 0] = d.queues[e.queue || 0] || [], d.queues[e.queue || 0].push(e), d
                }, d.queue = function(e, t) {
                    return "function" == typeof e && (e = {
                        callback: e
                    }), "undefined" != typeof t && (e.queue = t), d.busy() ? d.pushQueue(e) : d.fireQueueItem(e), d
                }, d.clearQueue = function() {
                    return d.busy.flag = !1, d.queues = [], d
                }, d.stateChanged = !1, d.doubleChecker = !1, d.doubleCheckComplete = function() {
                    return d.stateChanged = !0, d.doubleCheckClear(), d
                }, d.doubleCheckClear = function() {
                    return d.doubleChecker && (s(d.doubleChecker), d.doubleChecker = !1), d
                }, d.doubleCheck = function(e) {
                    return d.stateChanged = !1, d.doubleCheckClear(), d.bugs.ieDoubleCheck && (d.doubleChecker = a(function() {
                        return d.doubleCheckClear(), d.stateChanged || e(), !0
                    }, d.options.doubleCheckInterval)), d
                }, d.safariStatePoll = function() {
                    var t = d.extractState(i.location.href),
                        n;
                    if (!d.isLastSavedState(t)) return n = t, n || (n = d.createStateObject()), d.Adapter.trigger(e, "popstate"), d
                }, d.back = function(e) {
                    return e !== !1 && d.busy() ? (d.pushQueue({
                        scope: d,
                        callback: d.back,
                        args: arguments,
                        queue: e
                    }), !1) : (d.busy(!0), d.doubleCheck(function() {
                        d.back(!1)
                    }), p.go(-1), !0)
                }, d.forward = function(e) {
                    return e !== !1 && d.busy() ? (d.pushQueue({
                        scope: d,
                        callback: d.forward,
                        args: arguments,
                        queue: e
                    }), !1) : (d.busy(!0), d.doubleCheck(function() {
                        d.forward(!1)
                    }), p.go(1), !0)
                }, d.go = function(e, t) {
                    var n;
                    if (e > 0)
                        for (n = 1; n <= e; ++n) d.forward(t);
                    else {
                        if (!(e < 0)) throw new Error("History.go: History.go requires a positive or negative integer passed.");
                        for (n = -1; n >= e; --n) d.back(t)
                    }
                    return d
                }, d.emulated.pushState) {
                var f = function() {};
                d.pushState = d.pushState || f, d.replaceState = d.replaceState || f
            } else d.onPopState = function(t, n) {
                var r = !1,
                    o = !1,
                    a, s;
                return d.doubleCheckComplete(), a = d.getHash(), a ? (s = d.extractState(a || i.location.href, !0), s ? d.replaceState(s.data, s.title, s.url, !1) : (d.Adapter.trigger(e, "anchorchange"), d.busy(!1)), d.expectedStateId = !1, !1) : (r = d.Adapter.extractEventData("state", t, n) || !1, o = r ? d.getStateById(r) : d.expectedStateId ? d.getStateById(d.expectedStateId) : d.extractState(i.location.href), o || (o = d.createStateObject(null, null, i.location.href)), d.expectedStateId = !1, d.isLastSavedState(o) ? (d.busy(!1), !1) : (d.storeState(o), d.saveState(o), d.setTitle(o), d.Adapter.trigger(e, "statechange"), d.busy(!1), !0))
            }, d.Adapter.bind(e, "popstate", d.onPopState), d.pushState = function(t, n, i, r) {
                if (d.getHashByUrl(i) && d.emulated.pushState) throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");
                if (r !== !1 && d.busy()) return d.pushQueue({
                    scope: d,
                    callback: d.pushState,
                    args: arguments,
                    queue: r
                }), !1;
                d.busy(!0);
                var o = d.createStateObject(t, n, i);
                return d.isLastSavedState(o) ? d.busy(!1) : (d.storeState(o), d.expectedStateId = o.id, p.pushState(o.id, o.title, o.url), d.Adapter.trigger(e, "popstate")), !0
            }, d.replaceState = function(t, n, i, r) {
                if (d.getHashByUrl(i) && d.emulated.pushState) throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");
                if (r !== !1 && d.busy()) return d.pushQueue({
                    scope: d,
                    callback: d.replaceState,
                    args: arguments,
                    queue: r
                }), !1;
                d.busy(!0);
                var o = d.createStateObject(t, n, i);
                return d.isLastSavedState(o) ? d.busy(!1) : (d.storeState(o), d.expectedStateId = o.id, p.replaceState(o.id, o.title, o.url), d.Adapter.trigger(e, "popstate")), !0
            };
            if (o) {
                try {
                    d.store = u.parse(o.getItem("History.store")) || {}
                } catch (e) {
                    d.store = {}
                }
                d.normalizeStore()
            } else d.store = {}, d.normalizeStore();
            d.Adapter.bind(e, "beforeunload", d.clearAllIntervals), d.Adapter.bind(e, "unload", d.clearAllIntervals), d.saveState(d.storeState(d.extractState(i.location.href, !0))), o && (d.onUnload = function() {
                var e, t;
                try {
                    e = u.parse(o.getItem("History.store")) || {}
                } catch (t) {
                    e = {}
                }
                e.idToState = e.idToState || {}, e.urlToId = e.urlToId || {}, e.stateToId = e.stateToId || {};
                for (t in d.idToState) d.idToState.hasOwnProperty(t) && (e.idToState[t] = d.idToState[t]);
                for (t in d.urlToId) d.urlToId.hasOwnProperty(t) && (e.urlToId[t] = d.urlToId[t]);
                for (t in d.stateToId) d.stateToId.hasOwnProperty(t) && (e.stateToId[t] = d.stateToId[t]);
                d.store = e, d.normalizeStore(), o.setItem("History.store", u.stringify(e))
            }, d.intervalList.push(l(d.onUnload, d.options.storeInterval)), d.Adapter.bind(e, "beforeunload", d.onUnload), d.Adapter.bind(e, "unload", d.onUnload)), d.emulated.pushState || (d.bugs.safariPoll && d.intervalList.push(l(d.safariStatePoll, d.options.safariPollInterval)), "Apple Computer, Inc." !== r.vendor && "Mozilla" !== (r.appCodeName || "") || (d.Adapter.bind(e, "hashchange", function() {
                d.Adapter.trigger(e, "popstate")
            }), d.getHash() && d.Adapter.onDomLoad(function() {
                d.Adapter.trigger(e, "hashchange")
            })))
        }, d.init()
    }(window), $.fn.bindFirst = function(e, t) {
        this.on(e, t), this.each(function() {
            var t = $._data(this, "events")[e.split(".")[0]],
                n = t.pop();
            t.splice(0, 0, n)
        })
    },
    function($, e, t) {
        var n = "lazyLoad",
            i = {
                maxConnections: 6,
                onLoaded: !1,
                removeClass: !1,
                limit: !1,
                onLoadedForEach: !1,
                waitForAllLoaded: !0,
                loadMobile: !1,
                forceBG: !1
            };
        $.fn[n] = function(e) {
            var t, n, r, o, a, s, l;
            return o = $.extend({}, i, e), t = [], n = [], r = [], s = 0, this.each(function(e, n) {
                var i, r, a;
                (o.limit === !1 || e < o.limit) && (n = $(n), o.loadMobile ? (i = n.data("mobile-src"), void 0 != i && "" != i || (i = n.data("src"))) : i = n.data("src"), a = n.attr("class"), o.removeClass !== !1 && (a = $.trim(a.replace(o.removeClass, ""))), t.push({
                    dom: n,
                    img: $('<img class="' + a + ' loadedImg" />'),
                    src: i
                }))
            }), l = t.length, a = function() {
                var e;
                t.length <= 0 ? (o.waitForAllLoaded && $(r).each(function(e, t) {
                    1 == t.dom.data("bg") || o.forceBG ? t.dom.css({
                        backgroundSize: t.dom.data("fill-type"),
                        backgroundImage: "url(" + t.src + ")"
                    }) : t.dom.append(t.img)
                }), o.onLoadedForEach || o.onLoaded === !1 || o.onLoaded($(n), !0)) : s < o.maxConnections && (e = t.shift(), e.img.on("load", function() {
                    r.push(e), n.push(e.dom), o.waitForAllLoaded || (1 == e.dom.data("bg") || o.forceBG ? e.dom.css({
                        backgroundSize: e.dom.data("fill-type"),
                        backgroundImage: "url(" + e.src + ")"
                    }) : e.dom.append(e.img)), o.onLoadedForEach && o.onLoaded !== !1 && o.onLoaded(e.dom, n.length == l), a()
                }).attr("src", e.src))
            }, a(), this
        }
    }(jQuery, window, document);
var jumpMarks = function(e) {
    function t() {
        return 0 != e.find("#article-index").length && (u = $(window), y = 0, c(), n(), i(), r(), a(0), s(), void o())
    }

    function n() {
        h = e.find(".article-container"), d = e.find("#article-index ul li a"), p = e.find(".scrollable-content")
    }

    function i() {
        E = [], h.each(function(e) {
            var t = $(this),
                n = $('#article-index ul li a[href="#' + t.attr("id") + '"]').data("number");
            E[e] = n
        })
    }

    function r() {
        f = u.height(), m = f / 2, v = [], g = [], h.each(function(e) {
            var t = $(this);
            v[e] = t.height(), g[e] = t.position().top
        })
    }

    function o() {
        var t, n, i;
        t = n = i = !1;
        var o = function() {
            n && r(), (t || n) && s(), i || requestAnimationFrame(o)
        };
        o(), p.on("scroll", function() {
            t = !0
        });
        var a = function() {
            n = !0
        };
        u.on("resize", a), d.on("click", function(e) {
            e.preventDefault(), $(this).hasClass("current") || l($(this.hash))
        }), e.on("kill", function() {
            i = !0, p.off("scroll"), u.off("resize", a), d.off("click")
        })
    }

    function a(e) {
        var t = $(d[e]);
        d.removeClass("current"), t.addClass("current")
    }

    function s() {
        var e = p.scrollTop(),
            t = e + f;
        h.each(function(n) {
            var i = $(this),
                r = E[n],
                o = g[n],
                s = v[n],
                l = e - o + m,
                c = t - (o + s) - m;
            l > 0 && c < 0 && n != y && (y = n, a(n))
        })
    }

    function l(e) {
        $(".scrollable-content").stop().animate({
            scrollTop: e.offset().top - 100
        }, 600)
    }

    function c() {
        window.requestAnimationFrame || (window.requestAnimationFrame = function() {
            return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e, t) {
                window.setTimeout(e, 1e3 / 60)
            }
        }())
    }
    var u, h, d, p, f, m, E, g, v, y;
    t()
};
! function($, e, t, n) {
    $.pageFlow = function(t) {
        function i() {
            A = e.History, P = A.getState(), k = e.location.hostname, C.templates = r(C.templates), L = C.currentSite, D = null, o(), T(), y(), u(L, v(L)), e.openAppURL = function(t) {
                S(e.siteURL + t)
            }
        }

        function r(e) {
            var t;
            for (t in e) "object" == typeof e[t] && (e[t] = r(e[t])), "string" == typeof e[t] && (e[t] = e[t].replace(/\|o\|/g, "<"), e[t] = e[t].replace(/\|c\|/g, ">"));
            return e
        }

        function o(e) {
            e == n && (I = $(C.containerSelector), e = I), N = e.find(C.linkSelector)
        }

        function a() {
            A.Adapter.bind(e, "statechange", function() {
                P = A.getState();
                var e = x(P.url);
                O = e, s()
            })
        }

        function s() {
            var e, t;
            return t = !1, !F && O && (F = !0, D = L, L = O, O = !1, t = !0, e = v(L), e.dom != n && "vision" != L[0] && "claim" != L[0] && "modify" != L[0] && "save" != L[0] && "explore" != L[0] ? p(L, e) : e.json != n ? c(L, e) : l(L, e)), t
        }

        function l(t, n) {
            j = !0, C.onBeforeLoad(function() {
                $.ajax({
                    dataType: "json",
                    url: w(t),
                    success: function(e) {
                        n.json = e, c(t, n)
                    },
                    error: function(n) {
                        e.location = R(t)
                    }
                })
            })
        }

        function c(e, t) {
            var n, i, r;
            r = "";
            for (n in t.json) i = g(n), r += Mustache.render(i, t.json[n]);
            t.dom = $(r), u(e, t)
        }

        function u(e, t) {
            var n = t.dom.find(".lazyRequired:not(.loaded)").length > 0 || V;
            n && !j ? (j = !0, C.onBeforeLoad(function() {
                h(t.dom, function() {
                    d(e, t)
                })
            })) : n && j ? h(t.dom, function() {
                d(e, t)
            }) : d(e, t)
        }

        function h(e, t) {
            var n;
            n = V ? $(".lazyBackground.lazyRequired:not(.loaded)") : e.find(".lazyBackground.lazyRequired:not(.loaded)");
            var i = 0 == n.length;
            n.lazyLoad({
                forceBG: !0,
                onLoaded: function(e) {
                    i = !0;
                    var r = $(e);
                    n.addClass("loaded"), t()
                }
            })
        }

        function d(e, t) {
            j ? C.onContentLoaded(function() {
                p(e, t)
            }) : p(e, t)
        }

        function p(e, t) {
            var n, i, r;
            n = V, r = null, V ? (i = null, V = !1, C.onBeforeContentAdded(r, null, t.dom)) : (r = m(D, e), i = I, C.onBeforeContentAdded(r, i, t.dom), $("body").append(t.dom)), o(t.dom), T(), setTimeout(function() {
                C.onContentAdded(r, i, t.dom, function() {
                    var e = !1;
                    n || (I.find(".lazyVimeo").removeClass("loaded").css({
                        "background-image": "",
                        "background-color": ""
                    }).html(""), I.remove(), I = t.dom), j = !1, F = !1, e = s(), e || f()
                })
            }, 35)
        }

        function f() {
            I.find(".lazyImage:not(.loaded)").lazyLoad({
                waitForAllLoaded: !1,
                removeClass: "lazyImage img",
                onLoadedForEach: !0,
                onLoaded: function(e) {
                    var t = $(e);
                    t.each(function() {
                        var e = $(this),
                            t = $(this).find("img");
                        e.addClass("loaded"), t.css({
                            opacity: 0
                        }).velocity({
                            properties: {
                                opacity: 1
                            },
                            options: {
                                duration: 500,
                                complete: function() {
                                    e.css({
                                        backgroundImage: "none",
                                        backgroundColor: "transparent"
                                    })
                                }
                            }
                        })
                    })
                }
            })
        }

        function m(e, t) {
            var n, i;
            return n = E(e), i = E(t), n[0] != i[0] ? n[0] < i[0] ? "x+" : "x-" : 2 == n.length && 1 == i.length ? "y-" : 1 == n.length && 2 == i.length ? "y+" : n[1] < i[1] ? "y+" : "y-"
        }

        function E(e) {
            var t, n = [];
            return 0 == e.length && (e[0] = ""), t = v([e[0]]), n[0] = t.index, 2 == e.length && (t = v(e), n[1] = t.index), n
        }

        function g(e) {
            return e.indexOf("--") !== -1 ? (e = e.split("--"), C.templates[e[0]][e[1]]) : C.templates[e]
        }

        function v(e) {
            return 0 == e.length ? C.sitemap[""] : 1 == e.length ? C.sitemap[e[0]] : 2 == e.length ? C.sitemap[e[0]].sites[e[1]] : void 0
        }

        function y() {
            var e = v(L);
            e.dom = I
        }

        function T() {
            N.on("click", function(e) {
                return S($(this).attr("href")), e.preventDefault(), !1
            })
        }

        function x(t) {
            var n, i = t + "",
                r = [];
            for (t = t.replace(C.baseURL + "/", ""), t = t.split("/"), n = 0; n < t.length; n++) "" != t[n] && t[n].indexOf("#") == -1 && t[n].indexOf("?") == -1 ? r.push(t[n]) : 0 == t[n].indexOf("?id=") && (e.jVisionID = t[n].split("?id=").join(""));
            return r
        }

        function R(e) {
            var t = C.baseURL,
                n;
            for (n in e) t += "/" + e[n];
            return t + "/"
        }

        function w(t) {
            return "1" == e.isLive ? R(t) + "data.json" : R(t) + "?json=true"
        }

        function b(e) {
            var t;
            if (L.length != e.length) return !1;
            for (t in L)
                if (L[t] != e[t]) return !1;
            return !0
        }

        function H(e) {
            return 1 == e.length ? C.sitemap[e[0]].title : 2 == e.length ? C.sitemap[e[0]].sites[e[1]].title : "Loading..."
        }

        function S(e) {
            "/" != e.slice(-1) && (e += "/");
            var t = x(e);
            b(t) && "vision" != t[0] && "claim" != t[0] && "modify" != t[0] || (O = t, s())
        }
        var _ = this,
            M = {
                containerSelector: ".app-container",
                linkSelector: ".link-internal",
                sitemap: {},
                currentSite: {},
                templates: {},
                baseURL: "",
                onBeforeLoad: function(e) {
                    e()
                },
                onContentLoaded: function(e) {
                    e()
                },
                onBeforeContentAdded: function(e) {},
                onContentAdded: function(e, t) {
                    t()
                }
            },
            C = $.extend({}, M, t),
            A, P, k, L, D, O = !1,
            F = !1,
            j = !1,
            V = !0,
            I, N;
        return i(), this
    }
}(jQuery, window, document);
var animEndEventNames = {
        WebkitAnimation: "webkitAnimationEnd",
        OAnimation: "oAnimationEnd",
        msAnimation: "MSAnimationEnd",
        animation: "animationend"
    },
    PageTransitions = {
        animEndEventName: animEndEventNames[Modernizr.prefixed("animation")],
        preparePageTransition: function(e, t, n) {
            n.css("opacity", 0)
        },
        extecutePageTransition: function(e, t, n, i) {
            var r, o;
            t.velocity({
                properties: {
                    opacity: 0
                },
                options: {
                    duration: 300
                }
            }), n.velocity({
                properties: {
                    opacity: 1
                },
                options: {
                    duration: 300,
                    complete: function() {
                        i()
                    }
                }
            })
        },
        getAniClass: function(e) {
            var t;
            switch (e) {
                case "y+":
                    t = "pt-page-moveToLeftEasing", inClass = "pt-page-moveFromRight", beforeOutClass = "pt-page-ontop", beforeInClass = "pt-page-before-moveFromRight";
                    break;
                case "y-":
                    t = "pt-page-moveToRightEasing", inClass = "pt-page-moveFromLeft", beforeOutClass = "pt-page-ontop", beforeInClass = "pt-page-before-moveFromLeft";
                    break;
                case "x+":
                    t = "pt-page-moveToTopEasing", inClass = "pt-page-moveFromBottom", beforeOutClass = "pt-page-ontop", beforeInClass = "pt-page-before-moveFromBottom";
                    break;
                case "x-":
                    t = "pt-page-moveToBottomEasing", inClass = "pt-page-moveFromTop", beforeOutClass = "pt-page-ontop", beforeInClass = "pt-page-before-moveFromTop"
            }
            return {
                inClass: inClass,
                beforeInClass: beforeInClass,
                outClass: t,
                beforeOutClass: beforeOutClass
            }
        }
    };
! function(e, t) {
    "use strict";

    function n(e) {
        return e.replace(/[a-zA-Z]/g, function(e) {
            return String.fromCharCode(("Z" >= e ? 90 : 122) >= (e = e.charCodeAt(0) + 13) ? e : e - 26)
        })
    }

    function i(e) {
        var t = e.getAttribute("data-enc-email");
        return t ? (t = t.replace(/\[at\]/g, "@"), t = n(t)) : null
    }

    function r(e) {
        var t = e.getAttribute("title"),
            n = i(e);
        t && n && (t = t.replace("{{email}}", n), e.setAttribute("title", t))
    }

    function o(e) {
        var t = i(e);
        t && e.setAttribute("value", t)
    }

    function a(t) {
        var n = i(t);
        n && (e.location.href = "mailto:" + n)
    }
    t(function(e) {
        e("body").delegate("a[data-enc-email]", "click", function() {
            a(this)
        }), e("a[data-enc-email]").each(function() {
            r(this)
        }), e("input[data-enc-email]").each(function() {
            o(this)
        })
    })
}(window, jQuery);
var THREE = {
    REVISION: "73"
};
"function" == typeof define && define.amd ? define("three", THREE) : "undefined" != typeof exports && "undefined" != typeof module && (module.exports = THREE), void 0 !== self.requestAnimationFrame && void 0 !== self.cancelAnimationFrame || ! function() {
        for (var e = 0, t = ["ms", "moz", "webkit", "o"], n = 0; n < t.length && !self.requestAnimationFrame; ++n) self.requestAnimationFrame = self[t[n] + "RequestAnimationFrame"], self.cancelAnimationFrame = self[t[n] + "CancelAnimationFrame"] || self[t[n] + "CancelRequestAnimationFrame"];
        void 0 === self.requestAnimationFrame && void 0 !== self.setTimeout && (self.requestAnimationFrame = function(t) {
            var n = Date.now(),
                i = Math.max(0, 16 - (n - e)),
                r = self.setTimeout(function() {
                    t(n + i)
                }, i);
            return e = n + i, r
        }), void 0 === self.cancelAnimationFrame && void 0 !== self.clearTimeout && (self.cancelAnimationFrame = function(e) {
            self.clearTimeout(e)
        })
    }(), void 0 === self.performance && (self.performance = {}), void 0 === self.performance.now && ! function() {
        var e = Date.now();
        self.performance.now = function() {
            return Date.now() - e
        }
    }(), void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), void 0 === Math.sign && (Math.sign = function(e) {
        return e < 0 ? -1 : e > 0 ? 1 : +e
    }), void 0 === Function.prototype.name && void 0 !== Object.defineProperty && Object.defineProperty(Function.prototype, "name", {
        get: function() {
            return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]
        }
    }), THREE.MOUSE = {
        LEFT: 0,
        MIDDLE: 1,
        RIGHT: 2
    }, THREE.CullFaceNone = 0, THREE.CullFaceBack = 1, THREE.CullFaceFront = 2, THREE.CullFaceFrontBack = 3, THREE.FrontFaceDirectionCW = 0, THREE.FrontFaceDirectionCCW = 1, THREE.BasicShadowMap = 0, THREE.PCFShadowMap = 1, THREE.PCFSoftShadowMap = 2, THREE.FrontSide = 0, THREE.BackSide = 1, THREE.DoubleSide = 2, THREE.FlatShading = 1, THREE.SmoothShading = 2, THREE.NoColors = 0, THREE.FaceColors = 1, THREE.VertexColors = 2, THREE.NoBlending = 0, THREE.NormalBlending = 1, THREE.AdditiveBlending = 2, THREE.SubtractiveBlending = 3, THREE.MultiplyBlending = 4, THREE.CustomBlending = 5, THREE.AddEquation = 100, THREE.SubtractEquation = 101, THREE.ReverseSubtractEquation = 102, THREE.MinEquation = 103, THREE.MaxEquation = 104, THREE.ZeroFactor = 200, THREE.OneFactor = 201, THREE.SrcColorFactor = 202, THREE.OneMinusSrcColorFactor = 203, THREE.SrcAlphaFactor = 204, THREE.OneMinusSrcAlphaFactor = 205, THREE.DstAlphaFactor = 206, THREE.OneMinusDstAlphaFactor = 207, THREE.DstColorFactor = 208, THREE.OneMinusDstColorFactor = 209, THREE.SrcAlphaSaturateFactor = 210, THREE.NeverDepth = 0, THREE.AlwaysDepth = 1, THREE.LessDepth = 2, THREE.LessEqualDepth = 3, THREE.EqualDepth = 4, THREE.GreaterEqualDepth = 5, THREE.GreaterDepth = 6, THREE.NotEqualDepth = 7, THREE.MultiplyOperation = 0, THREE.MixOperation = 1, THREE.AddOperation = 2, THREE.UVMapping = 300, THREE.CubeReflectionMapping = 301, THREE.CubeRefractionMapping = 302, THREE.EquirectangularReflectionMapping = 303, THREE.EquirectangularRefractionMapping = 304, THREE.SphericalReflectionMapping = 305, THREE.RepeatWrapping = 1e3, THREE.ClampToEdgeWrapping = 1001, THREE.MirroredRepeatWrapping = 1002, THREE.NearestFilter = 1003, THREE.NearestMipMapNearestFilter = 1004, THREE.NearestMipMapLinearFilter = 1005, THREE.LinearFilter = 1006, THREE.LinearMipMapNearestFilter = 1007, THREE.LinearMipMapLinearFilter = 1008, THREE.UnsignedByteType = 1009, THREE.ByteType = 1010, THREE.ShortType = 1011, THREE.UnsignedShortType = 1012, THREE.IntType = 1013, THREE.UnsignedIntType = 1014, THREE.FloatType = 1015, THREE.HalfFloatType = 1025, THREE.UnsignedShort4444Type = 1016, THREE.UnsignedShort5551Type = 1017, THREE.UnsignedShort565Type = 1018, THREE.AlphaFormat = 1019, THREE.RGBFormat = 1020, THREE.RGBAFormat = 1021, THREE.LuminanceFormat = 1022, THREE.LuminanceAlphaFormat = 1023, THREE.RGBEFormat = THREE.RGBAFormat, THREE.RGB_S3TC_DXT1_Format = 2001, THREE.RGBA_S3TC_DXT1_Format = 2002, THREE.RGBA_S3TC_DXT3_Format = 2003, THREE.RGBA_S3TC_DXT5_Format = 2004, THREE.RGB_PVRTC_4BPPV1_Format = 2100, THREE.RGB_PVRTC_2BPPV1_Format = 2101, THREE.RGBA_PVRTC_4BPPV1_Format = 2102, THREE.RGBA_PVRTC_2BPPV1_Format = 2103, THREE.LoopOnce = 2200, THREE.LoopRepeat = 2201, THREE.LoopPingPong = 2202, THREE.Projector = function() {
        console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."), this.projectVector = function(e, t) {
            console.warn("THREE.Projector: .projectVector() is now vector.project()."), e.project(t)
        }, this.unprojectVector = function(e, t) {
            console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), e.unproject(t)
        }, this.pickingRay = function(e, t) {
            console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
        }
    }, THREE.CanvasRenderer = function() {
        console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"), this.domElement = document.createElement("canvas"), this.clear = function() {}, this.render = function() {}, this.setClearColor = function() {}, this.setSize = function() {}
    }, THREE.Color = function(e) {
        return 3 === arguments.length ? this.fromArray(arguments) : this.set(e)
    }, THREE.Color.prototype = {
        constructor: THREE.Color,
        r: 1,
        g: 1,
        b: 1,
        set: function(e) {
            return e instanceof THREE.Color ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e), this
        },
        setHex: function(e) {
            return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (255 & e) / 255, this
        },
        setRGB: function(e, t, n) {
            return this.r = e, this.g = t, this.b = n, this
        },
        setHSL: function() {
            function e(e, t, n) {
                return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e
            }
            return function(t, n, i) {
                if (t = THREE.Math.euclideanModulo(t, 1), n = THREE.Math.clamp(n, 0, 1), i = THREE.Math.clamp(i, 0, 1), 0 === n) this.r = this.g = this.b = i;
                else {
                    var r = i <= .5 ? i * (1 + n) : i + n - i * n,
                        o = 2 * i - r;
                    this.r = e(o, r, t + 1 / 3), this.g = e(o, r, t), this.b = e(o, r, t - 1 / 3)
                }
                return this
            }
        }(),
        setStyle: function(e) {
            function t(t) {
                void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
            }
            var n;
            if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)) {
                var i, r = n[1],
                    o = n[2];
                switch (r) {
                    case "rgb":
                    case "rgba":
                        if (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(i[1], 10)) / 255, this.g = Math.min(255, parseInt(i[2], 10)) / 255, this.b = Math.min(255, parseInt(i[3], 10)) / 255, t(i[5]), this;
                        if (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(i[1], 10)) / 100, this.g = Math.min(100, parseInt(i[2], 10)) / 100, this.b = Math.min(100, parseInt(i[3], 10)) / 100, t(i[5]), this;
                        break;
                    case "hsl":
                    case "hsla":
                        if (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) {
                            var a = parseFloat(i[1]) / 360,
                                s = parseInt(i[2], 10) / 100,
                                l = parseInt(i[3], 10) / 100;
                            return t(i[5]), this.setHSL(a, s, l)
                        }
                }
            } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(e)) {
                var c = n[1],
                    u = c.length;
                if (3 === u) return this.r = parseInt(c.charAt(0) + c.charAt(0), 16) / 255, this.g = parseInt(c.charAt(1) + c.charAt(1), 16) / 255, this.b = parseInt(c.charAt(2) + c.charAt(2), 16) / 255, this;
                if (6 === u) return this.r = parseInt(c.charAt(0) + c.charAt(1), 16) / 255, this.g = parseInt(c.charAt(2) + c.charAt(3), 16) / 255, this.b = parseInt(c.charAt(4) + c.charAt(5), 16) / 255, this
            }
            if (e && e.length > 0) {
                var c = THREE.ColorKeywords[e];
                void 0 !== c ? this.setHex(c) : console.warn("THREE.Color: Unknown color " + e)
            }
            return this
        },
        clone: function() {
            return new this.constructor(this.r, this.g, this.b)
        },
        copy: function(e) {
            return this.r = e.r, this.g = e.g, this.b = e.b, this
        },
        copyGammaToLinear: function(e, t) {
            return void 0 === t && (t = 2), this.r = Math.pow(e.r, t), this.g = Math.pow(e.g, t), this.b = Math.pow(e.b, t), this
        },
        copyLinearToGamma: function(e, t) {
            void 0 === t && (t = 2);
            var n = t > 0 ? 1 / t : 1;
            return this.r = Math.pow(e.r, n), this.g = Math.pow(e.g, n), this.b = Math.pow(e.b, n), this
        },
        convertGammaToLinear: function() {
            var e = this.r,
                t = this.g,
                n = this.b;
            return this.r = e * e, this.g = t * t, this.b = n * n, this
        },
        convertLinearToGamma: function() {
            return this.r = Math.sqrt(this.r), this.g = Math.sqrt(this.g), this.b = Math.sqrt(this.b), this
        },
        getHex: function() {
            return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
        },
        getHexString: function() {
            return ("000000" + this.getHex().toString(16)).slice(-6)
        },
        getHSL: function(e) {
            var t = e || {
                    h: 0,
                    s: 0,
                    l: 0
                },
                n = this.r,
                i = this.g,
                r = this.b,
                o = Math.max(n, i, r),
                a = Math.min(n, i, r),
                s, l, c = (a + o) / 2;
            if (a === o) s = 0, l = 0;
            else {
                var u = o - a;
                switch (l = c <= .5 ? u / (o + a) : u / (2 - o - a), o) {
                    case n:
                        s = (i - r) / u + (i < r ? 6 : 0);
                        break;
                    case i:
                        s = (r - n) / u + 2;
                        break;
                    case r:
                        s = (n - i) / u + 4
                }
                s /= 6
            }
            return t.h = s, t.s = l, t.l = c, t
        },
        getStyle: function() {
            return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
        },
        offsetHSL: function(e, t, n) {
            var i = this.getHSL();
            return i.h += e, i.s += t, i.l += n, this.setHSL(i.h, i.s, i.l), this
        },
        add: function(e) {
            return this.r += e.r, this.g += e.g, this.b += e.b, this
        },
        addColors: function(e, t) {
            return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this
        },
        addScalar: function(e) {
            return this.r += e, this.g += e, this.b += e, this
        },
        multiply: function(e) {
            return this.r *= e.r, this.g *= e.g, this.b *= e.b, this
        },
        multiplyScalar: function(e) {
            return this.r *= e, this.g *= e, this.b *= e, this
        },
        lerp: function(e, t) {
            return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this
        },
        equals: function(e) {
            return e.r === this.r && e.g === this.g && e.b === this.b
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0), this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e
        }
    }, THREE.ColorKeywords = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    }, THREE.Quaternion = function(e, t, n, i) {
        this._x = e || 0, this._y = t || 0, this._z = n || 0, this._w = void 0 !== i ? i : 1
    }, THREE.Quaternion.prototype = {
        constructor: THREE.Quaternion,
        get x() {
            return this._x
        },
        set x(e) {
            this._x = e, this.onChangeCallback()
        },
        get y() {
            return this._y
        },
        set y(e) {
            this._y = e, this.onChangeCallback()
        },
        get z() {
            return this._z
        },
        set z(e) {
            this._z = e, this.onChangeCallback()
        },
        get w() {
            return this._w
        },
        set w(e) {
            this._w = e, this.onChangeCallback()
        },
        set: function(e, t, n, i) {
            return this._x = e, this._y = t, this._z = n, this._w = i, this.onChangeCallback(), this
        },
        clone: function() {
            return new this.constructor(this._x, this._y, this._z, this._w)
        },
        copy: function(e) {
            return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this.onChangeCallback(), this
        },
        setFromEuler: function(e, t) {
            if (e instanceof THREE.Euler == !1) throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
            var n = Math.cos(e._x / 2),
                i = Math.cos(e._y / 2),
                r = Math.cos(e._z / 2),
                o = Math.sin(e._x / 2),
                a = Math.sin(e._y / 2),
                s = Math.sin(e._z / 2),
                l = e.order;
            return "XYZ" === l ? (this._x = o * i * r + n * a * s, this._y = n * a * r - o * i * s, this._z = n * i * s + o * a * r, this._w = n * i * r - o * a * s) : "YXZ" === l ? (this._x = o * i * r + n * a * s, this._y = n * a * r - o * i * s, this._z = n * i * s - o * a * r, this._w = n * i * r + o * a * s) : "ZXY" === l ? (this._x = o * i * r - n * a * s, this._y = n * a * r + o * i * s, this._z = n * i * s + o * a * r, this._w = n * i * r - o * a * s) : "ZYX" === l ? (this._x = o * i * r - n * a * s, this._y = n * a * r + o * i * s, this._z = n * i * s - o * a * r, this._w = n * i * r + o * a * s) : "YZX" === l ? (this._x = o * i * r + n * a * s, this._y = n * a * r + o * i * s, this._z = n * i * s - o * a * r, this._w = n * i * r - o * a * s) : "XZY" === l && (this._x = o * i * r - n * a * s, this._y = n * a * r - o * i * s, this._z = n * i * s + o * a * r, this._w = n * i * r + o * a * s), t !== !1 && this.onChangeCallback(), this
        },
        setFromAxisAngle: function(e, t) {
            var n = t / 2,
                i = Math.sin(n);
            return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(n), this.onChangeCallback(), this
        },
        setFromRotationMatrix: function(e) {
            var t = e.elements,
                n = t[0],
                i = t[4],
                r = t[8],
                o = t[1],
                a = t[5],
                s = t[9],
                l = t[2],
                c = t[6],
                u = t[10],
                h = n + a + u,
                d;
            return h > 0 ? (d = .5 / Math.sqrt(h + 1), this._w = .25 / d, this._x = (c - s) * d, this._y = (r - l) * d, this._z = (o - i) * d) : n > a && n > u ? (d = 2 * Math.sqrt(1 + n - a - u), this._w = (c - s) / d, this._x = .25 * d, this._y = (i + o) / d, this._z = (r + l) / d) : a > u ? (d = 2 * Math.sqrt(1 + a - n - u), this._w = (r - l) / d, this._x = (i + o) / d, this._y = .25 * d, this._z = (s + c) / d) : (d = 2 * Math.sqrt(1 + u - n - a), this._w = (o - i) / d, this._x = (r + l) / d, this._y = (s + c) / d, this._z = .25 * d), this.onChangeCallback(), this
        },
        setFromUnitVectors: function() {
            var e, t, n = 1e-6;
            return function(i, r) {
                return void 0 === e && (e = new THREE.Vector3), t = i.dot(r) + 1, t < n ? (t = 0, Math.abs(i.x) > Math.abs(i.z) ? e.set(-i.y, i.x, 0) : e.set(0, -i.z, i.y)) : e.crossVectors(i, r), this._x = e.x, this._y = e.y, this._z = e.z, this._w = t, this.normalize(), this
            }
        }(),
        inverse: function() {
            return this.conjugate().normalize(), this
        },
        conjugate: function() {
            return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this
        },
        dot: function(e) {
            return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
        },
        lengthSq: function() {
            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
        },
        length: function() {
            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
        },
        normalize: function() {
            var e = this.length();
            return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this.onChangeCallback(), this
        },
        multiply: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
        },
        multiplyQuaternions: function(e, t) {
            var n = e._x,
                i = e._y,
                r = e._z,
                o = e._w,
                a = t._x,
                s = t._y,
                l = t._z,
                c = t._w;
            return this._x = n * c + o * a + i * l - r * s, this._y = i * c + o * s + r * a - n * l, this._z = r * c + o * l + n * s - i * a, this._w = o * c - n * a - i * s - r * l, this.onChangeCallback(), this
        },
        multiplyVector3: function(e) {
            return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), e.applyQuaternion(this)
        },
        slerp: function(e, t) {
            if (0 === t) return this;
            if (1 === t) return this.copy(e);
            var n = this._x,
                i = this._y,
                r = this._z,
                o = this._w,
                a = o * e._w + n * e._x + i * e._y + r * e._z;
            if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = n, this._y = i, this._z = r, this;
            var s = Math.acos(a),
                l = Math.sqrt(1 - a * a);
            if (Math.abs(l) < .001) return this._w = .5 * (o + this._w), this._x = .5 * (n + this._x), this._y = .5 * (i + this._y), this._z = .5 * (r + this._z), this;
            var c = Math.sin((1 - t) * s) / l,
                u = Math.sin(t * s) / l;
            return this._w = o * c + this._w * u, this._x = n * c + this._x * u, this._y = i * c + this._y * u, this._z = r * c + this._z * u, this.onChangeCallback(), this
        },
        equals: function(e) {
            return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0), this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this.onChangeCallback(), this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e
        },
        onChange: function(e) {
            return this.onChangeCallback = e, this
        },
        onChangeCallback: function() {}
    }, THREE.Quaternion.slerp = function(e, t, n, i) {
        return n.copy(e).slerp(t, i)
    }, THREE.Vector2 = function(e, t) {
        this.x = e || 0, this.y = t || 0
    }, THREE.Vector2.prototype = {
        constructor: THREE.Vector2,
        get width() {
            return this.x
        },
        set width(e) {
            this.x = e
        },
        get height() {
            return this.y
        },
        set height(e) {
            this.y = e
        },
        set: function(e, t) {
            return this.x = e, this.y = t, this
        },
        setX: function(e) {
            return this.x = e, this
        },
        setY: function(e) {
            return this.y = e, this
        },
        setComponent: function(e, t) {
            switch (e) {
                case 0:
                    this.x = t;
                    break;
                case 1:
                    this.y = t;
                    break;
                default:
                    throw new Error("index is out of range: " + e)
            }
        },
        getComponent: function(e) {
            switch (e) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                default:
                    throw new Error("index is out of range: " + e)
            }
        },
        clone: function() {
            return new this.constructor(this.x, this.y)
        },
        copy: function(e) {
            return this.x = e.x, this.y = e.y, this
        },
        add: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this)
        },
        addScalar: function(e) {
            return this.x += e, this.y += e, this
        },
        addVectors: function(e, t) {
            return this.x = e.x + t.x, this.y = e.y + t.y, this
        },
        addScaledVector: function(e, t) {
            return this.x += e.x * t, this.y += e.y * t, this
        },
        sub: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this)
        },
        subScalar: function(e) {
            return this.x -= e, this.y -= e, this
        },
        subVectors: function(e, t) {
            return this.x = e.x - t.x, this.y = e.y - t.y, this
        },
        multiply: function(e) {
            return this.x *= e.x, this.y *= e.y, this
        },
        multiplyScalar: function(e) {
            return isFinite(e) ? (this.x *= e, this.y *= e) : (this.x = 0, this.y = 0), this
        },
        divide: function(e) {
            return this.x /= e.x, this.y /= e.y, this
        },
        divideScalar: function(e) {
            return this.multiplyScalar(1 / e)
        },
        min: function(e) {
            return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this
        },
        max: function(e) {
            return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this
        },
        clamp: function(e, t) {
            return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this
        },
        clampScalar: function() {
            var e, t;
            return function n(i, r) {
                return void 0 === e && (e = new THREE.Vector2, t = new THREE.Vector2), e.set(i, i), t.set(r, r), this.clamp(e, t)
            }
        }(),
        clampLength: function(e, t) {
            var n = this.length();
            return this.multiplyScalar(Math.max(e, Math.min(t, n)) / n), this
        },
        floor: function() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this
        },
        round: function() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this
        },
        negate: function() {
            return this.x = -this.x, this.y = -this.y, this
        },
        dot: function(e) {
            return this.x * e.x + this.y * e.y
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        lengthManhattan: function() {
            return Math.abs(this.x) + Math.abs(this.y)
        },
        normalize: function() {
            return this.divideScalar(this.length())
        },
        distanceTo: function(e) {
            return Math.sqrt(this.distanceToSquared(e))
        },
        distanceToSquared: function(e) {
            var t = this.x - e.x,
                n = this.y - e.y;
            return t * t + n * n
        },
        setLength: function(e) {
            return this.multiplyScalar(e / this.length())
        },
        lerp: function(e, t) {
            return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this
        },
        lerpVectors: function(e, t, n) {
            return this.subVectors(t, e).multiplyScalar(n).add(e), this
        },
        equals: function(e) {
            return e.x === this.x && e.y === this.y
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e
        },
        fromAttribute: function(e, t, n) {
            return void 0 === n && (n = 0), t = t * e.itemSize + n, this.x = e.array[t], this.y = e.array[t + 1], this
        },
        rotateAround: function(e, t) {
            var n = Math.cos(t),
                i = Math.sin(t),
                r = this.x - e.x,
                o = this.y - e.y;
            return this.x = r * n - o * i + e.x, this.y = r * i + o * n + e.y, this
        }
    }, THREE.Vector3 = function(e, t, n) {
        this.x = e || 0, this.y = t || 0, this.z = n || 0
    }, THREE.Vector3.prototype = {
        constructor: THREE.Vector3,
        set: function(e, t, n) {
            return this.x = e, this.y = t, this.z = n, this
        },
        setX: function(e) {
            return this.x = e, this
        },
        setY: function(e) {
            return this.y = e, this
        },
        setZ: function(e) {
            return this.z = e, this
        },
        setComponent: function(e, t) {
            switch (e) {
                case 0:
                    this.x = t;
                    break;
                case 1:
                    this.y = t;
                    break;
                case 2:
                    this.z = t;
                    break;
                default:
                    throw new Error("index is out of range: " + e)
            }
        },
        getComponent: function(e) {
            switch (e) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                default:
                    throw new Error("index is out of range: " + e)
            }
        },
        clone: function() {
            return new this.constructor(this.x, this.y, this.z)
        },
        copy: function(e) {
            return this.x = e.x, this.y = e.y, this.z = e.z, this
        },
        add: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this)
        },
        addScalar: function(e) {
            return this.x += e, this.y += e, this.z += e, this
        },
        addVectors: function(e, t) {
            return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this
        },
        addScaledVector: function(e, t) {
            return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this
        },
        sub: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this)
        },
        subScalar: function(e) {
            return this.x -= e, this.y -= e, this.z -= e, this
        },
        subVectors: function(e, t) {
            return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this
        },
        multiply: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this)
        },
        multiplyScalar: function(e) {
            return isFinite(e) ? (this.x *= e, this.y *= e, this.z *= e) : (this.x = 0, this.y = 0, this.z = 0), this
        },
        multiplyVectors: function(e, t) {
            return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this
        },
        applyEuler: function() {
            var e;
            return function t(n) {
                return n instanceof THREE.Euler == !1 && console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."), void 0 === e && (e = new THREE.Quaternion), this.applyQuaternion(e.setFromEuler(n)), this
            }
        }(),
        applyAxisAngle: function() {
            var e;
            return function t(n, i) {
                return void 0 === e && (e = new THREE.Quaternion), this.applyQuaternion(e.setFromAxisAngle(n, i)), this
            }
        }(),
        applyMatrix3: function(e) {
            var t = this.x,
                n = this.y,
                i = this.z,
                r = e.elements;
            return this.x = r[0] * t + r[3] * n + r[6] * i, this.y = r[1] * t + r[4] * n + r[7] * i, this.z = r[2] * t + r[5] * n + r[8] * i, this
        },
        applyMatrix4: function(e) {
            var t = this.x,
                n = this.y,
                i = this.z,
                r = e.elements;
            return this.x = r[0] * t + r[4] * n + r[8] * i + r[12], this.y = r[1] * t + r[5] * n + r[9] * i + r[13], this.z = r[2] * t + r[6] * n + r[10] * i + r[14], this
        },
        applyProjection: function(e) {
            var t = this.x,
                n = this.y,
                i = this.z,
                r = e.elements,
                o = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
            return this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * o, this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * o, this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * o, this
        },
        applyQuaternion: function(e) {
            var t = this.x,
                n = this.y,
                i = this.z,
                r = e.x,
                o = e.y,
                a = e.z,
                s = e.w,
                l = s * t + o * i - a * n,
                c = s * n + a * t - r * i,
                u = s * i + r * n - o * t,
                h = -r * t - o * n - a * i;
            return this.x = l * s + h * -r + c * -a - u * -o, this.y = c * s + h * -o + u * -r - l * -a, this.z = u * s + h * -a + l * -o - c * -r, this
        },
        project: function() {
            var e;
            return function t(n) {
                return void 0 === e && (e = new THREE.Matrix4), e.multiplyMatrices(n.projectionMatrix, e.getInverse(n.matrixWorld)), this.applyProjection(e)
            }
        }(),
        unproject: function() {
            var e;
            return function t(n) {
                return void 0 === e && (e = new THREE.Matrix4), e.multiplyMatrices(n.matrixWorld, e.getInverse(n.projectionMatrix)), this.applyProjection(e)
            }
        }(),
        transformDirection: function(e) {
            var t = this.x,
                n = this.y,
                i = this.z,
                r = e.elements;
            return this.x = r[0] * t + r[4] * n + r[8] * i, this.y = r[1] * t + r[5] * n + r[9] * i, this.z = r[2] * t + r[6] * n + r[10] * i, this.normalize(), this
        },
        divide: function(e) {
            return this.x /= e.x, this.y /= e.y, this.z /= e.z, this
        },
        divideScalar: function(e) {
            return this.multiplyScalar(1 / e)
        },
        min: function(e) {
            return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this
        },
        max: function(e) {
            return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this
        },
        clamp: function(e, t) {
            return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this
        },
        clampScalar: function() {
            var e, t;
            return function n(i, r) {
                return void 0 === e && (e = new THREE.Vector3, t = new THREE.Vector3), e.set(i, i, i), t.set(r, r, r), this.clamp(e, t)
            }
        }(),
        clampLength: function(e, t) {
            var n = this.length();
            return this.multiplyScalar(Math.max(e, Math.min(t, n)) / n), this
        },
        floor: function() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this
        },
        round: function() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                this
        },
        negate: function() {
            return this.x = -this.x, this.y = -this.y, this.z = -this.z, this
        },
        dot: function(e) {
            return this.x * e.x + this.y * e.y + this.z * e.z
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        lengthManhattan: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
        },
        normalize: function() {
            return this.divideScalar(this.length())
        },
        setLength: function(e) {
            return this.multiplyScalar(e / this.length())
        },
        lerp: function(e, t) {
            return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this
        },
        lerpVectors: function(e, t, n) {
            return this.subVectors(t, e).multiplyScalar(n).add(e), this
        },
        cross: function(e, t) {
            if (void 0 !== t) return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t);
            var n = this.x,
                i = this.y,
                r = this.z;
            return this.x = i * e.z - r * e.y, this.y = r * e.x - n * e.z, this.z = n * e.y - i * e.x, this
        },
        crossVectors: function(e, t) {
            var n = e.x,
                i = e.y,
                r = e.z,
                o = t.x,
                a = t.y,
                s = t.z;
            return this.x = i * s - r * a, this.y = r * o - n * s, this.z = n * a - i * o, this
        },
        projectOnVector: function() {
            var e, t;
            return function n(i) {
                return void 0 === e && (e = new THREE.Vector3), e.copy(i).normalize(), t = this.dot(e), this.copy(e).multiplyScalar(t)
            }
        }(),
        projectOnPlane: function() {
            var e;
            return function t(n) {
                return void 0 === e && (e = new THREE.Vector3), e.copy(this).projectOnVector(n), this.sub(e)
            }
        }(),
        reflect: function() {
            var e;
            return function t(n) {
                return void 0 === e && (e = new THREE.Vector3), this.sub(e.copy(n).multiplyScalar(2 * this.dot(n)))
            }
        }(),
        angleTo: function(e) {
            var t = this.dot(e) / (this.length() * e.length());
            return Math.acos(THREE.Math.clamp(t, -1, 1))
        },
        distanceTo: function(e) {
            return Math.sqrt(this.distanceToSquared(e))
        },
        distanceToSquared: function(e) {
            var t = this.x - e.x,
                n = this.y - e.y,
                i = this.z - e.z;
            return t * t + n * n + i * i
        },
        setEulerFromRotationMatrix: function(e, t) {
            console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
        },
        setEulerFromQuaternion: function(e, t) {
            console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
        },
        getPositionFromMatrix: function(e) {
            return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(e)
        },
        getScaleFromMatrix: function(e) {
            return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(e)
        },
        getColumnFromMatrix: function(e, t) {
            return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(e, t)
        },
        setFromMatrixPosition: function(e) {
            return this.x = e.elements[12], this.y = e.elements[13], this.z = e.elements[14], this
        },
        setFromMatrixScale: function(e) {
            var t = this.set(e.elements[0], e.elements[1], e.elements[2]).length(),
                n = this.set(e.elements[4], e.elements[5], e.elements[6]).length(),
                i = this.set(e.elements[8], e.elements[9], e.elements[10]).length();
            return this.x = t, this.y = n, this.z = i, this
        },
        setFromMatrixColumn: function(e, t) {
            var n = 4 * e,
                i = t.elements;
            return this.x = i[n], this.y = i[n + 1], this.z = i[n + 2], this
        },
        equals: function(e) {
            return e.x === this.x && e.y === this.y && e.z === this.z
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e
        },
        fromAttribute: function(e, t, n) {
            return void 0 === n && (n = 0), t = t * e.itemSize + n, this.x = e.array[t], this.y = e.array[t + 1], this.z = e.array[t + 2], this
        }
    }, THREE.Vector4 = function(e, t, n, i) {
        this.x = e || 0, this.y = t || 0, this.z = n || 0, this.w = void 0 !== i ? i : 1
    }, THREE.Vector4.prototype = {
        constructor: THREE.Vector4,
        set: function(e, t, n, i) {
            return this.x = e, this.y = t, this.z = n, this.w = i, this
        },
        setX: function(e) {
            return this.x = e, this
        },
        setY: function(e) {
            return this.y = e, this
        },
        setZ: function(e) {
            return this.z = e, this
        },
        setW: function(e) {
            return this.w = e, this
        },
        setComponent: function(e, t) {
            switch (e) {
                case 0:
                    this.x = t;
                    break;
                case 1:
                    this.y = t;
                    break;
                case 2:
                    this.z = t;
                    break;
                case 3:
                    this.w = t;
                    break;
                default:
                    throw new Error("index is out of range: " + e)
            }
        },
        getComponent: function(e) {
            switch (e) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                case 3:
                    return this.w;
                default:
                    throw new Error("index is out of range: " + e)
            }
        },
        clone: function() {
            return new this.constructor(this.x, this.y, this.z, this.w)
        },
        copy: function(e) {
            return this.x = e.x, this.y = e.y, this.z = e.z, this.w = void 0 !== e.w ? e.w : 1, this
        },
        add: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this)
        },
        addScalar: function(e) {
            return this.x += e, this.y += e, this.z += e, this.w += e, this
        },
        addVectors: function(e, t) {
            return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this
        },
        addScaledVector: function(e, t) {
            return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this
        },
        sub: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this)
        },
        subScalar: function(e) {
            return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this
        },
        subVectors: function(e, t) {
            return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this
        },
        multiplyScalar: function(e) {
            return isFinite(e) ? (this.x *= e, this.y *= e, this.z *= e, this.w *= e) : (this.x = 0, this.y = 0, this.z = 0, this.w = 0), this
        },
        applyMatrix4: function(e) {
            var t = this.x,
                n = this.y,
                i = this.z,
                r = this.w,
                o = e.elements;
            return this.x = o[0] * t + o[4] * n + o[8] * i + o[12] * r, this.y = o[1] * t + o[5] * n + o[9] * i + o[13] * r, this.z = o[2] * t + o[6] * n + o[10] * i + o[14] * r, this.w = o[3] * t + o[7] * n + o[11] * i + o[15] * r, this
        },
        divideScalar: function(e) {
            return this.multiplyScalar(1 / e)
        },
        setAxisAngleFromQuaternion: function(e) {
            this.w = 2 * Math.acos(e.w);
            var t = Math.sqrt(1 - e.w * e.w);
            return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this
        },
        setAxisAngleFromRotationMatrix: function(e) {
            var t, n, i, r, o = .01,
                a = .1,
                s = e.elements,
                l = s[0],
                c = s[4],
                u = s[8],
                h = s[1],
                d = s[5],
                p = s[9],
                f = s[2],
                m = s[6],
                E = s[10];
            if (Math.abs(c - h) < o && Math.abs(u - f) < o && Math.abs(p - m) < o) {
                if (Math.abs(c + h) < a && Math.abs(u + f) < a && Math.abs(p + m) < a && Math.abs(l + d + E - 3) < a) return this.set(1, 0, 0, 0), this;
                t = Math.PI;
                var g = (l + 1) / 2,
                    v = (d + 1) / 2,
                    y = (E + 1) / 2,
                    T = (c + h) / 4,
                    x = (u + f) / 4,
                    R = (p + m) / 4;
                return g > v && g > y ? g < o ? (n = 0, i = .707106781, r = .707106781) : (n = Math.sqrt(g), i = T / n, r = x / n) : v > y ? v < o ? (n = .707106781, i = 0, r = .707106781) : (i = Math.sqrt(v), n = T / i, r = R / i) : y < o ? (n = .707106781, i = .707106781, r = 0) : (r = Math.sqrt(y), n = x / r, i = R / r), this.set(n, i, r, t), this
            }
            var w = Math.sqrt((m - p) * (m - p) + (u - f) * (u - f) + (h - c) * (h - c));
            return Math.abs(w) < .001 && (w = 1), this.x = (m - p) / w, this.y = (u - f) / w, this.z = (h - c) / w, this.w = Math.acos((l + d + E - 1) / 2), this
        },
        min: function(e) {
            return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this
        },
        max: function(e) {
            return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this
        },
        clamp: function(e, t) {
            return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this
        },
        clampScalar: function() {
            var e, t;
            return function n(i, r) {
                return void 0 === e && (e = new THREE.Vector4, t = new THREE.Vector4), e.set(i, i, i, i), t.set(r, r, r, r), this.clamp(e, t)
            }
        }(),
        floor: function() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this
        },
        round: function() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this
        },
        negate: function() {
            return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this
        },
        dot: function(e) {
            return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
        },
        lengthManhattan: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
        },
        normalize: function() {
            return this.divideScalar(this.length())
        },
        setLength: function(e) {
            return this.multiplyScalar(e / this.length())
        },
        lerp: function(e, t) {
            return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this
        },
        lerpVectors: function(e, t, n) {
            return this.subVectors(t, e).multiplyScalar(n).add(e), this
        },
        equals: function(e) {
            return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e
        },
        fromAttribute: function(e, t, n) {
            return void 0 === n && (n = 0), t = t * e.itemSize + n, this.x = e.array[t], this.y = e.array[t + 1], this.z = e.array[t + 2], this.w = e.array[t + 3], this
        }
    }, THREE.Euler = function(e, t, n, i) {
        this._x = e || 0, this._y = t || 0, this._z = n || 0, this._order = i || THREE.Euler.DefaultOrder
    }, THREE.Euler.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], THREE.Euler.DefaultOrder = "XYZ", THREE.Euler.prototype = {
        constructor: THREE.Euler,
        get x() {
            return this._x
        },
        set x(e) {
            this._x = e, this.onChangeCallback()
        },
        get y() {
            return this._y
        },
        set y(e) {
            this._y = e, this.onChangeCallback()
        },
        get z() {
            return this._z
        },
        set z(e) {
            this._z = e, this.onChangeCallback()
        },
        get order() {
            return this._order
        },
        set order(e) {
            this._order = e, this.onChangeCallback()
        },
        set: function(e, t, n, i) {
            return this._x = e, this._y = t, this._z = n, this._order = i || this._order, this.onChangeCallback(), this
        },
        clone: function() {
            return new this.constructor(this._x, this._y, this._z, this._order)
        },
        copy: function(e) {
            return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this.onChangeCallback(), this
        },
        setFromRotationMatrix: function(e, t, n) {
            var i = THREE.Math.clamp,
                r = e.elements,
                o = r[0],
                a = r[4],
                s = r[8],
                l = r[1],
                c = r[5],
                u = r[9],
                h = r[2],
                d = r[6],
                p = r[10];
            return t = t || this._order, "XYZ" === t ? (this._y = Math.asin(i(s, -1, 1)), Math.abs(s) < .99999 ? (this._x = Math.atan2(-u, p), this._z = Math.atan2(-a, o)) : (this._x = Math.atan2(d, c), this._z = 0)) : "YXZ" === t ? (this._x = Math.asin(-i(u, -1, 1)), Math.abs(u) < .99999 ? (this._y = Math.atan2(s, p), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-h, o), this._z = 0)) : "ZXY" === t ? (this._x = Math.asin(i(d, -1, 1)), Math.abs(d) < .99999 ? (this._y = Math.atan2(-h, p), this._z = Math.atan2(-a, c)) : (this._y = 0, this._z = Math.atan2(l, o))) : "ZYX" === t ? (this._y = Math.asin(-i(h, -1, 1)), Math.abs(h) < .99999 ? (this._x = Math.atan2(d, p), this._z = Math.atan2(l, o)) : (this._x = 0, this._z = Math.atan2(-a, c))) : "YZX" === t ? (this._z = Math.asin(i(l, -1, 1)), Math.abs(l) < .99999 ? (this._x = Math.atan2(-u, c), this._y = Math.atan2(-h, o)) : (this._x = 0, this._y = Math.atan2(s, p))) : "XZY" === t ? (this._z = Math.asin(-i(a, -1, 1)), Math.abs(a) < .99999 ? (this._x = Math.atan2(d, c), this._y = Math.atan2(s, o)) : (this._x = Math.atan2(-u, p), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + t), this._order = t, n !== !1 && this.onChangeCallback(), this
        },
        setFromQuaternion: function() {
            var e;
            return function(t, n, i) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeRotationFromQuaternion(t), this.setFromRotationMatrix(e, n, i), this
            }
        }(),
        setFromVector3: function(e, t) {
            return this.set(e.x, e.y, e.z, t || this._order)
        },
        reorder: function() {
            var e = new THREE.Quaternion;
            return function(t) {
                e.setFromEuler(this), this.setFromQuaternion(e, t)
            }
        }(),
        equals: function(e) {
            return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
        },
        fromArray: function(e) {
            return this._x = e[0], this._y = e[1], this._z = e[2], void 0 !== e[3] && (this._order = e[3]), this.onChangeCallback(), this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e
        },
        toVector3: function(e) {
            return e ? e.set(this._x, this._y, this._z) : new THREE.Vector3(this._x, this._y, this._z)
        },
        onChange: function(e) {
            return this.onChangeCallback = e, this
        },
        onChangeCallback: function() {}
    }, THREE.Line3 = function(e, t) {
        this.start = void 0 !== e ? e : new THREE.Vector3, this.end = void 0 !== t ? t : new THREE.Vector3
    }, THREE.Line3.prototype = {
        constructor: THREE.Line3,
        set: function(e, t) {
            return this.start.copy(e), this.end.copy(t), this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.start.copy(e.start), this.end.copy(e.end), this
        },
        center: function(e) {
            var t = e || new THREE.Vector3;
            return t.addVectors(this.start, this.end).multiplyScalar(.5)
        },
        delta: function(e) {
            var t = e || new THREE.Vector3;
            return t.subVectors(this.end, this.start)
        },
        distanceSq: function() {
            return this.start.distanceToSquared(this.end)
        },
        distance: function() {
            return this.start.distanceTo(this.end)
        },
        at: function(e, t) {
            var n = t || new THREE.Vector3;
            return this.delta(n).multiplyScalar(e).add(this.start)
        },
        closestPointToPointParameter: function() {
            var e = new THREE.Vector3,
                t = new THREE.Vector3;
            return function(n, i) {
                e.subVectors(n, this.start), t.subVectors(this.end, this.start);
                var r = t.dot(t),
                    o = t.dot(e),
                    a = o / r;
                return i && (a = THREE.Math.clamp(a, 0, 1)), a
            }
        }(),
        closestPointToPoint: function(e, t, n) {
            var i = this.closestPointToPointParameter(e, t),
                r = n || new THREE.Vector3;
            return this.delta(r).multiplyScalar(i).add(this.start)
        },
        applyMatrix4: function(e) {
            return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this
        },
        equals: function(e) {
            return e.start.equals(this.start) && e.end.equals(this.end)
        }
    }, THREE.Box2 = function(e, t) {
        this.min = void 0 !== e ? e : new THREE.Vector2(1 / 0, 1 / 0), this.max = void 0 !== t ? t : new THREE.Vector2(-(1 / 0), -(1 / 0))
    }, THREE.Box2.prototype = {
        constructor: THREE.Box2,
        set: function(e, t) {
            return this.min.copy(e), this.max.copy(t), this
        },
        setFromPoints: function(e) {
            this.makeEmpty();
            for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
            return this
        },
        setFromCenterAndSize: function() {
            var e = new THREE.Vector2;
            return function(t, n) {
                var i = e.copy(n).multiplyScalar(.5);
                return this.min.copy(t).sub(i), this.max.copy(t).add(i), this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.min.copy(e.min), this.max.copy(e.max), this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -(1 / 0), this
        },
        empty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y
        },
        center: function(e) {
            var t = e || new THREE.Vector2;
            return t.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        size: function(e) {
            var t = e || new THREE.Vector2;
            return t.subVectors(this.max, this.min)
        },
        expandByPoint: function(e) {
            return this.min.min(e), this.max.max(e), this
        },
        expandByVector: function(e) {
            return this.min.sub(e), this.max.add(e), this
        },
        expandByScalar: function(e) {
            return this.min.addScalar(-e), this.max.addScalar(e), this
        },
        containsPoint: function(e) {
            return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y)
        },
        containsBox: function(e) {
            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
        },
        getParameter: function(e, t) {
            var n = t || new THREE.Vector2;
            return n.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
        },
        isIntersectionBox: function(e) {
            return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y)
        },
        clampPoint: function(e, t) {
            var n = t || new THREE.Vector2;
            return n.copy(e).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var e = new THREE.Vector2;
            return function(t) {
                var n = e.copy(t).clamp(this.min, this.max);
                return n.sub(t).length()
            }
        }(),
        intersect: function(e) {
            return this.min.max(e.min), this.max.min(e.max), this
        },
        union: function(e) {
            return this.min.min(e.min), this.max.max(e.max), this
        },
        translate: function(e) {
            return this.min.add(e), this.max.add(e), this
        },
        equals: function(e) {
            return e.min.equals(this.min) && e.max.equals(this.max)
        }
    }, THREE.Box3 = function(e, t) {
        this.min = void 0 !== e ? e : new THREE.Vector3(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== t ? t : new THREE.Vector3(-(1 / 0), -(1 / 0), -(1 / 0))
    }, THREE.Box3.prototype = {
        constructor: THREE.Box3,
        set: function(e, t) {
            return this.min.copy(e), this.max.copy(t), this
        },
        setFromPoints: function(e) {
            this.makeEmpty();
            for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
            return this
        },
        setFromCenterAndSize: function() {
            var e = new THREE.Vector3;
            return function(t, n) {
                var i = e.copy(n).multiplyScalar(.5);
                return this.min.copy(t).sub(i), this.max.copy(t).add(i), this
            }
        }(),
        setFromObject: function() {
            var e = new THREE.Vector3;
            return function(t) {
                var n = this;
                return t.updateMatrixWorld(!0), this.makeEmpty(), t.traverse(function(t) {
                    var i = t.geometry;
                    if (void 0 !== i)
                        if (i instanceof THREE.Geometry)
                            for (var r = i.vertices, o = 0, a = r.length; o < a; o++) e.copy(r[o]), e.applyMatrix4(t.matrixWorld), n.expandByPoint(e);
                        else if (i instanceof THREE.BufferGeometry && void 0 !== i.attributes.position)
                        for (var s = i.attributes.position.array, o = 0, a = s.length; o < a; o += 3) e.set(s[o], s[o + 1], s[o + 2]), e.applyMatrix4(t.matrixWorld), n.expandByPoint(e)
                }), this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.min.copy(e.min), this.max.copy(e.max), this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -(1 / 0), this
        },
        empty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
        },
        center: function(e) {
            var t = e || new THREE.Vector3;
            return t.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        size: function(e) {
            var t = e || new THREE.Vector3;
            return t.subVectors(this.max, this.min)
        },
        expandByPoint: function(e) {
            return this.min.min(e), this.max.max(e), this
        },
        expandByVector: function(e) {
            return this.min.sub(e), this.max.add(e), this
        },
        expandByScalar: function(e) {
            return this.min.addScalar(-e), this.max.addScalar(e), this
        },
        containsPoint: function(e) {
            return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z)
        },
        containsBox: function(e) {
            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
        },
        getParameter: function(e, t) {
            var n = t || new THREE.Vector3;
            return n.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
        },
        isIntersectionBox: function(e) {
            return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z)
        },
        clampPoint: function(e, t) {
            var n = t || new THREE.Vector3;
            return n.copy(e).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var e = new THREE.Vector3;
            return function(t) {
                var n = e.copy(t).clamp(this.min, this.max);
                return n.sub(t).length()
            }
        }(),
        getBoundingSphere: function() {
            var e = new THREE.Vector3;
            return function(t) {
                var n = t || new THREE.Sphere;
                return n.center = this.center(), n.radius = .5 * this.size(e).length(), n
            }
        }(),
        intersect: function(e) {
            return this.min.max(e.min), this.max.min(e.max), this
        },
        union: function(e) {
            return this.min.min(e.min), this.max.max(e.max), this
        },
        applyMatrix4: function() {
            var e = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3];
            return function(t) {
                return e[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t), e[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t), e[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t), e[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t), e[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t), e[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t), e[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t), e[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t), this.makeEmpty(), this.setFromPoints(e), this
            }
        }(),
        translate: function(e) {
            return this.min.add(e), this.max.add(e), this
        },
        equals: function(e) {
            return e.min.equals(this.min) && e.max.equals(this.max)
        }
    }, THREE.Matrix3 = function() {
        this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]), arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
    }, THREE.Matrix3.prototype = {
        constructor: THREE.Matrix3,
        set: function(e, t, n, i, r, o, a, s, l) {
            var c = this.elements;
            return c[0] = e, c[3] = t, c[6] = n, c[1] = i, c[4] = r, c[7] = o, c[2] = a, c[5] = s, c[8] = l, this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
        },
        clone: function() {
            return (new this.constructor).fromArray(this.elements)
        },
        copy: function(e) {
            var t = e.elements;
            return this.set(t[0], t[3], t[6], t[1], t[4], t[7], t[2], t[5], t[8]), this
        },
        multiplyVector3: function(e) {
            return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), e.applyMatrix3(this)
        },
        multiplyVector3Array: function(e) {
            return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."), this.applyToVector3Array(e)
        },
        applyToVector3Array: function() {
            var e;
            return function(t, n, i) {
                void 0 === e && (e = new THREE.Vector3), void 0 === n && (n = 0), void 0 === i && (i = t.length);
                for (var r = 0, o = n; r < i; r += 3, o += 3) e.fromArray(t, o), e.applyMatrix3(this), e.toArray(t, o);
                return t
            }
        }(),
        applyToBuffer: function() {
            var e;
            return function t(n, i, r) {
                void 0 === e && (e = new THREE.Vector3), void 0 === i && (i = 0), void 0 === r && (r = n.length / n.itemSize);
                for (var o = 0, a = i; o < r; o++, a++) e.x = n.getX(a), e.y = n.getY(a), e.z = n.getZ(a), e.applyMatrix3(this), n.setXYZ(e.x, e.y, e.z);
                return n
            }
        }(),
        multiplyScalar: function(e) {
            var t = this.elements;
            return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this
        },
        determinant: function() {
            var e = this.elements,
                t = e[0],
                n = e[1],
                i = e[2],
                r = e[3],
                o = e[4],
                a = e[5],
                s = e[6],
                l = e[7],
                c = e[8];
            return t * o * c - t * a * l - n * r * c + n * a * s + i * r * l - i * o * s
        },
        getInverse: function(e, t) {
            var n = e.elements,
                i = this.elements;
            i[0] = n[10] * n[5] - n[6] * n[9], i[1] = -n[10] * n[1] + n[2] * n[9], i[2] = n[6] * n[1] - n[2] * n[5], i[3] = -n[10] * n[4] + n[6] * n[8], i[4] = n[10] * n[0] - n[2] * n[8], i[5] = -n[6] * n[0] + n[2] * n[4], i[6] = n[9] * n[4] - n[5] * n[8], i[7] = -n[9] * n[0] + n[1] * n[8], i[8] = n[5] * n[0] - n[1] * n[4];
            var r = n[0] * i[0] + n[1] * i[3] + n[2] * i[6];
            if (0 === r) {
                var o = "Matrix3.getInverse(): can't invert matrix, determinant is 0";
                if (t) throw new Error(o);
                return console.warn(o), this.identity(), this
            }
            return this.multiplyScalar(1 / r), this
        },
        transpose: function() {
            var e, t = this.elements;
            return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this
        },
        flattenToArrayOffset: function(e, t) {
            var n = this.elements;
            return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e
        },
        getNormalMatrix: function(e) {
            return this.getInverse(e).transpose(), this
        },
        transposeIntoArray: function(e) {
            var t = this.elements;
            return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this
        },
        fromArray: function(e) {
            return this.elements.set(e), this
        },
        toArray: function() {
            var e = this.elements;
            return [e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8]]
        }
    }, THREE.Matrix4 = function() {
        this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
    }, THREE.Matrix4.prototype = {
        constructor: THREE.Matrix4,
        set: function(e, t, n, i, r, o, a, s, l, c, u, h, d, p, f, m) {
            var E = this.elements;
            return E[0] = e, E[4] = t, E[8] = n, E[12] = i, E[1] = r, E[5] = o, E[9] = a, E[13] = s, E[2] = l, E[6] = c, E[10] = u, E[14] = h, E[3] = d, E[7] = p, E[11] = f, E[15] = m, this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
        },
        clone: function() {
            return (new THREE.Matrix4).fromArray(this.elements)
        },
        copy: function(e) {
            return this.elements.set(e.elements), this
        },
        extractPosition: function(e) {
            return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(e)
        },
        copyPosition: function(e) {
            var t = this.elements,
                n = e.elements;
            return t[12] = n[12], t[13] = n[13], t[14] = n[14], this
        },
        extractBasis: function(e, t, n) {
            var i = this.elements;
            return e.set(i[0], i[1], i[2]), t.set(i[4], i[5], i[6]), n.set(i[8], i[9], i[10]), this
        },
        makeBasis: function(e, t, n) {
            return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this
        },
        extractRotation: function() {
            var e;
            return function(t) {
                void 0 === e && (e = new THREE.Vector3);
                var n = this.elements,
                    i = t.elements,
                    r = 1 / e.set(i[0], i[1], i[2]).length(),
                    o = 1 / e.set(i[4], i[5], i[6]).length(),
                    a = 1 / e.set(i[8], i[9], i[10]).length();
                return n[0] = i[0] * r, n[1] = i[1] * r, n[2] = i[2] * r, n[4] = i[4] * o, n[5] = i[5] * o, n[6] = i[6] * o, n[8] = i[8] * a, n[9] = i[9] * a, n[10] = i[10] * a, this
            }
        }(),
        makeRotationFromEuler: function(e) {
            e instanceof THREE.Euler == !1 && console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
            var t = this.elements,
                n = e.x,
                i = e.y,
                r = e.z,
                o = Math.cos(n),
                a = Math.sin(n),
                s = Math.cos(i),
                l = Math.sin(i),
                c = Math.cos(r),
                u = Math.sin(r);
            if ("XYZ" === e.order) {
                var h = o * c,
                    d = o * u,
                    p = a * c,
                    f = a * u;
                t[0] = s * c, t[4] = -s * u, t[8] = l, t[1] = d + p * l, t[5] = h - f * l, t[9] = -a * s, t[2] = f - h * l, t[6] = p + d * l, t[10] = o * s
            } else if ("YXZ" === e.order) {
                var m = s * c,
                    E = s * u,
                    g = l * c,
                    v = l * u;
                t[0] = m + v * a, t[4] = g * a - E, t[8] = o * l, t[1] = o * u, t[5] = o * c, t[9] = -a, t[2] = E * a - g, t[6] = v + m * a, t[10] = o * s
            } else if ("ZXY" === e.order) {
                var m = s * c,
                    E = s * u,
                    g = l * c,
                    v = l * u;
                t[0] = m - v * a, t[4] = -o * u, t[8] = g + E * a, t[1] = E + g * a, t[5] = o * c, t[9] = v - m * a, t[2] = -o * l, t[6] = a, t[10] = o * s
            } else if ("ZYX" === e.order) {
                var h = o * c,
                    d = o * u,
                    p = a * c,
                    f = a * u;
                t[0] = s * c, t[4] = p * l - d, t[8] = h * l + f, t[1] = s * u, t[5] = f * l + h, t[9] = d * l - p, t[2] = -l, t[6] = a * s, t[10] = o * s
            } else if ("YZX" === e.order) {
                var y = o * s,
                    T = o * l,
                    x = a * s,
                    R = a * l;
                t[0] = s * c, t[4] = R - y * u, t[8] = x * u + T, t[1] = u, t[5] = o * c, t[9] = -a * c, t[2] = -l * c, t[6] = T * u + x, t[10] = y - R * u
            } else if ("XZY" === e.order) {
                var y = o * s,
                    T = o * l,
                    x = a * s,
                    R = a * l;
                t[0] = s * c, t[4] = -u, t[8] = l * c, t[1] = y * u + R, t[5] = o * c, t[9] = T * u - x, t[2] = x * u - T, t[6] = a * c, t[10] = R * u + y
            }
            return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
        },
        setRotationFromQuaternion: function(e) {
            return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(e)
        },
        makeRotationFromQuaternion: function(e) {
            var t = this.elements,
                n = e.x,
                i = e.y,
                r = e.z,
                o = e.w,
                a = n + n,
                s = i + i,
                l = r + r,
                c = n * a,
                u = n * s,
                h = n * l,
                d = i * s,
                p = i * l,
                f = r * l,
                m = o * a,
                E = o * s,
                g = o * l;
            return t[0] = 1 - (d + f), t[4] = u - g, t[8] = h + E, t[1] = u + g, t[5] = 1 - (c + f), t[9] = p - m, t[2] = h - E, t[6] = p + m, t[10] = 1 - (c + d), t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
        },
        lookAt: function() {
            var e, t, n;
            return function(i, r, o) {
                void 0 === e && (e = new THREE.Vector3), void 0 === t && (t = new THREE.Vector3), void 0 === n && (n = new THREE.Vector3);
                var a = this.elements;
                return n.subVectors(i, r).normalize(), 0 === n.lengthSq() && (n.z = 1), e.crossVectors(o, n).normalize(), 0 === e.lengthSq() && (n.x += 1e-4, e.crossVectors(o, n).normalize()), t.crossVectors(n, e), a[0] = e.x, a[4] = t.x, a[8] = n.x, a[1] = e.y, a[5] = t.y, a[9] = n.y, a[2] = e.z, a[6] = t.z, a[10] = n.z, this
            }
        }(),
        multiply: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
        },
        multiplyMatrices: function(e, t) {
            var n = e.elements,
                i = t.elements,
                r = this.elements,
                o = n[0],
                a = n[4],
                s = n[8],
                l = n[12],
                c = n[1],
                u = n[5],
                h = n[9],
                d = n[13],
                p = n[2],
                f = n[6],
                m = n[10],
                E = n[14],
                g = n[3],
                v = n[7],
                y = n[11],
                T = n[15],
                x = i[0],
                R = i[4],
                w = i[8],
                b = i[12],
                H = i[1],
                S = i[5],
                _ = i[9],
                M = i[13],
                C = i[2],
                A = i[6],
                P = i[10],
                k = i[14],
                L = i[3],
                D = i[7],
                O = i[11],
                F = i[15];
            return r[0] = o * x + a * H + s * C + l * L, r[4] = o * R + a * S + s * A + l * D, r[8] = o * w + a * _ + s * P + l * O, r[12] = o * b + a * M + s * k + l * F, r[1] = c * x + u * H + h * C + d * L, r[5] = c * R + u * S + h * A + d * D, r[9] = c * w + u * _ + h * P + d * O, r[13] = c * b + u * M + h * k + d * F, r[2] = p * x + f * H + m * C + E * L, r[6] = p * R + f * S + m * A + E * D, r[10] = p * w + f * _ + m * P + E * O, r[14] = p * b + f * M + m * k + E * F, r[3] = g * x + v * H + y * C + T * L, r[7] = g * R + v * S + y * A + T * D, r[11] = g * w + v * _ + y * P + T * O, r[15] = g * b + v * M + y * k + T * F, this
        },
        multiplyToArray: function(e, t, n) {
            var i = this.elements;
            return this.multiplyMatrices(e, t), n[0] = i[0], n[1] = i[1], n[2] = i[2], n[3] = i[3], n[4] = i[4], n[5] = i[5], n[6] = i[6], n[7] = i[7], n[8] = i[8], n[9] = i[9], n[10] = i[10], n[11] = i[11], n[12] = i[12], n[13] = i[13], n[14] = i[14], n[15] = i[15], this
        },
        multiplyScalar: function(e) {
            var t = this.elements;
            return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this
        },
        multiplyVector3: function(e) {
            return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."), e.applyProjection(this)
        },
        multiplyVector4: function(e) {
            return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
        },
        multiplyVector3Array: function(e) {
            return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."), this.applyToVector3Array(e)
        },
        applyToVector3Array: function() {
            var e;
            return function(t, n, i) {
                void 0 === e && (e = new THREE.Vector3), void 0 === n && (n = 0), void 0 === i && (i = t.length);
                for (var r = 0, o = n; r < i; r += 3, o += 3) e.fromArray(t, o), e.applyMatrix4(this), e.toArray(t, o);
                return t
            }
        }(),
        applyToBuffer: function() {
            var e;
            return function t(n, i, r) {
                void 0 === e && (e = new THREE.Vector3), void 0 === i && (i = 0), void 0 === r && (r = n.length / n.itemSize);
                for (var o = 0, a = i; o < r; o++, a++) e.x = n.getX(a), e.y = n.getY(a), e.z = n.getZ(a), e.applyMatrix4(this), n.setXYZ(e.x, e.y, e.z);
                return n
            }
        }(),
        rotateAxis: function(e) {
            console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), e.transformDirection(this)
        },
        crossVector: function(e) {
            return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
        },
        determinant: function() {
            var e = this.elements,
                t = e[0],
                n = e[4],
                i = e[8],
                r = e[12],
                o = e[1],
                a = e[5],
                s = e[9],
                l = e[13],
                c = e[2],
                u = e[6],
                h = e[10],
                d = e[14],
                p = e[3],
                f = e[7],
                m = e[11],
                E = e[15];
            return p * (+r * s * u - i * l * u - r * a * h + n * l * h + i * a * d - n * s * d) + f * (+t * s * d - t * l * h + r * o * h - i * o * d + i * l * c - r * s * c) + m * (+t * l * u - t * a * d - r * o * u + n * o * d + r * a * c - n * l * c) + E * (-i * a * c - t * s * u + t * a * h + i * o * u - n * o * h + n * s * c)
        },
        transpose: function() {
            var e = this.elements,
                t;
            return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this
        },
        flattenToArrayOffset: function(e, t) {
            var n = this.elements;
            return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e
        },
        getPosition: function() {
            var e;
            return function() {
                void 0 === e && (e = new THREE.Vector3), console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
                var t = this.elements;
                return e.set(t[12], t[13], t[14])
            }
        }(),
        setPosition: function(e) {
            var t = this.elements;
            return t[12] = e.x, t[13] = e.y, t[14] = e.z, this
        },
        getInverse: function(e, t) {
            var n = this.elements,
                i = e.elements,
                r = i[0],
                o = i[4],
                a = i[8],
                s = i[12],
                l = i[1],
                c = i[5],
                u = i[9],
                h = i[13],
                d = i[2],
                p = i[6],
                f = i[10],
                m = i[14],
                E = i[3],
                g = i[7],
                v = i[11],
                y = i[15];
            n[0] = u * m * g - h * f * g + h * p * v - c * m * v - u * p * y + c * f * y, n[4] = s * f * g - a * m * g - s * p * v + o * m * v + a * p * y - o * f * y, n[8] = a * h * g - s * u * g + s * c * v - o * h * v - a * c * y + o * u * y, n[12] = s * u * p - a * h * p - s * c * f + o * h * f + a * c * m - o * u * m, n[1] = h * f * E - u * m * E - h * d * v + l * m * v + u * d * y - l * f * y, n[5] = a * m * E - s * f * E + s * d * v - r * m * v - a * d * y + r * f * y, n[9] = s * u * E - a * h * E - s * l * v + r * h * v + a * l * y - r * u * y, n[13] = a * h * d - s * u * d + s * l * f - r * h * f - a * l * m + r * u * m, n[2] = c * m * E - h * p * E + h * d * g - l * m * g - c * d * y + l * p * y, n[6] = s * p * E - o * m * E - s * d * g + r * m * g + o * d * y - r * p * y, n[10] = o * h * E - s * c * E + s * l * g - r * h * g - o * l * y + r * c * y, n[14] = s * c * d - o * h * d - s * l * p + r * h * p + o * l * m - r * c * m, n[3] = u * p * E - c * f * E - u * d * g + l * f * g + c * d * v - l * p * v, n[7] = o * f * E - a * p * E + a * d * g - r * f * g - o * d * v + r * p * v, n[11] = a * c * E - o * u * E - a * l * g + r * u * g + o * l * v - r * c * v, n[15] = o * u * d - a * c * d + a * l * p - r * u * p - o * l * f + r * c * f;
            var T = r * n[0] + l * n[4] + d * n[8] + E * n[12];
            if (0 === T) {
                var x = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
                if (t) throw new Error(x);
                return console.warn(x), this.identity(), this
            }
            return this.multiplyScalar(1 / T), this
        },
        translate: function(e) {
            console.error("THREE.Matrix4: .translate() has been removed.")
        },
        rotateX: function(e) {
            console.error("THREE.Matrix4: .rotateX() has been removed.")
        },
        rotateY: function(e) {
            console.error("THREE.Matrix4: .rotateY() has been removed.")
        },
        rotateZ: function(e) {
            console.error("THREE.Matrix4: .rotateZ() has been removed.")
        },
        rotateByAxis: function(e, t) {
            console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
        },
        scale: function(e) {
            var t = this.elements,
                n = e.x,
                i = e.y,
                r = e.z;
            return t[0] *= n, t[4] *= i, t[8] *= r, t[1] *= n, t[5] *= i, t[9] *= r, t[2] *= n, t[6] *= i, t[10] *= r, t[3] *= n, t[7] *= i, t[11] *= r, this
        },
        getMaxScaleOnAxis: function() {
            var e = this.elements,
                t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
                i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
            return Math.sqrt(Math.max(t, n, i))
        },
        makeTranslation: function(e, t, n) {
            return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this
        },
        makeRotationX: function(e) {
            var t = Math.cos(e),
                n = Math.sin(e);
            return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this
        },
        makeRotationY: function(e) {
            var t = Math.cos(e),
                n = Math.sin(e);
            return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this
        },
        makeRotationZ: function(e) {
            var t = Math.cos(e),
                n = Math.sin(e);
            return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
        },
        makeRotationAxis: function(e, t) {
            var n = Math.cos(t),
                i = Math.sin(t),
                r = 1 - n,
                o = e.x,
                a = e.y,
                s = e.z,
                l = r * o,
                c = r * a;
            return this.set(l * o + n, l * a - i * s, l * s + i * a, 0, l * a + i * s, c * a + n, c * s - i * o, 0, l * s - i * a, c * s + i * o, r * s * s + n, 0, 0, 0, 0, 1), this
        },
        makeScale: function(e, t, n) {
            return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this
        },
        compose: function(e, t, n) {
            return this.makeRotationFromQuaternion(t), this.scale(n), this.setPosition(e), this
        },
        decompose: function() {
            var e, t;
            return function(n, i, r) {
                void 0 === e && (e = new THREE.Vector3), void 0 === t && (t = new THREE.Matrix4);
                var o = this.elements,
                    a = e.set(o[0], o[1], o[2]).length(),
                    s = e.set(o[4], o[5], o[6]).length(),
                    l = e.set(o[8], o[9], o[10]).length(),
                    c = this.determinant();
                c < 0 && (a = -a), n.x = o[12], n.y = o[13], n.z = o[14], t.elements.set(this.elements);
                var u = 1 / a,
                    h = 1 / s,
                    d = 1 / l;
                return t.elements[0] *= u, t.elements[1] *= u, t.elements[2] *= u, t.elements[4] *= h, t.elements[5] *= h, t.elements[6] *= h, t.elements[8] *= d, t.elements[9] *= d, t.elements[10] *= d, i.setFromRotationMatrix(t), r.x = a, r.y = s, r.z = l, this
            }
        }(),
        makeFrustum: function(e, t, n, i, r, o) {
            var a = this.elements,
                s = 2 * r / (t - e),
                l = 2 * r / (i - n),
                c = (t + e) / (t - e),
                u = (i + n) / (i - n),
                h = -(o + r) / (o - r),
                d = -2 * o * r / (o - r);
            return a[0] = s, a[4] = 0, a[8] = c, a[12] = 0, a[1] = 0, a[5] = l, a[9] = u, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = h, a[14] = d, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this
        },
        makePerspective: function(e, t, n, i) {
            var r = n * Math.tan(THREE.Math.degToRad(.5 * e)),
                o = -r,
                a = o * t,
                s = r * t;
            return this.makeFrustum(a, s, o, r, n, i)
        },
        makeOrthographic: function(e, t, n, i, r, o) {
            var a = this.elements,
                s = t - e,
                l = n - i,
                c = o - r,
                u = (t + e) / s,
                h = (n + i) / l,
                d = (o + r) / c;
            return a[0] = 2 / s, a[4] = 0, a[8] = 0, a[12] = -u, a[1] = 0, a[5] = 2 / l, a[9] = 0, a[13] = -h, a[2] = 0, a[6] = 0, a[10] = -2 / c, a[14] = -d, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this
        },
        equals: function(e) {
            for (var t = this.elements, n = e.elements, i = 0; i < 16; i++)
                if (t[i] !== n[i]) return !1;
            return !0
        },
        fromArray: function(e) {
            return this.elements.set(e), this
        },
        toArray: function() {
            var e = this.elements;
            return [e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]]
        }
    }, THREE.Ray = function(e, t) {
        this.origin = void 0 !== e ? e : new THREE.Vector3, this.direction = void 0 !== t ? t : new THREE.Vector3
    }, THREE.Ray.prototype = {
        constructor: THREE.Ray,
        set: function(e, t) {
            return this.origin.copy(e), this.direction.copy(t), this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.origin.copy(e.origin), this.direction.copy(e.direction), this
        },
        at: function(e, t) {
            var n = t || new THREE.Vector3;
            return n.copy(this.direction).multiplyScalar(e).add(this.origin)
        },
        recast: function() {
            var e = new THREE.Vector3;
            return function(t) {
                return this.origin.copy(this.at(t, e)), this
            }
        }(),
        closestPointToPoint: function(e, t) {
            var n = t || new THREE.Vector3;
            n.subVectors(e, this.origin);
            var i = n.dot(this.direction);
            return i < 0 ? n.copy(this.origin) : n.copy(this.direction).multiplyScalar(i).add(this.origin)
        },
        distanceToPoint: function(e) {
            return Math.sqrt(this.distanceSqToPoint(e))
        },
        distanceSqToPoint: function() {
            var e = new THREE.Vector3;
            return function(t) {
                var n = e.subVectors(t, this.origin).dot(this.direction);
                return n < 0 ? this.origin.distanceToSquared(t) : (e.copy(this.direction).multiplyScalar(n).add(this.origin), e.distanceToSquared(t))
            }
        }(),
        distanceSqToSegment: function() {
            var e = new THREE.Vector3,
                t = new THREE.Vector3,
                n = new THREE.Vector3;
            return function(i, r, o, a) {
                e.copy(i).add(r).multiplyScalar(.5), t.copy(r).sub(i).normalize(), n.copy(this.origin).sub(e);
                var s = .5 * i.distanceTo(r),
                    l = -this.direction.dot(t),
                    c = n.dot(this.direction),
                    u = -n.dot(t),
                    h = n.lengthSq(),
                    d = Math.abs(1 - l * l),
                    p, f, m, E;
                if (d > 0)
                    if (p = l * u - c, f = l * c - u, E = s * d, p >= 0)
                        if (f >= -E)
                            if (f <= E) {
                                var g = 1 / d;
                                p *= g, f *= g, m = p * (p + l * f + 2 * c) + f * (l * p + f + 2 * u) + h
                            } else f = s, p = Math.max(0, -(l * f + c)), m = -p * p + f * (f + 2 * u) + h;
                else f = -s, p = Math.max(0, -(l * f + c)), m = -p * p + f * (f + 2 * u) + h;
                else f <= -E ? (p = Math.max(0, -(-l * s + c)), f = p > 0 ? -s : Math.min(Math.max(-s, -u), s), m = -p * p + f * (f + 2 * u) + h) : f <= E ? (p = 0, f = Math.min(Math.max(-s, -u), s), m = f * (f + 2 * u) + h) : (p = Math.max(0, -(l * s + c)), f = p > 0 ? s : Math.min(Math.max(-s, -u), s), m = -p * p + f * (f + 2 * u) + h);
                else f = l > 0 ? -s : s, p = Math.max(0, -(l * f + c)), m = -p * p + f * (f + 2 * u) + h;
                return o && o.copy(this.direction).multiplyScalar(p).add(this.origin), a && a.copy(t).multiplyScalar(f).add(e), m
            }
        }(),
        isIntersectionSphere: function(e) {
            return this.distanceToPoint(e.center) <= e.radius
        },
        intersectSphere: function() {
            var e = new THREE.Vector3;
            return function(t, n) {
                e.subVectors(t.center, this.origin);
                var i = e.dot(this.direction),
                    r = e.dot(e) - i * i,
                    o = t.radius * t.radius;
                if (r > o) return null;
                var a = Math.sqrt(o - r),
                    s = i - a,
                    l = i + a;
                return s < 0 && l < 0 ? null : s < 0 ? this.at(l, n) : this.at(s, n)
            }
        }(),
        isIntersectionPlane: function(e) {
            var t = e.distanceToPoint(this.origin);
            if (0 === t) return !0;
            var n = e.normal.dot(this.direction);
            return n * t < 0
        },
        distanceToPlane: function(e) {
            var t = e.normal.dot(this.direction);
            if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
            var n = -(this.origin.dot(e.normal) + e.constant) / t;
            return n >= 0 ? n : null
        },
        intersectPlane: function(e, t) {
            var n = this.distanceToPlane(e);
            return null === n ? null : this.at(n, t)
        },
        isIntersectionBox: function() {
            var e = new THREE.Vector3;
            return function(t) {
                return null !== this.intersectBox(t, e)
            }
        }(),
        intersectBox: function(e, t) {
            var n, i, r, o, a, s, l = 1 / this.direction.x,
                c = 1 / this.direction.y,
                u = 1 / this.direction.z,
                h = this.origin;
            return l >= 0 ? (n = (e.min.x - h.x) * l, i = (e.max.x - h.x) * l) : (n = (e.max.x - h.x) * l, i = (e.min.x - h.x) * l), c >= 0 ? (r = (e.min.y - h.y) * c, o = (e.max.y - h.y) * c) : (r = (e.max.y - h.y) * c, o = (e.min.y - h.y) * c), n > o || r > i ? null : ((r > n || n !== n) && (n = r), (o < i || i !== i) && (i = o), u >= 0 ? (a = (e.min.z - h.z) * u, s = (e.max.z - h.z) * u) : (a = (e.max.z - h.z) * u, s = (e.min.z - h.z) * u), n > s || a > i ? null : ((a > n || n !== n) && (n = a), (s < i || i !== i) && (i = s), i < 0 ? null : this.at(n >= 0 ? n : i, t)))
        },
        intersectTriangle: function() {
            var e = new THREE.Vector3,
                t = new THREE.Vector3,
                n = new THREE.Vector3,
                i = new THREE.Vector3;
            return function(r, o, a, s, l) {
                t.subVectors(o, r), n.subVectors(a, r), i.crossVectors(t, n);
                var c = this.direction.dot(i),
                    u;
                if (c > 0) {
                    if (s) return null;
                    u = 1
                } else {
                    if (!(c < 0)) return null;
                    u = -1, c = -c
                }
                e.subVectors(this.origin, r);
                var h = u * this.direction.dot(n.crossVectors(e, n));
                if (h < 0) return null;
                var d = u * this.direction.dot(t.cross(e));
                if (d < 0) return null;
                if (h + d > c) return null;
                var p = -u * e.dot(i);
                return p < 0 ? null : this.at(p / c, l)
            }
        }(),
        applyMatrix4: function(e) {
            return this.direction.add(this.origin).applyMatrix4(e), this.origin.applyMatrix4(e), this.direction.sub(this.origin), this.direction.normalize(), this
        },
        equals: function(e) {
            return e.origin.equals(this.origin) && e.direction.equals(this.direction)
        }
    }, THREE.Sphere = function(e, t) {
        this.center = void 0 !== e ? e : new THREE.Vector3, this.radius = void 0 !== t ? t : 0
    }, THREE.Sphere.prototype = {
        constructor: THREE.Sphere,
        set: function(e, t) {
            return this.center.copy(e), this.radius = t, this
        },
        setFromPoints: function() {
            var e = new THREE.Box3;
            return function(t, n) {
                var i = this.center;
                void 0 !== n ? i.copy(n) : e.setFromPoints(t).center(i);
                for (var r = 0, o = 0, a = t.length; o < a; o++) r = Math.max(r, i.distanceToSquared(t[o]));
                return this.radius = Math.sqrt(r), this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.center.copy(e.center), this.radius = e.radius, this
        },
        empty: function() {
            return this.radius <= 0
        },
        containsPoint: function(e) {
            return e.distanceToSquared(this.center) <= this.radius * this.radius
        },
        distanceToPoint: function(e) {
            return e.distanceTo(this.center) - this.radius
        },
        intersectsSphere: function(e) {
            var t = this.radius + e.radius;
            return e.center.distanceToSquared(this.center) <= t * t
        },
        clampPoint: function(e, t) {
            var n = this.center.distanceToSquared(e),
                i = t || new THREE.Vector3;
            return i.copy(e), n > this.radius * this.radius && (i.sub(this.center).normalize(), i.multiplyScalar(this.radius).add(this.center)), i
        },
        getBoundingBox: function(e) {
            var t = e || new THREE.Box3;
            return t.set(this.center, this.center), t.expandByScalar(this.radius), t
        },
        applyMatrix4: function(e) {
            return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this
        },
        translate: function(e) {
            return this.center.add(e), this
        },
        equals: function(e) {
            return e.center.equals(this.center) && e.radius === this.radius
        }
    }, THREE.Frustum = function(e, t, n, i, r, o) {
        this.planes = [void 0 !== e ? e : new THREE.Plane, void 0 !== t ? t : new THREE.Plane, void 0 !== n ? n : new THREE.Plane, void 0 !== i ? i : new THREE.Plane, void 0 !== r ? r : new THREE.Plane, void 0 !== o ? o : new THREE.Plane]
    }, THREE.Frustum.prototype = {
        constructor: THREE.Frustum,
        set: function(e, t, n, i, r, o) {
            var a = this.planes;
            return a[0].copy(e), a[1].copy(t), a[2].copy(n), a[3].copy(i), a[4].copy(r), a[5].copy(o), this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            for (var t = this.planes, n = 0; n < 6; n++) t[n].copy(e.planes[n]);
            return this
        },
        setFromMatrix: function(e) {
            var t = this.planes,
                n = e.elements,
                i = n[0],
                r = n[1],
                o = n[2],
                a = n[3],
                s = n[4],
                l = n[5],
                c = n[6],
                u = n[7],
                h = n[8],
                d = n[9],
                p = n[10],
                f = n[11],
                m = n[12],
                E = n[13],
                g = n[14],
                v = n[15];
            return t[0].setComponents(a - i, u - s, f - h, v - m).normalize(), t[1].setComponents(a + i, u + s, f + h, v + m).normalize(), t[2].setComponents(a + r, u + l, f + d, v + E).normalize(), t[3].setComponents(a - r, u - l, f - d, v - E).normalize(), t[4].setComponents(a - o, u - c, f - p, v - g).normalize(), t[5].setComponents(a + o, u + c, f + p, v + g).normalize(), this
        },
        intersectsObject: function() {
            var e = new THREE.Sphere;
            return function(t) {
                var n = t.geometry;
                return null === n.boundingSphere && n.computeBoundingSphere(), e.copy(n.boundingSphere), e.applyMatrix4(t.matrixWorld), this.intersectsSphere(e)
            }
        }(),
        intersectsSphere: function(e) {
            for (var t = this.planes, n = e.center, i = -e.radius, r = 0; r < 6; r++) {
                var o = t[r].distanceToPoint(n);
                if (o < i) return !1
            }
            return !0
        },
        intersectsBox: function() {
            var e = new THREE.Vector3,
                t = new THREE.Vector3;
            return function(n) {
                for (var i = this.planes, r = 0; r < 6; r++) {
                    var o = i[r];
                    e.x = o.normal.x > 0 ? n.min.x : n.max.x, t.x = o.normal.x > 0 ? n.max.x : n.min.x, e.y = o.normal.y > 0 ? n.min.y : n.max.y, t.y = o.normal.y > 0 ? n.max.y : n.min.y, e.z = o.normal.z > 0 ? n.min.z : n.max.z, t.z = o.normal.z > 0 ? n.max.z : n.min.z;
                    var a = o.distanceToPoint(e),
                        s = o.distanceToPoint(t);
                    if (a < 0 && s < 0) return !1
                }
                return !0
            }
        }(),
        containsPoint: function(e) {
            for (var t = this.planes, n = 0; n < 6; n++)
                if (t[n].distanceToPoint(e) < 0) return !1;
            return !0
        }
    }, THREE.Plane = function(e, t) {
        this.normal = void 0 !== e ? e : new THREE.Vector3(1, 0, 0), this.constant = void 0 !== t ? t : 0
    }, THREE.Plane.prototype = {
        constructor: THREE.Plane,
        set: function(e, t) {
            return this.normal.copy(e), this.constant = t, this
        },
        setComponents: function(e, t, n, i) {
            return this.normal.set(e, t, n), this.constant = i, this
        },
        setFromNormalAndCoplanarPoint: function(e, t) {
            return this.normal.copy(e), this.constant = -t.dot(this.normal), this
        },
        setFromCoplanarPoints: function() {
            var e = new THREE.Vector3,
                t = new THREE.Vector3;
            return function(n, i, r) {
                var o = e.subVectors(r, i).cross(t.subVectors(n, i)).normalize();
                return this.setFromNormalAndCoplanarPoint(o, n), this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.normal.copy(e.normal), this.constant = e.constant, this
        },
        normalize: function() {
            var e = 1 / this.normal.length();
            return this.normal.multiplyScalar(e), this.constant *= e, this
        },
        negate: function() {
            return this.constant *= -1, this.normal.negate(), this
        },
        distanceToPoint: function(e) {
            return this.normal.dot(e) + this.constant
        },
        distanceToSphere: function(e) {
            return this.distanceToPoint(e.center) - e.radius
        },
        projectPoint: function(e, t) {
            return this.orthoPoint(e, t).sub(e).negate()
        },
        orthoPoint: function(e, t) {
            var n = this.distanceToPoint(e),
                i = t || new THREE.Vector3;
            return i.copy(this.normal).multiplyScalar(n)
        },
        isIntersectionLine: function(e) {
            var t = this.distanceToPoint(e.start),
                n = this.distanceToPoint(e.end);
            return t < 0 && n > 0 || n < 0 && t > 0
        },
        intersectLine: function() {
            var e = new THREE.Vector3;
            return function(t, n) {
                var i = n || new THREE.Vector3,
                    r = t.delta(e),
                    o = this.normal.dot(r);
                if (0 !== o) {
                    var a = -(t.start.dot(this.normal) + this.constant) / o;
                    if (!(a < 0 || a > 1)) return i.copy(r).multiplyScalar(a).add(t.start)
                } else if (0 === this.distanceToPoint(t.start)) return i.copy(t.start)
            }
        }(),
        coplanarPoint: function(e) {
            var t = e || new THREE.Vector3;
            return t.copy(this.normal).multiplyScalar(-this.constant)
        },
        applyMatrix4: function() {
            var e = new THREE.Vector3,
                t = new THREE.Vector3,
                n = new THREE.Matrix3;
            return function(i, r) {
                var o = r || n.getNormalMatrix(i),
                    a = e.copy(this.normal).applyMatrix3(o),
                    s = this.coplanarPoint(t);
                return s.applyMatrix4(i), this.setFromNormalAndCoplanarPoint(a, s), this
            }
        }(),
        translate: function(e) {
            return this.constant = this.constant - e.dot(this.normal), this
        },
        equals: function(e) {
            return e.normal.equals(this.normal) && e.constant === this.constant
        }
    }, THREE.Math = {
        generateUUID: function() {
            var e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),
                t = new Array(36),
                n = 0,
                i;
            return function() {
                for (var r = 0; r < 36; r++) 8 === r || 13 === r || 18 === r || 23 === r ? t[r] = "-" : 14 === r ? t[r] = "4" : (n <= 2 && (n = 33554432 + 16777216 * Math.random() | 0), i = 15 & n, n >>= 4, t[r] = e[19 === r ? 3 & i | 8 : i]);
                return t.join("")
            }
        }(),
        clamp: function(e, t, n) {
            return Math.max(t, Math.min(n, e))
        },
        euclideanModulo: function(e, t) {
            return (e % t + t) % t
        },
        mapLinear: function(e, t, n, i, r) {
            return i + (e - t) * (r - i) / (n - t)
        },
        smoothstep: function(e, t, n) {
            return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t), e * e * (3 - 2 * e))
        },
        smootherstep: function(e, t, n) {
            return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t), e * e * e * (e * (6 * e - 15) + 10))
        },
        random16: function() {
            return (65280 * Math.random() + 255 * Math.random()) / 65535
        },
        randInt: function(e, t) {
            return e + Math.floor(Math.random() * (t - e + 1))
        },
        randFloat: function(e, t) {
            return e + Math.random() * (t - e)
        },
        randFloatSpread: function(e) {
            return e * (.5 - Math.random())
        },
        degToRad: function() {
            var e = Math.PI / 180;
            return function(t) {
                return t * e
            }
        }(),
        radToDeg: function() {
            var e = 180 / Math.PI;
            return function(t) {
                return t * e
            }
        }(),
        isPowerOfTwo: function(e) {
            return 0 === (e & e - 1) && 0 !== e
        },
        nearestPowerOfTwo: function(e) {
            return Math.pow(2, Math.round(Math.log(e) / Math.LN2))
        },
        nextPowerOfTwo: function(e) {
            return e--, e |= e >> 1, e |= e >> 2, e |= e >> 4, e |= e >> 8, e |= e >> 16, e++, e
        }
    }, THREE.Spline = function(e) {
        function t(e, t, n, i, r, o, a) {
            var s = .5 * (n - e),
                l = .5 * (i - t);
            return (2 * (t - n) + s + l) * a + (-3 * (t - n) - 2 * s - l) * o + s * r + t
        }
        this.points = e;
        var n = [],
            i = {
                x: 0,
                y: 0,
                z: 0
            },
            r, o, a, s, l, c, u, h, d;
        this.initFromArray = function(e) {
            this.points = [];
            for (var t = 0; t < e.length; t++) this.points[t] = {
                x: e[t][0],
                y: e[t][1],
                z: e[t][2]
            }
        }, this.getPoint = function(e) {
            return r = (this.points.length - 1) * e, o = Math.floor(r), a = r - o, n[0] = 0 === o ? o : o - 1, n[1] = o, n[2] = o > this.points.length - 2 ? this.points.length - 1 : o + 1, n[3] = o > this.points.length - 3 ? this.points.length - 1 : o + 2, c = this.points[n[0]], u = this.points[n[1]], h = this.points[n[2]], d = this.points[n[3]], s = a * a, l = a * s, i.x = t(c.x, u.x, h.x, d.x, a, s, l), i.y = t(c.y, u.y, h.y, d.y, a, s, l), i.z = t(c.z, u.z, h.z, d.z, a, s, l), i
        }, this.getControlPointsArray = function() {
            var e, t, n = this.points.length,
                i = [];
            for (e = 0; e < n; e++) t = this.points[e], i[e] = [t.x, t.y, t.z];
            return i
        }, this.getLength = function(e) {
            var t, n, i, r, o = 0,
                a = 0,
                s = 0,
                l = new THREE.Vector3,
                c = new THREE.Vector3,
                u = [],
                h = 0;
            for (u[0] = 0, e || (e = 100), i = this.points.length * e, l.copy(this.points[0]), t = 1; t < i; t++) n = t / i, r = this.getPoint(n), c.copy(r), h += c.distanceTo(l), l.copy(r), o = (this.points.length - 1) * n, a = Math.floor(o), a !== s && (u[a] = h, s = a);
            return u[u.length] = h, {
                chunks: u,
                total: h
            }
        }, this.reparametrizeByArcLength = function(e) {
            var t, n, i, r, o, a, s, l, c = [],
                u = new THREE.Vector3,
                h = this.getLength();
            for (c.push(u.copy(this.points[0]).clone()), t = 1; t < this.points.length; t++) {
                for (a = h.chunks[t] - h.chunks[t - 1], s = Math.ceil(e * a / h.total), r = (t - 1) / (this.points.length - 1), o = t / (this.points.length - 1), n = 1; n < s - 1; n++) i = r + n * (1 / s) * (o - r), l = this.getPoint(i), c.push(u.copy(l).clone());
                c.push(u.copy(this.points[t]).clone())
            }
            this.points = c
        }
    }, THREE.Triangle = function(e, t, n) {
        this.a = void 0 !== e ? e : new THREE.Vector3, this.b = void 0 !== t ? t : new THREE.Vector3, this.c = void 0 !== n ? n : new THREE.Vector3
    }, THREE.Triangle.normal = function() {
        var e = new THREE.Vector3;
        return function(t, n, i, r) {
            var o = r || new THREE.Vector3;
            o.subVectors(i, n), e.subVectors(t, n), o.cross(e);
            var a = o.lengthSq();
            return a > 0 ? o.multiplyScalar(1 / Math.sqrt(a)) : o.set(0, 0, 0)
        }
    }(), THREE.Triangle.barycoordFromPoint = function() {
        var e = new THREE.Vector3,
            t = new THREE.Vector3,
            n = new THREE.Vector3;
        return function(i, r, o, a, s) {
            e.subVectors(a, r), t.subVectors(o, r), n.subVectors(i, r);
            var l = e.dot(e),
                c = e.dot(t),
                u = e.dot(n),
                h = t.dot(t),
                d = t.dot(n),
                p = l * h - c * c,
                f = s || new THREE.Vector3;
            if (0 === p) return f.set(-2, -1, -1);
            var m = 1 / p,
                E = (h * u - c * d) * m,
                g = (l * d - c * u) * m;
            return f.set(1 - E - g, g, E)
        }
    }(), THREE.Triangle.containsPoint = function() {
        var e = new THREE.Vector3;
        return function(t, n, i, r) {
            var o = THREE.Triangle.barycoordFromPoint(t, n, i, r, e);
            return o.x >= 0 && o.y >= 0 && o.x + o.y <= 1
        }
    }(), THREE.Triangle.prototype = {
        constructor: THREE.Triangle,
        set: function(e, t, n) {
            return this.a.copy(e), this.b.copy(t), this.c.copy(n), this
        },
        setFromPointsAndIndices: function(e, t, n, i) {
            return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
        },
        area: function() {
            var e = new THREE.Vector3,
                t = new THREE.Vector3;
            return function() {
                return e.subVectors(this.c, this.b), t.subVectors(this.a, this.b), .5 * e.cross(t).length()
            }
        }(),
        midpoint: function(e) {
            var t = e || new THREE.Vector3;
            return t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
        },
        normal: function(e) {
            return THREE.Triangle.normal(this.a, this.b, this.c, e)
        },
        plane: function(e) {
            var t = e || new THREE.Plane;
            return t.setFromCoplanarPoints(this.a, this.b, this.c)
        },
        barycoordFromPoint: function(e, t) {
            return THREE.Triangle.barycoordFromPoint(e, this.a, this.b, this.c, t)
        },
        containsPoint: function(e) {
            return THREE.Triangle.containsPoint(e, this.a, this.b, this.c)
        },
        equals: function(e) {
            return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
        }
    }, THREE.Channels = function() {
        this.mask = 1
    }, THREE.Channels.prototype = {
        constructor: THREE.Channels,
        set: function(e) {
            this.mask = 1 << e
        },
        enable: function(e) {
            this.mask |= 1 << e
        },
        toggle: function(e) {
            this.mask ^= 1 << e
        },
        disable: function(e) {
            this.mask &= ~(1 << e)
        }
    }, THREE.Clock = function(e) {
        this.autoStart = void 0 === e || e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1
    }, THREE.Clock.prototype = {
        constructor: THREE.Clock,
        start: function() {
            this.startTime = self.performance.now(), this.oldTime = this.startTime, this.running = !0
        },
        stop: function() {
            this.getElapsedTime(), this.running = !1
        },
        getElapsedTime: function() {
            return this.getDelta(), this.elapsedTime
        },
        getDelta: function() {
            var e = 0;
            if (this.autoStart && !this.running && this.start(), this.running) {
                var t = self.performance.now();
                e = .001 * (t - this.oldTime), this.oldTime = t, this.elapsedTime += e
            }
            return e
        }
    }, THREE.EventDispatcher = function() {}, THREE.EventDispatcher.prototype = {
        constructor: THREE.EventDispatcher,
        apply: function(e) {
            e.addEventListener = THREE.EventDispatcher.prototype.addEventListener, e.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener, e.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener, e.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent
        },
        addEventListener: function(e, t) {
            void 0 === this._listeners && (this._listeners = {});
            var n = this._listeners;
            void 0 === n[e] && (n[e] = []), n[e].indexOf(t) === -1 && n[e].push(t)
        },
        hasEventListener: function(e, t) {
            if (void 0 === this._listeners) return !1;
            var n = this._listeners;
            return void 0 !== n[e] && n[e].indexOf(t) !== -1
        },
        removeEventListener: function(e, t) {
            if (void 0 !== this._listeners) {
                var n = this._listeners,
                    i = n[e];
                if (void 0 !== i) {
                    var r = i.indexOf(t);
                    r !== -1 && i.splice(r, 1)
                }
            }
        },
        dispatchEvent: function(e) {
            if (void 0 !== this._listeners) {
                var t = this._listeners,
                    n = t[e.type];
                if (void 0 !== n) {
                    e.target = this;
                    for (var i = [], r = n.length, o = 0; o < r; o++) i[o] = n[o];
                    for (var o = 0; o < r; o++) i[o].call(this, e)
                }
            }
        }
    },
    function(e) {
        function t(e, t) {
            return e.distance - t.distance
        }

        function n(e, t, i, r) {
            if (e.raycast(t, i), r === !0)
                for (var o = e.children, a = 0, s = o.length; a < s; a++) n(o[a], t, i, !0)
        }
        e.Raycaster = function(t, n, i, r) {
            this.ray = new e.Ray(t, n), this.near = i || 0, this.far = r || 1 / 0, this.params = {
                Mesh: {},
                Line: {},
                LOD: {},
                Points: {
                    threshold: 1
                },
                Sprite: {}
            }, Object.defineProperties(this.params, {
                PointCloud: {
                    get: function() {
                        return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points
                    }
                }
            })
        }, e.Raycaster.prototype = {
            constructor: e.Raycaster,
            linePrecision: 1,
            set: function(e, t) {
                this.ray.set(e, t)
            },
            setFromCamera: function(t, n) {
                n instanceof e.PerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(n.matrixWorld), this.ray.direction.set(t.x, t.y, .5).unproject(n).sub(this.ray.origin).normalize()) : n instanceof e.OrthographicCamera ? (this.ray.origin.set(t.x, t.y, -1).unproject(n), this.ray.direction.set(0, 0, -1).transformDirection(n.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.")
            },
            intersectObject: function(e, i) {
                var r = [];
                return n(e, this, r, i), r.sort(t), r
            },
            intersectObjects: function(e, i) {
                var r = [];
                if (Array.isArray(e) === !1) return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), r;
                for (var o = 0, a = e.length; o < a; o++) n(e[o], this, r, i);
                return r.sort(t), r
            }
        }
    }(THREE), THREE.Object3D = function() {
        function e() {
            r.setFromEuler(i, !1)
        }

        function t() {
            i.setFromQuaternion(r, void 0, !1)
        }
        Object.defineProperty(this, "id", {
            value: THREE.Object3DIdCount++
        }), this.uuid = THREE.Math.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.channels = new THREE.Channels, this.children = [], this.up = THREE.Object3D.DefaultUp.clone();
        var n = new THREE.Vector3,
            i = new THREE.Euler,
            r = new THREE.Quaternion,
            o = new THREE.Vector3(1, 1, 1);
        i.onChange(e), r.onChange(t), Object.defineProperties(this, {
            position: {
                enumerable: !0,
                value: n
            },
            rotation: {
                enumerable: !0,
                value: i
            },
            quaternion: {
                enumerable: !0,
                value: r
            },
            scale: {
                enumerable: !0,
                value: o
            },
            modelViewMatrix: {
                value: new THREE.Matrix4
            },
            normalMatrix: {
                value: new THREE.Matrix3
            }
        }), this.rotationAutoUpdate = !0, this.matrix = new THREE.Matrix4, this.matrixWorld = new THREE.Matrix4, this.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {}
    }, THREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0), THREE.Object3D.DefaultMatrixAutoUpdate = !0, THREE.Object3D.prototype = {
        constructor: THREE.Object3D,
        get eulerOrder() {
            return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order
        },
        set eulerOrder(e) {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = e
        },
        get useQuaternion() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
        },
        set useQuaternion(e) {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
        },
        set renderDepth(e) {
            console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
        },
        applyMatrix: function(e) {
            this.matrix.multiplyMatrices(e, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale)
        },
        setRotationFromAxisAngle: function(e, t) {
            this.quaternion.setFromAxisAngle(e, t)
        },
        setRotationFromEuler: function(e) {
            this.quaternion.setFromEuler(e, !0)
        },
        setRotationFromMatrix: function(e) {
            this.quaternion.setFromRotationMatrix(e)
        },
        setRotationFromQuaternion: function(e) {
            this.quaternion.copy(e)
        },
        rotateOnAxis: function() {
            var e = new THREE.Quaternion;
            return function(t, n) {
                return e.setFromAxisAngle(t, n), this.quaternion.multiply(e), this
            }
        }(),
        rotateX: function() {
            var e = new THREE.Vector3(1, 0, 0);
            return function(t) {
                return this.rotateOnAxis(e, t)
            }
        }(),
        rotateY: function() {
            var e = new THREE.Vector3(0, 1, 0);
            return function(t) {
                return this.rotateOnAxis(e, t)
            }
        }(),
        rotateZ: function() {
            var e = new THREE.Vector3(0, 0, 1);
            return function(t) {
                return this.rotateOnAxis(e, t)
            }
        }(),
        translateOnAxis: function() {
            var e = new THREE.Vector3;
            return function(t, n) {
                return e.copy(t).applyQuaternion(this.quaternion), this.position.add(e.multiplyScalar(n)), this
            }
        }(),
        translate: function(e, t) {
            return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(t, e)
        },
        translateX: function() {
            var e = new THREE.Vector3(1, 0, 0);
            return function(t) {
                return this.translateOnAxis(e, t)
            }
        }(),
        translateY: function() {
            var e = new THREE.Vector3(0, 1, 0);
            return function(t) {
                return this.translateOnAxis(e, t)
            }
        }(),
        translateZ: function() {
            var e = new THREE.Vector3(0, 0, 1);
            return function(t) {
                return this.translateOnAxis(e, t)
            }
        }(),
        localToWorld: function(e) {
            return e.applyMatrix4(this.matrixWorld)
        },
        worldToLocal: function() {
            var e = new THREE.Matrix4;
            return function(t) {
                return t.applyMatrix4(e.getInverse(this.matrixWorld))
            }
        }(),
        lookAt: function() {
            var e = new THREE.Matrix4;
            return function(t) {
                e.lookAt(t, this.position, this.up), this.quaternion.setFromRotationMatrix(e)
            }
        }(),
        add: function(e) {
            if (arguments.length > 1) {
                for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
                return this
            }
            return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e instanceof THREE.Object3D ? (null !== e.parent && e.parent.remove(e), e.parent = this, e.dispatchEvent({
                type: "added"
            }), this.children.push(e)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this)
        },
        remove: function(e) {
            if (arguments.length > 1)
                for (var t = 0; t < arguments.length; t++) this.remove(arguments[t]);
            var n = this.children.indexOf(e);
            n !== -1 && (e.parent = null, e.dispatchEvent({
                type: "removed"
            }), this.children.splice(n, 1))
        },
        getChildByName: function(e) {
            return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(e)
        },
        getObjectById: function(e) {
            return this.getObjectByProperty("id", e)
        },
        getObjectByName: function(e) {
            return this.getObjectByProperty("name", e)
        },
        getObjectByProperty: function(e, t) {
            if (this[e] === t) return this;
            for (var n = 0, i = this.children.length; n < i; n++) {
                var r = this.children[n],
                    o = r.getObjectByProperty(e, t);
                if (void 0 !== o) return o
            }
        },
        getWorldPosition: function(e) {
            var t = e || new THREE.Vector3;
            return this.updateMatrixWorld(!0), t.setFromMatrixPosition(this.matrixWorld)
        },
        getWorldQuaternion: function() {
            var e = new THREE.Vector3,
                t = new THREE.Vector3;
            return function(n) {
                var i = n || new THREE.Quaternion;
                return this.updateMatrixWorld(!0), this.matrixWorld.decompose(e, i, t), i
            }
        }(),
        getWorldRotation: function() {
            var e = new THREE.Quaternion;
            return function(t) {
                var n = t || new THREE.Euler;
                return this.getWorldQuaternion(e), n.setFromQuaternion(e, this.rotation.order, !1)
            }
        }(),
        getWorldScale: function() {
            var e = new THREE.Vector3,
                t = new THREE.Quaternion;
            return function(n) {
                var i = n || new THREE.Vector3;
                return this.updateMatrixWorld(!0), this.matrixWorld.decompose(e, t, i), i
            }
        }(),
        getWorldDirection: function() {
            var e = new THREE.Quaternion;
            return function(t) {
                var n = t || new THREE.Vector3;
                return this.getWorldQuaternion(e), n.set(0, 0, 1).applyQuaternion(e)
            }
        }(),
        raycast: function() {},
        traverse: function(e) {
            e(this);
            for (var t = this.children, n = 0, i = t.length; n < i; n++) t[n].traverse(e)
        },
        traverseVisible: function(e) {
            if (this.visible !== !1) {
                e(this);
                for (var t = this.children, n = 0, i = t.length; n < i; n++) t[n].traverseVisible(e)
            }
        },
        traverseAncestors: function(e) {
            var t = this.parent;
            null !== t && (e(t), t.traverseAncestors(e))
        },
        updateMatrix: function() {
            this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
        },
        updateMatrixWorld: function(e) {
            this.matrixAutoUpdate === !0 && this.updateMatrix(), this.matrixWorldNeedsUpdate !== !0 && e !== !0 || (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
            for (var t = 0, n = this.children.length; t < n; t++) this.children[t].updateMatrixWorld(e)
        },
        toJSON: function(e) {
            function t(e) {
                var t = [];
                for (var n in e) {
                    var i = e[n];
                    delete i.metadata, t.push(i)
                }
                return t
            }
            var n = void 0 === e,
                i = {};
            n && (e = {
                geometries: {},
                materials: {},
                textures: {},
                images: {}
            }, i.metadata = {
                version: 4.4,
                type: "Object",
                generator: "Object3D.toJSON"
            });
            var r = {};
            if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData), this.castShadow === !0 && (r.castShadow = !0), this.receiveShadow === !0 && (r.receiveShadow = !0), this.visible === !1 && (r.visible = !1), r.matrix = this.matrix.toArray(), void 0 !== this.geometry && (void 0 === e.geometries[this.geometry.uuid] && (e.geometries[this.geometry.uuid] = this.geometry.toJSON(e)), r.geometry = this.geometry.uuid), void 0 !== this.material && (void 0 === e.materials[this.material.uuid] && (e.materials[this.material.uuid] = this.material.toJSON(e)), r.material = this.material.uuid), this.children.length > 0) {
                r.children = [];
                for (var o = 0; o < this.children.length; o++) r.children.push(this.children[o].toJSON(e).object)
            }
            if (n) {
                var a = t(e.geometries),
                    s = t(e.materials),
                    l = t(e.textures),
                    c = t(e.images);
                a.length > 0 && (i.geometries = a), s.length > 0 && (i.materials = s), l.length > 0 && (i.textures = l), c.length > 0 && (i.images = c)
            }
            return i.object = r, i
        },
        clone: function(e) {
            return (new this.constructor).copy(this, e)
        },
        copy: function(e, t) {
            if (void 0 === t && (t = !0), this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.rotationAutoUpdate = e.rotationAutoUpdate, this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), t === !0)
                for (var n = 0; n < e.children.length; n++) {
                    var i = e.children[n];
                    this.add(i.clone())
                }
            return this
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype), THREE.Object3DIdCount = 0, THREE.Face3 = function(e, t, n, i, r, o) {
        this.a = e, this.b = t, this.c = n, this.normal = i instanceof THREE.Vector3 ? i : new THREE.Vector3, this.vertexNormals = Array.isArray(i) ? i : [], this.color = r instanceof THREE.Color ? r : new THREE.Color, this.vertexColors = Array.isArray(r) ? r : [], this.materialIndex = void 0 !== o ? o : 0
    }, THREE.Face3.prototype = {
        constructor: THREE.Face3,
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            this.a = e.a, this.b = e.b, this.c = e.c, this.normal.copy(e.normal), this.color.copy(e.color), this.materialIndex = e.materialIndex;
            for (var t = 0, n = e.vertexNormals.length; t < n; t++) this.vertexNormals[t] = e.vertexNormals[t].clone();
            for (var t = 0, n = e.vertexColors.length; t < n; t++) this.vertexColors[t] = e.vertexColors[t].clone();
            return this
        }
    }, THREE.Face4 = function(e, t, n, i, r, o, a) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new THREE.Face3(e, t, n, r, o, a)
    }, THREE.BufferAttribute = function(e, t) {
        this.uuid = THREE.Math.generateUUID(), this.array = e, this.itemSize = t, this.dynamic = !1, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0
    }, THREE.BufferAttribute.prototype = {
        constructor: THREE.BufferAttribute,
        get length() {
            return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."), this.array.length
        },
        get count() {
            return this.array.length / this.itemSize
        },
        set needsUpdate(e) {
            e === !0 && this.version++
        },
        setDynamic: function(e) {
            return this.dynamic = e, this
        },
        copy: function(e) {
            return this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.dynamic = e.dynamic, this
        },
        copyAt: function(e, t, n) {
            e *= this.itemSize, n *= t.itemSize;
            for (var i = 0, r = this.itemSize; i < r; i++) this.array[e + i] = t.array[n + i];
            return this
        },
        copyArray: function(e) {
            return this.array.set(e), this
        },
        copyColorsArray: function(e) {
            for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
                var o = e[i];
                void 0 === o && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i), o = new THREE.Color), t[n++] = o.r, t[n++] = o.g, t[n++] = o.b
            }
            return this
        },
        copyIndicesArray: function(e) {
            for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
                var o = e[i];
                t[n++] = o.a, t[n++] = o.b, t[n++] = o.c
            }
            return this
        },
        copyVector2sArray: function(e) {
            for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
                var o = e[i];
                void 0 === o && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i), o = new THREE.Vector2), t[n++] = o.x, t[n++] = o.y
            }
            return this
        },
        copyVector3sArray: function(e) {
            for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
                var o = e[i];
                void 0 === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i), o = new THREE.Vector3), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z
            }
            return this
        },
        copyVector4sArray: function(e) {
            for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
                var o = e[i];
                void 0 === o && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i), o = new THREE.Vector4), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z, t[n++] = o.w
            }
            return this
        },
        set: function(e, t) {
            return void 0 === t && (t = 0), this.array.set(e, t), this
        },
        getX: function(e) {
            return this.array[e * this.itemSize]
        },
        setX: function(e, t) {
            return this.array[e * this.itemSize] = t, this
        },
        getY: function(e) {
            return this.array[e * this.itemSize + 1]
        },
        setY: function(e, t) {
            return this.array[e * this.itemSize + 1] = t, this
        },
        getZ: function(e) {
            return this.array[e * this.itemSize + 2];
        },
        setZ: function(e, t) {
            return this.array[e * this.itemSize + 2] = t, this
        },
        getW: function(e) {
            return this.array[e * this.itemSize + 3]
        },
        setW: function(e, t) {
            return this.array[e * this.itemSize + 3] = t, this
        },
        setXY: function(e, t, n) {
            return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this
        },
        setXYZ: function(e, t, n, i) {
            return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this
        },
        setXYZW: function(e, t, n, i, r) {
            return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this.array[e + 3] = r, this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }, THREE.Int8Attribute = function(e, t) {
        return new THREE.BufferAttribute(new Int8Array(e), t)
    }, THREE.Uint8Attribute = function(e, t) {
        return new THREE.BufferAttribute(new Uint8Array(e), t)
    }, THREE.Uint8ClampedAttribute = function(e, t) {
        return new THREE.BufferAttribute(new Uint8ClampedArray(e), t)
    }, THREE.Int16Attribute = function(e, t) {
        return new THREE.BufferAttribute(new Int16Array(e), t)
    }, THREE.Uint16Attribute = function(e, t) {
        return new THREE.BufferAttribute(new Uint16Array(e), t)
    }, THREE.Int32Attribute = function(e, t) {
        return new THREE.BufferAttribute(new Int32Array(e), t)
    }, THREE.Uint32Attribute = function(e, t) {
        return new THREE.BufferAttribute(new Uint32Array(e), t)
    }, THREE.Float32Attribute = function(e, t) {
        return new THREE.BufferAttribute(new Float32Array(e), t)
    }, THREE.Float64Attribute = function(e, t) {
        return new THREE.BufferAttribute(new Float64Array(e), t)
    }, THREE.DynamicBufferAttribute = function(e, t) {
        return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."), new THREE.BufferAttribute(e, t).setDynamic(!0)
    }, THREE.InstancedBufferAttribute = function(e, t, n) {
        THREE.BufferAttribute.call(this, e, t), this.meshPerAttribute = n || 1
    }, THREE.InstancedBufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype), THREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute, THREE.InstancedBufferAttribute.prototype.copy = function(e) {
        return THREE.BufferAttribute.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this
    }, THREE.InterleavedBuffer = function(e, t) {
        this.uuid = THREE.Math.generateUUID(), this.array = e, this.stride = t, this.dynamic = !1, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0
    }, THREE.InterleavedBuffer.prototype = {
        constructor: THREE.InterleavedBuffer,
        get length() {
            return this.array.length
        },
        get count() {
            return this.array.length / this.stride
        },
        set needsUpdate(e) {
            e === !0 && this.version++
        },
        setDynamic: function(e) {
            return this.dynamic = e, this
        },
        copy: function(e) {
            this.array = new e.array.constructor(e.array), this.stride = e.stride, this.dynamic = e.dynamic
        },
        copyAt: function(e, t, n) {
            e *= this.stride, n *= t.stride;
            for (var i = 0, r = this.stride; i < r; i++) this.array[e + i] = t.array[n + i];
            return this
        },
        set: function(e, t) {
            return void 0 === t && (t = 0), this.array.set(e, t), this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }, THREE.InstancedInterleavedBuffer = function(e, t, n) {
        THREE.InterleavedBuffer.call(this, e, t), this.meshPerAttribute = n || 1
    }, THREE.InstancedInterleavedBuffer.prototype = Object.create(THREE.InterleavedBuffer.prototype), THREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer, THREE.InstancedInterleavedBuffer.prototype.copy = function(e) {
        return THREE.InterleavedBuffer.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this
    }, THREE.InterleavedBufferAttribute = function(e, t, n) {
        this.uuid = THREE.Math.generateUUID(), this.data = e, this.itemSize = t, this.offset = n
    }, THREE.InterleavedBufferAttribute.prototype = {
        constructor: THREE.InterleavedBufferAttribute,
        get length() {
            return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."), this.array.length
        },
        get count() {
            return this.data.array.length / this.data.stride
        },
        setX: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset] = t, this
        },
        setY: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset + 1] = t, this
        },
        setZ: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset + 2] = t, this
        },
        setW: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset + 3] = t, this
        },
        getX: function(e) {
            return this.data.array[e * this.data.stride + this.offset]
        },
        getY: function(e) {
            return this.data.array[e * this.data.stride + this.offset + 1]
        },
        getZ: function(e) {
            return this.data.array[e * this.data.stride + this.offset + 2]
        },
        getW: function(e) {
            return this.data.array[e * this.data.stride + this.offset + 3]
        },
        setXY: function(e, t, n) {
            return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this
        },
        setXYZ: function(e, t, n, i) {
            return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this
        },
        setXYZW: function(e, t, n, i, r) {
            return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this.data.array[e + 3] = r, this
        }
    }, THREE.Geometry = function() {
        Object.defineProperty(this, "id", {
            value: THREE.GeometryIdCount++
        }), this.uuid = THREE.Math.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [
            []
        ], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.elementsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1
    }, THREE.Geometry.prototype = {
        constructor: THREE.Geometry,
        applyMatrix: function(e) {
            for (var t = (new THREE.Matrix3).getNormalMatrix(e), n = 0, i = this.vertices.length; n < i; n++) {
                var r = this.vertices[n];
                r.applyMatrix4(e)
            }
            for (var n = 0, i = this.faces.length; n < i; n++) {
                var o = this.faces[n];
                o.normal.applyMatrix3(t).normalize();
                for (var a = 0, s = o.vertexNormals.length; a < s; a++) o.vertexNormals[a].applyMatrix3(t).normalize()
            }
            null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0
        },
        rotateX: function() {
            var e;
            return function t(n) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeRotationX(n), this.applyMatrix(e), this
            }
        }(),
        rotateY: function() {
            var e;
            return function t(n) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeRotationY(n), this.applyMatrix(e), this
            }
        }(),
        rotateZ: function() {
            var e;
            return function t(n) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeRotationZ(n), this.applyMatrix(e), this
            }
        }(),
        translate: function() {
            var e;
            return function t(n, i, r) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeTranslation(n, i, r), this.applyMatrix(e), this
            }
        }(),
        scale: function() {
            var e;
            return function t(n, i, r) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeScale(n, i, r), this.applyMatrix(e), this
            }
        }(),
        lookAt: function() {
            var e;
            return function t(n) {
                void 0 === e && (e = new THREE.Object3D), e.lookAt(n), e.updateMatrix(), this.applyMatrix(e.matrix)
            }
        }(),
        fromBufferGeometry: function(e) {
            function t(e, t, i) {
                var r = void 0 !== a ? [u[e].clone(), u[t].clone(), u[i].clone()] : [],
                    o = void 0 !== s ? [n.colors[e].clone(), n.colors[t].clone(), n.colors[i].clone()] : [],
                    p = new THREE.Face3(e, t, i, r, o);
                n.faces.push(p), void 0 !== l && n.faceVertexUvs[0].push([h[e].clone(), h[t].clone(), h[i].clone()]), void 0 !== c && n.faceVertexUvs[1].push([d[e].clone(), d[t].clone(), d[i].clone()])
            }
            var n = this,
                i = null !== e.index ? e.index.array : void 0,
                r = e.attributes,
                o = r.position.array,
                a = void 0 !== r.normal ? r.normal.array : void 0,
                s = void 0 !== r.color ? r.color.array : void 0,
                l = void 0 !== r.uv ? r.uv.array : void 0,
                c = void 0 !== r.uv2 ? r.uv2.array : void 0;
            void 0 !== c && (this.faceVertexUvs[1] = []);
            for (var u = [], h = [], d = [], p = 0, f = 0, m = 0; p < o.length; p += 3, f += 2, m += 4) n.vertices.push(new THREE.Vector3(o[p], o[p + 1], o[p + 2])), void 0 !== a && u.push(new THREE.Vector3(a[p], a[p + 1], a[p + 2])), void 0 !== s && n.colors.push(new THREE.Color(s[p], s[p + 1], s[p + 2])), void 0 !== l && h.push(new THREE.Vector2(l[f], l[f + 1])), void 0 !== c && d.push(new THREE.Vector2(c[f], c[f + 1]));
            if (void 0 !== i) {
                var E = e.groups;
                if (E.length > 0)
                    for (var p = 0; p < E.length; p++)
                        for (var g = E[p], v = g.start, y = g.count, f = v, T = v + y; f < T; f += 3) t(i[f], i[f + 1], i[f + 2]);
                else
                    for (var p = 0; p < i.length; p += 3) t(i[p], i[p + 1], i[p + 2])
            } else
                for (var p = 0; p < o.length / 3; p += 3) t(p, p + 1, p + 2);
            return this.computeFaceNormals(), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), this
        },
        center: function() {
            this.computeBoundingBox();
            var e = this.boundingBox.center().negate();
            return this.translate(e.x, e.y, e.z), e
        },
        normalize: function() {
            this.computeBoundingSphere();
            var e = this.boundingSphere.center,
                t = this.boundingSphere.radius,
                n = 0 === t ? 1 : 1 / t,
                i = new THREE.Matrix4;
            return i.set(n, 0, 0, -n * e.x, 0, n, 0, -n * e.y, 0, 0, n, -n * e.z, 0, 0, 0, 1), this.applyMatrix(i), this
        },
        computeFaceNormals: function() {
            for (var e = new THREE.Vector3, t = new THREE.Vector3, n = 0, i = this.faces.length; n < i; n++) {
                var r = this.faces[n],
                    o = this.vertices[r.a],
                    a = this.vertices[r.b],
                    s = this.vertices[r.c];
                e.subVectors(s, a), t.subVectors(o, a), e.cross(t), e.normalize(), r.normal.copy(e)
            }
        },
        computeVertexNormals: function(e) {
            var t, n, i, r, o, a;
            for (a = new Array(this.vertices.length), t = 0, n = this.vertices.length; t < n; t++) a[t] = new THREE.Vector3;
            if (e) {
                var s, l, c, u = new THREE.Vector3,
                    h = new THREE.Vector3;
                for (i = 0, r = this.faces.length; i < r; i++) o = this.faces[i], s = this.vertices[o.a], l = this.vertices[o.b], c = this.vertices[o.c], u.subVectors(c, l), h.subVectors(s, l), u.cross(h), a[o.a].add(u), a[o.b].add(u), a[o.c].add(u)
            } else
                for (i = 0, r = this.faces.length; i < r; i++) o = this.faces[i], a[o.a].add(o.normal), a[o.b].add(o.normal), a[o.c].add(o.normal);
            for (t = 0, n = this.vertices.length; t < n; t++) a[t].normalize();
            for (i = 0, r = this.faces.length; i < r; i++) {
                o = this.faces[i];
                var d = o.vertexNormals;
                3 === d.length ? (d[0].copy(a[o.a]), d[1].copy(a[o.b]), d[2].copy(a[o.c])) : (d[0] = a[o.a].clone(), d[1] = a[o.b].clone(), d[2] = a[o.c].clone())
            }
        },
        computeMorphNormals: function() {
            var e, t, n, i, r;
            for (n = 0, i = this.faces.length; n < i; n++)
                for (r = this.faces[n], r.__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : r.__originalFaceNormal = r.normal.clone(), r.__originalVertexNormals || (r.__originalVertexNormals = []), e = 0, t = r.vertexNormals.length; e < t; e++) r.__originalVertexNormals[e] ? r.__originalVertexNormals[e].copy(r.vertexNormals[e]) : r.__originalVertexNormals[e] = r.vertexNormals[e].clone();
            var o = new THREE.Geometry;
            for (o.faces = this.faces, e = 0, t = this.morphTargets.length; e < t; e++) {
                if (!this.morphNormals[e]) {
                    this.morphNormals[e] = {}, this.morphNormals[e].faceNormals = [], this.morphNormals[e].vertexNormals = [];
                    var a = this.morphNormals[e].faceNormals,
                        s = this.morphNormals[e].vertexNormals,
                        l, c;
                    for (n = 0, i = this.faces.length; n < i; n++) l = new THREE.Vector3, c = {
                        a: new THREE.Vector3,
                        b: new THREE.Vector3,
                        c: new THREE.Vector3
                    }, a.push(l), s.push(c)
                }
                var u = this.morphNormals[e];
                o.vertices = this.morphTargets[e].vertices, o.computeFaceNormals(), o.computeVertexNormals();
                var l, c;
                for (n = 0, i = this.faces.length; n < i; n++) r = this.faces[n], l = u.faceNormals[n], c = u.vertexNormals[n], l.copy(r.normal), c.a.copy(r.vertexNormals[0]), c.b.copy(r.vertexNormals[1]), c.c.copy(r.vertexNormals[2])
            }
            for (n = 0, i = this.faces.length; n < i; n++) r = this.faces[n], r.normal = r.__originalFaceNormal, r.vertexNormals = r.__originalVertexNormals
        },
        computeTangents: function() {
            console.warn("THREE.Geometry: .computeTangents() has been removed.")
        },
        computeLineDistances: function() {
            for (var e = 0, t = this.vertices, n = 0, i = t.length; n < i; n++) n > 0 && (e += t[n].distanceTo(t[n - 1])), this.lineDistances[n] = e
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new THREE.Box3), this.boundingBox.setFromPoints(this.vertices)
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere), this.boundingSphere.setFromPoints(this.vertices)
        },
        merge: function(e, t, n) {
            if (e instanceof THREE.Geometry == !1) return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e);
            var i, r = this.vertices.length,
                o = this.vertices,
                a = e.vertices,
                s = this.faces,
                l = e.faces,
                c = this.faceVertexUvs[0],
                u = e.faceVertexUvs[0];
            void 0 === n && (n = 0), void 0 !== t && (i = (new THREE.Matrix3).getNormalMatrix(t));
            for (var h = 0, d = a.length; h < d; h++) {
                var p = a[h],
                    f = p.clone();
                void 0 !== t && f.applyMatrix4(t), o.push(f)
            }
            for (h = 0, d = l.length; h < d; h++) {
                var m = l[h],
                    E, g, v, y = m.vertexNormals,
                    T = m.vertexColors;
                E = new THREE.Face3(m.a + r, m.b + r, m.c + r), E.normal.copy(m.normal), void 0 !== i && E.normal.applyMatrix3(i).normalize();
                for (var x = 0, R = y.length; x < R; x++) g = y[x].clone(), void 0 !== i && g.applyMatrix3(i).normalize(), E.vertexNormals.push(g);
                E.color.copy(m.color);
                for (var x = 0, R = T.length; x < R; x++) v = T[x], E.vertexColors.push(v.clone());
                E.materialIndex = m.materialIndex + n, s.push(E)
            }
            for (h = 0, d = u.length; h < d; h++) {
                var w = u[h],
                    b = [];
                if (void 0 !== w) {
                    for (var x = 0, R = w.length; x < R; x++) b.push(w[x].clone());
                    c.push(b)
                }
            }
        },
        mergeMesh: function(e) {
            return e instanceof THREE.Mesh == !1 ? void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", e) : (e.matrixAutoUpdate && e.updateMatrix(), void this.merge(e.geometry, e.matrix))
        },
        mergeVertices: function() {
            var e = {},
                t = [],
                n = [],
                i, r, o = 4,
                a = Math.pow(10, o),
                s, l, c, u, h, d;
            for (s = 0, l = this.vertices.length; s < l; s++) i = this.vertices[s], r = Math.round(i.x * a) + "_" + Math.round(i.y * a) + "_" + Math.round(i.z * a), void 0 === e[r] ? (e[r] = s, t.push(this.vertices[s]), n[s] = t.length - 1) : n[s] = n[e[r]];
            var p = [];
            for (s = 0, l = this.faces.length; s < l; s++) {
                c = this.faces[s], c.a = n[c.a], c.b = n[c.b], c.c = n[c.c], u = [c.a, c.b, c.c];
                for (var f = -1, m = 0; m < 3; m++)
                    if (u[m] === u[(m + 1) % 3]) {
                        f = m, p.push(s);
                        break
                    }
            }
            for (s = p.length - 1; s >= 0; s--) {
                var E = p[s];
                for (this.faces.splice(E, 1), h = 0, d = this.faceVertexUvs.length; h < d; h++) this.faceVertexUvs[h].splice(E, 1)
            }
            var g = this.vertices.length - t.length;
            return this.vertices = t, g
        },
        sortFacesByMaterialIndex: function() {
            function e(e, t) {
                return e.materialIndex - t.materialIndex
            }
            for (var t = this.faces, n = t.length, i = 0; i < n; i++) t[i]._id = i;
            t.sort(e);
            var r = this.faceVertexUvs[0],
                o = this.faceVertexUvs[1],
                a, s;
            r && r.length === n && (a = []), o && o.length === n && (s = []);
            for (var i = 0; i < n; i++) {
                var l = t[i]._id;
                a && a.push(r[l]), s && s.push(o[l])
            }
            a && (this.faceVertexUvs[0] = a), s && (this.faceVertexUvs[1] = s)
        },
        toJSON: function() {
            function e(e, t, n) {
                return n ? e | 1 << t : e & ~(1 << t)
            }

            function t(e) {
                var t = e.x.toString() + e.y.toString() + e.z.toString();
                return void 0 !== d[t] ? d[t] : (d[t] = h.length / 3, h.push(e.x, e.y, e.z), d[t])
            }

            function n(e) {
                var t = e.r.toString() + e.g.toString() + e.b.toString();
                return void 0 !== f[t] ? f[t] : (f[t] = p.length, p.push(e.getHex()), f[t])
            }

            function i(e) {
                var t = e.x.toString() + e.y.toString();
                return void 0 !== E[t] ? E[t] : (E[t] = m.length / 2, m.push(e.x, e.y), E[t])
            }
            var r = {
                metadata: {
                    version: 4.4,
                    type: "Geometry",
                    generator: "Geometry.toJSON"
                }
            };
            if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), void 0 !== this.parameters) {
                var o = this.parameters;
                for (var a in o) void 0 !== o[a] && (r[a] = o[a]);
                return r
            }
            for (var s = [], l = 0; l < this.vertices.length; l++) {
                var c = this.vertices[l];
                s.push(c.x, c.y, c.z)
            }
            for (var u = [], h = [], d = {}, p = [], f = {}, m = [], E = {}, l = 0; l < this.faces.length; l++) {
                var g = this.faces[l],
                    v = !1,
                    y = !1,
                    T = void 0 !== this.faceVertexUvs[0][l],
                    x = g.normal.length() > 0,
                    R = g.vertexNormals.length > 0,
                    w = 1 !== g.color.r || 1 !== g.color.g || 1 !== g.color.b,
                    b = g.vertexColors.length > 0,
                    H = 0;
                if (H = e(H, 0, 0), H = e(H, 1, v), H = e(H, 2, y), H = e(H, 3, T), H = e(H, 4, x), H = e(H, 5, R), H = e(H, 6, w), H = e(H, 7, b), u.push(H), u.push(g.a, g.b, g.c), T) {
                    var S = this.faceVertexUvs[0][l];
                    u.push(i(S[0]), i(S[1]), i(S[2]))
                }
                if (x && u.push(t(g.normal)), R) {
                    var _ = g.vertexNormals;
                    u.push(t(_[0]), t(_[1]), t(_[2]))
                }
                if (w && u.push(n(g.color)), b) {
                    var M = g.vertexColors;
                    u.push(n(M[0]), n(M[1]), n(M[2]))
                }
            }
            return r.data = {}, r.data.vertices = s, r.data.normals = h, p.length > 0 && (r.data.colors = p), m.length > 0 && (r.data.uvs = [m]), r.data.faces = u, r
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            this.vertices = [], this.faces = [], this.faceVertexUvs = [
                []
            ];
            for (var t = e.vertices, n = 0, i = t.length; n < i; n++) this.vertices.push(t[n].clone());
            for (var r = e.faces, n = 0, i = r.length; n < i; n++) this.faces.push(r[n].clone());
            for (var n = 0, i = e.faceVertexUvs.length; n < i; n++) {
                var o = e.faceVertexUvs[n];
                void 0 === this.faceVertexUvs[n] && (this.faceVertexUvs[n] = []);
                for (var a = 0, s = o.length; a < s; a++) {
                    for (var l = o[a], c = [], u = 0, h = l.length; u < h; u++) {
                        var d = l[u];
                        c.push(d.clone())
                    }
                    this.faceVertexUvs[n].push(c)
                }
            }
            return this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype), THREE.GeometryIdCount = 0, THREE.DirectGeometry = function() {
        Object.defineProperty(this, "id", {
            value: THREE.GeometryIdCount++
        }), this.uuid = THREE.Math.generateUUID(), this.name = "", this.type = "DirectGeometry", this.indices = [], this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.groupsNeedUpdate = !1
    }, THREE.DirectGeometry.prototype = {
        constructor: THREE.DirectGeometry,
        computeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,
        computeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,
        computeFaceNormals: function() {
            console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")
        },
        computeVertexNormals: function() {
            console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")
        },
        computeGroups: function(e) {
            for (var t, n = [], i, r = e.faces, o = 0; o < r.length; o++) {
                var a = r[o];
                a.materialIndex !== i && (i = a.materialIndex, void 0 !== t && (t.count = 3 * o - t.start, n.push(t)), t = {
                    start: 3 * o,
                    materialIndex: i
                })
            }
            void 0 !== t && (t.count = 3 * o - t.start, n.push(t)), this.groups = n
        },
        fromGeometry: function(e) {
            var t = e.faces,
                n = e.vertices,
                i = e.faceVertexUvs,
                r = i[0] && i[0].length > 0,
                o = i[1] && i[1].length > 0,
                a = e.morphTargets,
                s = a.length;
            if (s > 0) {
                for (var l = [], c = 0; c < s; c++) l[c] = [];
                this.morphTargets.position = l
            }
            var u = e.morphNormals,
                h = u.length;
            if (h > 0) {
                for (var d = [], c = 0; c < h; c++) d[c] = [];
                this.morphTargets.normal = d
            }
            for (var p = e.skinIndices, f = e.skinWeights, m = p.length === n.length, E = f.length === n.length, c = 0; c < t.length; c++) {
                var g = t[c];
                this.vertices.push(n[g.a], n[g.b], n[g.c]);
                var v = g.vertexNormals;
                if (3 === v.length) this.normals.push(v[0], v[1], v[2]);
                else {
                    var y = g.normal;
                    this.normals.push(y, y, y)
                }
                var T = g.vertexColors;
                if (3 === T.length) this.colors.push(T[0], T[1], T[2]);
                else {
                    var x = g.color;
                    this.colors.push(x, x, x)
                }
                if (r === !0) {
                    var R = i[0][c];
                    void 0 !== R ? this.uvs.push(R[0], R[1], R[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", c), this.uvs.push(new THREE.Vector2, new THREE.Vector2, new THREE.Vector2))
                }
                if (o === !0) {
                    var R = i[1][c];
                    void 0 !== R ? this.uvs2.push(R[0], R[1], R[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", c), this.uvs2.push(new THREE.Vector2, new THREE.Vector2, new THREE.Vector2))
                }
                for (var w = 0; w < s; w++) {
                    var b = a[w].vertices;
                    l[w].push(b[g.a], b[g.b], b[g.c])
                }
                for (var w = 0; w < h; w++) {
                    var H = u[w].vertexNormals[c];
                    d[w].push(H.a, H.b, H.c)
                }
                m && this.skinIndices.push(p[g.a], p[g.b], p[g.c]), E && this.skinWeights.push(f[g.a], f[g.b], f[g.c])
            }
            return this.computeGroups(e), this.verticesNeedUpdate = e.verticesNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype), THREE.BufferGeometry = function() {
        Object.defineProperty(this, "id", {
            value: THREE.GeometryIdCount++
        }), this.uuid = THREE.Math.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
            start: 0,
            count: 1 / 0
        }
    }, THREE.BufferGeometry.prototype = {
        constructor: THREE.BufferGeometry,
        addIndex: function(e) {
            console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(e)
        },
        getIndex: function() {
            return this.index
        },
        setIndex: function(e) {
            this.index = e
        },
        addAttribute: function(e, t) {
            return t instanceof THREE.BufferAttribute == !1 && t instanceof THREE.InterleavedBufferAttribute == !1 ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), void this.addAttribute(e, new THREE.BufferAttribute(arguments[1], arguments[2]))) : "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), void this.setIndex(t)) : void(this.attributes[e] = t)
        },
        getAttribute: function(e) {
            return this.attributes[e]
        },
        removeAttribute: function(e) {
            delete this.attributes[e]
        },
        get drawcalls() {
            return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups
        },
        get offsets() {
            return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups
        },
        addDrawCall: function(e, t, n) {
            void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(e, t)
        },
        clearDrawCalls: function() {
            console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups()
        },
        addGroup: function(e, t, n) {
            this.groups.push({
                start: e,
                count: t,
                materialIndex: void 0 !== n ? n : 0
            })
        },
        clearGroups: function() {
            this.groups = []
        },
        setDrawRange: function(e, t) {
            this.drawRange.start = e, this.drawRange.count = t
        },
        applyMatrix: function(e) {
            var t = this.attributes.position;
            void 0 !== t && (e.applyToVector3Array(t.array), t.needsUpdate = !0);
            var n = this.attributes.normal;
            if (void 0 !== n) {
                var i = (new THREE.Matrix3).getNormalMatrix(e);
                i.applyToVector3Array(n.array), n.needsUpdate = !0
            }
            null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere()
        },
        rotateX: function() {
            var e;
            return function t(n) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeRotationX(n), this.applyMatrix(e), this
            }
        }(),
        rotateY: function() {
            var e;
            return function t(n) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeRotationY(n), this.applyMatrix(e), this
            }
        }(),
        rotateZ: function() {
            var e;
            return function t(n) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeRotationZ(n), this.applyMatrix(e), this
            }
        }(),
        translate: function() {
            var e;
            return function t(n, i, r) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeTranslation(n, i, r), this.applyMatrix(e), this
            }
        }(),
        scale: function() {
            var e;
            return function t(n, i, r) {
                return void 0 === e && (e = new THREE.Matrix4), e.makeScale(n, i, r), this.applyMatrix(e), this
            }
        }(),
        lookAt: function() {
            var e;
            return function t(n) {
                void 0 === e && (e = new THREE.Object3D), e.lookAt(n), e.updateMatrix(), this.applyMatrix(e.matrix)
            }
        }(),
        center: function() {
            this.computeBoundingBox();
            var e = this.boundingBox.center().negate();
            return this.translate(e.x, e.y, e.z), e
        },
        setFromObject: function(e) {
            var t = e.geometry;
            if (e instanceof THREE.Points || e instanceof THREE.Line) {
                var n = new THREE.Float32Attribute(3 * t.vertices.length, 3),
                    i = new THREE.Float32Attribute(3 * t.colors.length, 3);
                if (this.addAttribute("position", n.copyVector3sArray(t.vertices)), this.addAttribute("color", i.copyColorsArray(t.colors)), t.lineDistances && t.lineDistances.length === t.vertices.length) {
                    var r = new THREE.Float32Attribute(t.lineDistances.length, 1);
                    this.addAttribute("lineDistance", r.copyArray(t.lineDistances))
                }
                null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone())
            } else e instanceof THREE.Mesh && t instanceof THREE.Geometry && this.fromGeometry(t);
            return this
        },
        updateFromObject: function(e) {
            var t = e.geometry;
            if (e instanceof THREE.Mesh) {
                var n = t.__directGeometry;
                if (void 0 === n) return this.fromGeometry(t);
                n.verticesNeedUpdate = t.verticesNeedUpdate, n.normalsNeedUpdate = t.normalsNeedUpdate, n.colorsNeedUpdate = t.colorsNeedUpdate, n.uvsNeedUpdate = t.uvsNeedUpdate, n.groupsNeedUpdate = t.groupsNeedUpdate, t.verticesNeedUpdate = !1, t.normalsNeedUpdate = !1, t.colorsNeedUpdate = !1, t.uvsNeedUpdate = !1, t.groupsNeedUpdate = !1, t = n
            }
            if (t.verticesNeedUpdate === !0) {
                var i = this.attributes.position;
                void 0 !== i && (i.copyVector3sArray(t.vertices), i.needsUpdate = !0), t.verticesNeedUpdate = !1
            }
            if (t.normalsNeedUpdate === !0) {
                var i = this.attributes.normal;
                void 0 !== i && (i.copyVector3sArray(t.normals), i.needsUpdate = !0), t.normalsNeedUpdate = !1
            }
            if (t.colorsNeedUpdate === !0) {
                var i = this.attributes.color;
                void 0 !== i && (i.copyColorsArray(t.colors), i.needsUpdate = !0), t.colorsNeedUpdate = !1
            }
            if (t.uvsNeedUpdate) {
                var i = this.attributes.uv;
                void 0 !== i && (i.copyVector2sArray(t.uvs), i.needsUpdate = !0), t.uvsNeedUpdate = !1
            }
            if (t.lineDistancesNeedUpdate) {
                var i = this.attributes.lineDistance;
                void 0 !== i && (i.copyArray(t.lineDistances), i.needsUpdate = !0), t.lineDistancesNeedUpdate = !1
            }
            return t.groupsNeedUpdate && (t.computeGroups(e.geometry), this.groups = t.groups, t.groupsNeedUpdate = !1), this
        },
        fromGeometry: function(e) {
            return e.__directGeometry = (new THREE.DirectGeometry).fromGeometry(e), this.fromDirectGeometry(e.__directGeometry)
        },
        fromDirectGeometry: function(e) {
            var t = new Float32Array(3 * e.vertices.length);
            if (this.addAttribute("position", new THREE.BufferAttribute(t, 3).copyVector3sArray(e.vertices)), e.normals.length > 0) {
                var n = new Float32Array(3 * e.normals.length);
                this.addAttribute("normal", new THREE.BufferAttribute(n, 3).copyVector3sArray(e.normals))
            }
            if (e.colors.length > 0) {
                var i = new Float32Array(3 * e.colors.length);
                this.addAttribute("color", new THREE.BufferAttribute(i, 3).copyColorsArray(e.colors))
            }
            if (e.uvs.length > 0) {
                var r = new Float32Array(2 * e.uvs.length);
                this.addAttribute("uv", new THREE.BufferAttribute(r, 2).copyVector2sArray(e.uvs))
            }
            if (e.uvs2.length > 0) {
                var o = new Float32Array(2 * e.uvs2.length);
                this.addAttribute("uv2", new THREE.BufferAttribute(o, 2).copyVector2sArray(e.uvs2))
            }
            if (e.indices.length > 0) {
                var a = e.vertices.length > 65535 ? Uint32Array : Uint16Array,
                    s = new a(3 * e.indices.length);
                this.setIndex(new THREE.BufferAttribute(s, 1).copyIndicesArray(e.indices))
            }
            this.groups = e.groups;
            for (var l in e.morphTargets) {
                for (var c = [], u = e.morphTargets[l], h = 0, d = u.length; h < d; h++) {
                    var p = u[h],
                        f = new THREE.Float32Attribute(3 * p.length, 3);
                    c.push(f.copyVector3sArray(p))
                }
                this.morphAttributes[l] = c
            }
            if (e.skinIndices.length > 0) {
                var m = new THREE.Float32Attribute(4 * e.skinIndices.length, 4);
                this.addAttribute("skinIndex", m.copyVector4sArray(e.skinIndices))
            }
            if (e.skinWeights.length > 0) {
                var E = new THREE.Float32Attribute(4 * e.skinWeights.length, 4);
                this.addAttribute("skinWeight", E.copyVector4sArray(e.skinWeights))
            }
            return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), this
        },
        computeBoundingBox: function() {
            var e = new THREE.Vector3;
            return function() {
                null === this.boundingBox && (this.boundingBox = new THREE.Box3);
                var t = this.attributes.position.array;
                if (t) {
                    var n = this.boundingBox;
                    n.makeEmpty();
                    for (var i = 0, r = t.length; i < r; i += 3) e.fromArray(t, i), n.expandByPoint(e)
                }
                void 0 !== t && 0 !== t.length || (this.boundingBox.min.set(0, 0, 0), this.boundingBox.max.set(0, 0, 0)), (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
            }
        }(),
        computeBoundingSphere: function() {
            var e = new THREE.Box3,
                t = new THREE.Vector3;
            return function() {
                null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere);
                var n = this.attributes.position.array;
                if (n) {
                    e.makeEmpty();
                    for (var i = this.boundingSphere.center, r = 0, o = n.length; r < o; r += 3) t.fromArray(n, r), e.expandByPoint(t);
                    e.center(i);
                    for (var a = 0, r = 0, o = n.length; r < o; r += 3) t.fromArray(n, r), a = Math.max(a, i.distanceToSquared(t));
                    this.boundingSphere.radius = Math.sqrt(a), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                }
            }
        }(),
        computeFaceNormals: function() {},
        computeVertexNormals: function() {
            var e = this.index,
                t = this.attributes,
                n = this.groups;
            if (t.position) {
                var i = t.position.array;
                if (void 0 === t.normal) this.addAttribute("normal", new THREE.BufferAttribute(new Float32Array(i.length), 3));
                else
                    for (var r = t.normal.array, o = 0, a = r.length; o < a; o++) r[o] = 0;
                var r = t.normal.array,
                    s, l, c, u = new THREE.Vector3,
                    h = new THREE.Vector3,
                    d = new THREE.Vector3,
                    p = new THREE.Vector3,
                    f = new THREE.Vector3;
                if (e) {
                    var m = e.array;
                    0 === n.length && this.addGroup(0, m.length);
                    for (var E = 0, g = n.length; E < g; ++E)
                        for (var v = n[E], y = v.start, T = v.count, o = y, a = y + T; o < a; o += 3) s = 3 * m[o + 0], l = 3 * m[o + 1], c = 3 * m[o + 2], u.fromArray(i, s), h.fromArray(i, l), d.fromArray(i, c), p.subVectors(d, h), f.subVectors(u, h), p.cross(f), r[s] += p.x, r[s + 1] += p.y, r[s + 2] += p.z, r[l] += p.x, r[l + 1] += p.y, r[l + 2] += p.z, r[c] += p.x, r[c + 1] += p.y, r[c + 2] += p.z
                } else
                    for (var o = 0, a = i.length; o < a; o += 9) u.fromArray(i, o), h.fromArray(i, o + 3), d.fromArray(i, o + 6), p.subVectors(d, h), f.subVectors(u, h), p.cross(f), r[o] = p.x, r[o + 1] = p.y, r[o + 2] = p.z, r[o + 3] = p.x, r[o + 4] = p.y, r[o + 5] = p.z, r[o + 6] = p.x, r[o + 7] = p.y, r[o + 8] = p.z;
                this.normalizeNormals(), t.normal.needsUpdate = !0
            }
        },
        computeTangents: function() {
            console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
        },
        computeOffsets: function(e) {
            console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
        },
        merge: function(e, t) {
            if (e instanceof THREE.BufferGeometry == !1) return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
            void 0 === t && (t = 0);
            var n = this.attributes;
            for (var i in n)
                if (void 0 !== e.attributes[i])
                    for (var r = n[i], o = r.array, a = e.attributes[i], s = a.array, l = a.itemSize, c = 0, u = l * t; c < s.length; c++, u++) o[u] = s[c];
            return this
        },
        normalizeNormals: function() {
            for (var e = this.attributes.normal.array, t, n, i, r, o = 0, a = e.length; o < a; o += 3) t = e[o], n = e[o + 1], i = e[o + 2], r = 1 / Math.sqrt(t * t + n * n + i * i), e[o] *= r, e[o + 1] *= r, e[o + 2] *= r
        },
        toJSON: function() {
            var e = {
                metadata: {
                    version: 4.4,
                    type: "BufferGeometry",
                    generator: "BufferGeometry.toJSON"
                }
            };
            if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), void 0 !== this.parameters) {
                var t = this.parameters;
                for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
                return e
            }
            e.data = {
                attributes: {}
            };
            var i = this.index;
            if (null !== i) {
                var r = Array.prototype.slice.call(i.array);
                e.data.index = {
                    type: i.array.constructor.name,
                    array: r
                }
            }
            var o = this.attributes;
            for (var n in o) {
                var a = o[n],
                    r = Array.prototype.slice.call(a.array);
                e.data.attributes[n] = {
                    itemSize: a.itemSize,
                    type: a.array.constructor.name,
                    array: r
                }
            }
            var s = this.groups;
            s.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(s)));
            var l = this.boundingSphere;
            return null !== l && (e.data.boundingSphere = {
                center: l.center.toArray(),
                radius: l.radius
            }), e
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            var t = e.index;
            null !== t && this.setIndex(t.clone());
            var n = e.attributes;
            for (var i in n) {
                var r = n[i];
                this.addAttribute(i, r.clone())
            }
            for (var o = e.groups, a = 0, s = o.length; a < s; a++) {
                var l = o[a];
                this.addGroup(l.start, l.count)
            }
            return this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype), THREE.BufferGeometry.MaxIndex = 65535, THREE.InstancedBufferGeometry = function() {
        THREE.BufferGeometry.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = void 0
    }, THREE.InstancedBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype), THREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry, THREE.InstancedBufferGeometry.prototype.addGroup = function(e, t, n) {
        this.groups.push({
            start: e,
            count: t,
            instances: n
        })
    }, THREE.InstancedBufferGeometry.prototype.copy = function(e) {
        var t = e.index;
        null !== t && this.setIndex(t.clone());
        var n = e.attributes;
        for (var i in n) {
            var r = n[i];
            this.addAttribute(i, r.clone())
        }
        for (var o = e.groups, a = 0, s = o.length; a < s; a++) {
            var l = o[a];
            this.addGroup(l.start, l.count, l.instances)
        }
        return this
    };
THREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype);
THREE.AnimationAction = function(e, t, n, i, r) {
    if (void 0 === e) throw new Error("clip is null");
    this.clip = e, this.localRoot = null, this.startTime = t || 0, this.timeScale = n || 1, this.weight = i || 1, this.loop = r || THREE.LoopRepeat, this.loopCount = 0, this.enabled = !0, this.actionTime = -this.startTime, this.clipTime = 0, this.propertyBindings = []
}, THREE.AnimationAction.prototype = {
    constructor: THREE.AnimationAction,
    setLocalRoot: function(e) {
        return this.localRoot = e, this
    },
    updateTime: function(e) {
        var t = this.clipTime,
            n = this.loopCount,
            i = this.actionTime,
            r = this.clip.duration;
        if (this.actionTime = this.actionTime + e, this.loop === THREE.LoopOnce) return this.loopCount = 0, this.clipTime = Math.min(Math.max(this.actionTime, 0), r), this.clipTime !== t && (this.clipTime === r ? this.mixer.dispatchEvent({
            type: "finished",
            action: this,
            direction: 1
        }) : 0 === this.clipTime && this.mixer.dispatchEvent({
            type: "finished",
            action: this,
            direction: -1
        })), this.clipTime;
        this.loopCount = Math.floor(this.actionTime / r);
        var o = this.actionTime - this.loopCount * r;
        return o %= r, this.loop == THREE.LoopPingPong && 1 === Math.abs(this.loopCount % 2) && (o = r - o),
            this.clipTime = o, this.loopCount !== n && this.mixer.dispatchEvent({
                type: "loop",
                action: this,
                loopDelta: this.loopCount - this.loopCount
            }), this.clipTime
    },
    syncWith: function(e) {
        return this.actionTime = e.actionTime, this.timeScale = e.timeScale, this
    },
    warpToDuration: function(e) {
        return this.timeScale = this.clip.duration / e, this
    },
    init: function(e) {
        return this.clipTime = e - this.startTime, this
    },
    update: function(e) {
        this.updateTime(e);
        var t = this.clip.getAt(this.clipTime);
        return t
    },
    getTimeScaleAt: function(e) {
        return this.timeScale.getAt ? this.timeScale.getAt(e) : this.timeScale
    },
    getWeightAt: function(e) {
        return this.weight.getAt ? this.weight.getAt(e) : this.weight
    }
}, THREE.AnimationClip = function(e, t, n) {
    if (this.name = e, this.tracks = n, this.duration = void 0 !== t ? t : -1, this.duration < 0)
        for (var i = 0; i < this.tracks.length; i++) {
            var r = this.tracks[i];
            this.duration = Math.max(r.keys[r.keys.length - 1].time)
        }
    this.trim(), this.optimize(), this.results = []
}, THREE.AnimationClip.prototype = {
    constructor: THREE.AnimationClip,
    getAt: function(e) {
        e = Math.max(0, Math.min(e, this.duration));
        for (var t = 0; t < this.tracks.length; t++) {
            var n = this.tracks[t];
            this.results[t] = n.getAt(e)
        }
        return this.results
    },
    trim: function() {
        for (var e = 0; e < this.tracks.length; e++) this.tracks[e].trim(0, this.duration);
        return this
    },
    optimize: function() {
        for (var e = 0; e < this.tracks.length; e++) this.tracks[e].optimize();
        return this
    }
}, THREE.AnimationClip.CreateFromMorphTargetSequence = function(e, t, n) {
    for (var i = t.length, r = [], o = 0; o < i; o++) {
        var a = [];
        a.push({
            time: (o + i - 1) % i,
            value: 0
        }), a.push({
            time: o,
            value: 1
        }), a.push({
            time: (o + 1) % i,
            value: 0
        }), a.sort(THREE.KeyframeTrack.keyComparer), 0 === a[0].time && a.push({
            time: i,
            value: a[0].value
        }), r.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences[" + t[o].name + "]", a).scale(1 / n))
    }
    return new THREE.AnimationClip(e, -1, r)
}, THREE.AnimationClip.findByName = function(e, t) {
    for (var n = 0; n < e.length; n++)
        if (e[n].name === t) return e[n];
    return null
}, THREE.AnimationClip.CreateClipsFromMorphTargetSequences = function(e, t) {
    for (var n = {}, i = /^([\w-]*?)([\d]+)$/, r = 0, o = e.length; r < o; r++) {
        var a = e[r],
            s = a.name.match(i);
        if (s && s.length > 1) {
            var l = s[1],
                c = n[l];
            c || (n[l] = c = []), c.push(a)
        }
    }
    var u = [];
    for (var l in n) u.push(THREE.AnimationClip.CreateFromMorphTargetSequence(l, n[l], t));
    return u
}, THREE.AnimationClip.parse = function(e) {
    for (var t = [], n = 0; n < e.tracks.length; n++) t.push(THREE.KeyframeTrack.parse(e.tracks[n]).scale(1 / e.fps));
    return new THREE.AnimationClip(e.name, e.duration, t)
}, THREE.AnimationClip.parseAnimation = function(e, t, n) {
    if (!e) return console.error("  no animation in JSONLoader data"), null;
    for (var i = function(e, t, n, i, r) {
            for (var o = [], a = 0; a < t.length; a++) {
                var s = t[a];
                void 0 !== s[n] && o.push({
                    time: s.time,
                    value: r(s)
                })
            }
            return o.length > 0 ? new i(e, o) : null
        }, r = [], o = e.name || "default", a = e.length || -1, s = e.fps || 30, l = e.hierarchy || [], c = 0; c < l.length; c++) {
        var u = l[c].keys;
        if (u && 0 != u.length)
            if (u[0].morphTargets) {
                for (var h = {}, d = 0; d < u.length; d++)
                    if (u[d].morphTargets)
                        for (var p = 0; p < u[d].morphTargets.length; p++) h[u[d].morphTargets[p]] = -1;
                for (var f in h) {
                    for (var m = [], p = 0; p < u[d].morphTargets.length; p++) {
                        var E = u[d];
                        m.push({
                            time: E.time,
                            value: E.morphTarget === f ? 1 : 0
                        })
                    }
                    r.push(new THREE.NumberKeyframeTrack(n + ".morphTargetInfluence[" + f + "]", m))
                }
                a = h.length * (s || 1)
            } else {
                var g = n + ".bones[" + t[c].name + "]",
                    v = i(g + ".position", u, "pos", THREE.VectorKeyframeTrack, function(e) {
                        return (new THREE.Vector3).fromArray(e.pos)
                    });
                v && r.push(v);
                var y = i(g + ".quaternion", u, "rot", THREE.QuaternionKeyframeTrack, function(e) {
                    return e.rot.slerp ? e.rot.clone() : (new THREE.Quaternion).fromArray(e.rot)
                });
                y && r.push(y);
                var T = i(g + ".scale", u, "scl", THREE.VectorKeyframeTrack, function(e) {
                    return (new THREE.Vector3).fromArray(e.scl)
                });
                T && r.push(T)
            }
    }
    if (0 === r.length) return null;
    var x = new THREE.AnimationClip(o, a, r);
    return x
}, THREE.AnimationMixer = function(e) {
    this.root = e, this.time = 0, this.timeScale = 1, this.actions = [], this.propertyBindingMap = {}
}, THREE.AnimationMixer.prototype = {
    constructor: THREE.AnimationMixer,
    addAction: function(e) {
        this.actions.push(e), e.init(this.time), e.mixer = this;
        for (var t = e.clip.tracks, n = e.localRoot || this.root, i = 0; i < t.length; i++) {
            var r = t[i],
                o = n.uuid + "-" + r.name,
                a = this.propertyBindingMap[o];
            void 0 === a && (a = new THREE.PropertyBinding(n, r.name), this.propertyBindingMap[o] = a), e.propertyBindings.push(a), a.referenceCount += 1
        }
    },
    removeAllActions: function() {
        for (var e = 0; e < this.actions.length; e++) this.actions[e].mixer = null;
        for (var t in this.propertyBindingMap) this.propertyBindingMap[t].unbind();
        return this.actions = [], this.propertyBindingMap = {}, this
    },
    removeAction: function(e) {
        var t = this.actions.indexOf(e);
        t !== -1 && (this.actions.splice(t, 1), e.mixer = null);
        for (var n = e.localRoot || this.root, i = e.clip.tracks, r = 0; r < i.length; r++) {
            var o = i[r],
                a = n.uuid + "-" + o.name,
                s = this.propertyBindingMap[a];
            s.referenceCount -= 1, s.referenceCount <= 0 && (s.unbind(), delete this.propertyBindingMap[a])
        }
        return this
    },
    findActionByName: function(e) {
        for (var t = 0; t < this.actions.length; t++)
            if (this.actions[t].name === e) return this.actions[t];
        return null
    },
    play: function(e, t) {
        return e.startTime = this.time, this.addAction(e), this
    },
    fadeOut: function(e, t) {
        var n = [];
        return n.push({
            time: this.time,
            value: 1
        }), n.push({
            time: this.time + t,
            value: 0
        }), e.weight = new THREE.NumberKeyframeTrack("weight", n), this
    },
    fadeIn: function(e, t) {
        var n = [];
        return n.push({
            time: this.time,
            value: 0
        }), n.push({
            time: this.time + t,
            value: 1
        }), e.weight = new THREE.NumberKeyframeTrack("weight", n), this
    },
    warp: function(e, t, n, i) {
        var r = [];
        return r.push({
            time: this.time,
            value: t
        }), r.push({
            time: this.time + i,
            value: n
        }), e.timeScale = new THREE.NumberKeyframeTrack("timeScale", r), this
    },
    crossFade: function(e, t, n, i) {
        if (this.fadeOut(e, n), this.fadeIn(t, n), i) {
            var r = e.clip.duration / t.clip.duration,
                o = 1 / r;
            this.warp(e, 1, r, n), this.warp(t, o, 1, n)
        }
        return this
    },
    update: function(e) {
        var t = e * this.timeScale;
        this.time += t;
        for (var n = 0; n < this.actions.length; n++) {
            var i = this.actions[n],
                r = i.getWeightAt(this.time),
                o = i.getTimeScaleAt(this.time),
                a = t * o,
                s = i.update(a);
            if (!(i.weight <= 0) && i.enabled)
                for (var l = 0; l < s.length; l++) {
                    var c = i.clip.tracks[l].name;
                    i.propertyBindings[l].accumulate(s[l], r)
                }
        }
        for (var u in this.propertyBindingMap) this.propertyBindingMap[u].apply();
        return this
    }
}, THREE.EventDispatcher.prototype.apply(THREE.AnimationMixer.prototype), THREE.AnimationUtils = {
    getEqualsFunc: function(e) {
        return e.equals ? function e(t, n) {
            return t.equals(n)
        } : function e(t, n) {
            return t === n
        }
    },
    clone: function(e) {
        var t = typeof e;
        if ("object" === t) {
            if (e.clone) return e.clone();
            console.error("can not figure out how to copy exemplarValue", e)
        }
        return e
    },
    lerp: function(e, t, n, i) {
        var r = THREE.AnimationUtils.getLerpFunc(e, i);
        return r(e, t, n)
    },
    lerp_object: function(e, t, n) {
        return e.lerp(t, n)
    },
    slerp_object: function(e, t, n) {
        return e.slerp(t, n)
    },
    lerp_number: function(e, t, n) {
        return e * (1 - n) + t * n
    },
    lerp_boolean: function(e, t, n) {
        return n < .5 ? e : t
    },
    lerp_boolean_immediate: function(e, t, n) {
        return e
    },
    lerp_string: function(e, t, n) {
        return n < .5 ? e : t
    },
    lerp_string_immediate: function(e, t, n) {
        return e
    },
    getLerpFunc: function(e, t) {
        if (void 0 === e || null === e) throw new Error("examplarValue is null");
        var n = typeof e;
        switch (n) {
            case "object":
                if (e.lerp) return THREE.AnimationUtils.lerp_object;
                if (e.slerp) return THREE.AnimationUtils.slerp_object;
                break;
            case "number":
                return THREE.AnimationUtils.lerp_number;
            case "boolean":
                return t ? THREE.AnimationUtils.lerp_boolean : THREE.AnimationUtils.lerp_boolean_immediate;
            case "string":
                return t ? THREE.AnimationUtils.lerp_string : THREE.AnimationUtils.lerp_string_immediate
        }
    }
}, THREE.KeyframeTrack = function(e, t) {
    if (void 0 === e) throw new Error("track name is undefined");
    if (void 0 === t || 0 === t.length) throw new Error("no keys in track named " + e);
    this.name = e, this.keys = t, this.lastIndex = 0, this.validate(), this.optimize()
}, THREE.KeyframeTrack.prototype = {
    constructor: THREE.KeyframeTrack,
    getAt: function(e) {
        for (; this.lastIndex < this.keys.length && e >= this.keys[this.lastIndex].time;) this.lastIndex++;
        for (; this.lastIndex > 0 && e < this.keys[this.lastIndex - 1].time;) this.lastIndex--;
        if (this.lastIndex >= this.keys.length) return this.setResult(this.keys[this.keys.length - 1].value), this.result;
        if (0 === this.lastIndex) return this.setResult(this.keys[0].value), this.result;
        var t = this.keys[this.lastIndex - 1];
        if (this.setResult(t.value), t.constantToNext) return this.result;
        var n = this.keys[this.lastIndex],
            i = (e - t.time) / (n.time - t.time);
        return this.result = this.lerpValues(this.result, n.value, i), this.result
    },
    shift: function(e) {
        if (0 !== e)
            for (var t = 0; t < this.keys.length; t++) this.keys[t].time += e;
        return this
    },
    scale: function(e) {
        if (1 !== e)
            for (var t = 0; t < this.keys.length; t++) this.keys[t].time *= e;
        return this
    },
    trim: function(e, t) {
        for (var n = 0, i = 1; i < this.keys.length; i++) this.keys[i] <= e && n++;
        for (var r = 0, i = this.keys.length - 2; i > 0 && this.keys[i] >= t; i++) r++;
        return n + r > 0 && (this.keys = this.keys.splice(n, this.keys.length - r - n)), this
    },
    validate: function() {
        var e = null;
        if (0 === this.keys.length) return void console.error("  track is empty, no keys", this);
        for (var t = 0; t < this.keys.length; t++) {
            var n = this.keys[t];
            if (!n) return void console.error("  key is null in track", this, t);
            if ("number" != typeof n.time || isNaN(n.time)) return void console.error("  key.time is not a valid number", this, t, n);
            if (void 0 === n.value || null === n.value) return void console.error("  key.value is null in track", this, t, n);
            if (e && e.time > n.time) return void console.error("  key.time is less than previous key time, out of order keys", this, t, n, e);
            e = n
        }
        return this
    },
    optimize: function() {
        var e = [],
            t = this.keys[0];
        e.push(t);
        for (var n = THREE.AnimationUtils.getEqualsFunc(t.value), i = 1; i < this.keys.length - 1; i++) {
            var r = this.keys[i],
                o = this.keys[i + 1];
            t.time !== r.time && (this.compareValues(t.value, r.value) && this.compareValues(r.value, o.value) || (t.constantToNext = this.compareValues(t.value, r.value), e.push(r), t = r))
        }
        return e.push(this.keys[this.keys.length - 1]), this.keys = e, this
    }
}, THREE.KeyframeTrack.keyComparer = function e(t, n) {
    return t.time - n.time
}, THREE.KeyframeTrack.parse = function(e) {
    if (void 0 === e.type) throw new Error("track type undefined, can not parse");
    var t = THREE.KeyframeTrack.GetTrackTypeForTypeName(e.type);
    return t.parse(e)
}, THREE.KeyframeTrack.GetTrackTypeForTypeName = function(e) {
    switch (e.toLowerCase()) {
        case "vector":
        case "vector2":
        case "vector3":
        case "vector4":
            return THREE.VectorKeyframeTrack;
        case "quaternion":
            return THREE.QuaternionKeyframeTrack;
        case "integer":
        case "scalar":
        case "double":
        case "float":
        case "number":
            return THREE.NumberKeyframeTrack;
        case "bool":
        case "boolean":
            return THREE.BooleanKeyframeTrack;
        case "string":
            return THREE.StringKeyframeTrack
    }
    throw new Error("Unsupported typeName: " + e)
}, THREE.PropertyBinding = function(e, t) {
    this.rootNode = e, this.trackName = t, this.referenceCount = 0, this.originalValue = null;
    var n = THREE.PropertyBinding.parseTrackName(t);
    this.directoryName = n.directoryName, this.nodeName = n.nodeName, this.objectName = n.objectName, this.objectIndex = n.objectIndex, this.propertyName = n.propertyName, this.propertyIndex = n.propertyIndex, this.node = THREE.PropertyBinding.findNode(e, this.nodeName) || e, this.cumulativeValue = null, this.cumulativeWeight = 0
}, THREE.PropertyBinding.prototype = {
    constructor: THREE.PropertyBinding,
    reset: function() {
        this.cumulativeValue = null, this.cumulativeWeight = 0
    },
    accumulate: function(e, t) {
        if (this.isBound || this.bind(), 0 === this.cumulativeWeight) t > 0 && (null === this.cumulativeValue && (this.cumulativeValue = THREE.AnimationUtils.clone(e)), this.cumulativeWeight = t);
        else {
            var n = t / (this.cumulativeWeight + t);
            this.cumulativeValue = this.lerpValue(this.cumulativeValue, e, n), this.cumulativeWeight += t
        }
    },
    unbind: function() {
        this.isBound && (this.setValue(this.originalValue), this.setValue = null, this.getValue = null, this.lerpValue = null, this.equalsValue = null, this.triggerDirty = null, this.isBound = !1)
    },
    bind: function() {
        if (!this.isBound) {
            var e = this.node;
            if (!e) return void console.error("  trying to update node for track: " + this.trackName + " but it wasn't found.");
            if (this.objectName) {
                if ("materials" === this.objectName) {
                    if (!e.material) return void console.error("  can not bind to material as node does not have a material", this);
                    if (!e.material.materials) return void console.error("  can not bind to material.materials as node.material does not have a materials array", this);
                    e = e.material.materials
                } else if ("bones" === this.objectName) {
                    if (!e.skeleton) return void console.error("  can not bind to bones as node does not have a skeleton", this);
                    e = e.skeleton.bones;
                    for (var t = 0; t < e.length; t++)
                        if (e[t].name === this.objectIndex) {
                            this.objectIndex = t;
                            break
                        }
                } else {
                    if (void 0 === e[this.objectName]) return void console.error("  can not bind to objectName of node, undefined", this);
                    e = e[this.objectName]
                }
                if (void 0 !== this.objectIndex) {
                    if (void 0 === e[this.objectIndex]) return void console.error("  trying to bind to objectIndex of objectName, but is undefined:", this, e);
                    e = e[this.objectIndex]
                }
            }
            var n = e[this.propertyName];
            if (!n) return void console.error("  trying to update property for track: " + this.nodeName + "." + this.propertyName + " but it wasn't found.", e);
            if (void 0 !== this.propertyIndex) {
                if ("morphTargetInfluences" === this.propertyName) {
                    e.geometry || console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry", this), e.geometry.morphTargets || console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets", this);
                    for (var t = 0; t < this.node.geometry.morphTargets.length; t++)
                        if (e.geometry.morphTargets[t].name === this.propertyIndex) {
                            this.propertyIndex = t;
                            break
                        }
                }
                this.setValue = function e(t) {
                    return !this.equalsValue(n[this.propertyIndex], t) && (n[this.propertyIndex] = t, !0)
                }, this.getValue = function e() {
                    return n[this.propertyIndex]
                }
            } else n.copy ? (this.setValue = function e(t) {
                return !this.equalsValue(n, t) && (n.copy(t), !0)
            }, this.getValue = function e() {
                return n
            }) : (this.setValue = function t(n) {
                return !this.equalsValue(e[this.propertyName], n) && (e[this.propertyName] = n, !0)
            }, this.getValue = function t() {
                return e[this.propertyName]
            });
            void 0 !== e.needsUpdate ? this.triggerDirty = function e() {
                this.node.needsUpdate = !0
            } : void 0 !== e.matrixWorldNeedsUpdate && (this.triggerDirty = function t() {
                e.matrixWorldNeedsUpdate = !0
            }), this.originalValue = this.getValue(), this.equalsValue = THREE.AnimationUtils.getEqualsFunc(this.originalValue), this.lerpValue = THREE.AnimationUtils.getLerpFunc(this.originalValue, !0), this.isBound = !0
        }
    },
    apply: function() {
        if (this.isBound || this.bind(), this.cumulativeWeight > 0) {
            if (this.cumulativeWeight < 1) {
                var e = 1 - this.cumulativeWeight,
                    t = e / (this.cumulativeWeight + e);
                this.cumulativeValue = this.lerpValue(this.cumulativeValue, this.originalValue, t)
            }
            var n = this.setValue(this.cumulativeValue);
            n && this.triggerDirty && this.triggerDirty(), this.cumulativeValue = null, this.cumulativeWeight = 0
        }
    }
}, THREE.PropertyBinding.parseTrackName = function(e) {
    var t = /^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_. ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,
        n = t.exec(e);
    if (!n) throw new Error("cannot parse trackName at all: " + e);
    n.index === t.lastIndex && t.lastIndex++;
    var i = {
        directoryName: n[1],
        nodeName: n[3],
        objectName: n[5],
        objectIndex: n[7],
        propertyName: n[9],
        propertyIndex: n[11]
    };
    if (null === i.propertyName || 0 === i.propertyName.length) throw new Error("can not parse propertyName from trackName: " + e);
    return i
}, THREE.PropertyBinding.findNode = function(e, t) {
    function n(e) {
        for (var n = 0; n < e.bones.length; n++) {
            var i = e.bones[n];
            if (i.name === t) return i
        }
        return null
    }

    function i(e) {
        for (var n = 0; n < e.length; n++) {
            var r = e[n];
            if (r.name === t || r.uuid === t) return r;
            var o = i(r.children);
            if (o) return o
        }
        return null
    }
    if (!t || "" === t || "root" === t || "." === t || t === -1 || t === e.name || t === e.uuid) return e;
    if (e.skeleton) {
        var r = n(e.skeleton);
        if (r) return r
    }
    if (e.children) {
        var o = i(e.children);
        if (o) return o
    }
    return null
}, THREE.VectorKeyframeTrack = function(e, t) {
    THREE.KeyframeTrack.call(this, e, t), this.result = this.keys[0].value.clone()
}, THREE.VectorKeyframeTrack.prototype = Object.create(THREE.KeyframeTrack.prototype), THREE.VectorKeyframeTrack.prototype.constructor = THREE.VectorKeyframeTrack, THREE.VectorKeyframeTrack.prototype.setResult = function(e) {
    this.result.copy(e)
}, THREE.VectorKeyframeTrack.prototype.lerpValues = function(e, t, n) {
    return e.lerp(t, n)
}, THREE.VectorKeyframeTrack.prototype.compareValues = function(e, t) {
    return e.equals(t)
}, THREE.VectorKeyframeTrack.prototype.clone = function() {
    for (var e = [], t = 0; t < this.keys.length; t++) {
        var n = this.keys[t];
        e.push({
            time: n.time,
            value: n.value.clone()
        })
    }
    return new THREE.VectorKeyframeTrack(this.name, e)
}, THREE.VectorKeyframeTrack.parse = function(e) {
    for (var t = e.keys[0].value.length, n = THREE["Vector" + t], i = [], r = 0; r < e.keys.length; r++) {
        var o = e.keys[r];
        i.push({
            value: (new n).fromArray(o.value),
            time: o.time
        })
    }
    return new THREE.VectorKeyframeTrack(e.name, i)
}, THREE.QuaternionKeyframeTrack = function(e, t) {
    THREE.KeyframeTrack.call(this, e, t), this.result = this.keys[0].value.clone()
}, THREE.QuaternionKeyframeTrack.prototype = Object.create(THREE.KeyframeTrack.prototype), THREE.QuaternionKeyframeTrack.prototype.constructor = THREE.QuaternionKeyframeTrack, THREE.QuaternionKeyframeTrack.prototype.setResult = function(e) {
    this.result.copy(e)
}, THREE.QuaternionKeyframeTrack.prototype.lerpValues = function(e, t, n) {
    return e.slerp(t, n)
}, THREE.QuaternionKeyframeTrack.prototype.compareValues = function(e, t) {
    return e.equals(t)
}, THREE.QuaternionKeyframeTrack.prototype.multiply = function(e) {
    for (var t = 0; t < this.keys.length; t++) this.keys[t].value.multiply(e);
    return this
}, THREE.QuaternionKeyframeTrack.prototype.clone = function() {
    for (var e = [], t = 0; t < this.keys.length; t++) {
        var n = this.keys[t];
        e.push({
            time: n.time,
            value: n.value.clone()
        })
    }
    return new THREE.QuaternionKeyframeTrack(this.name, e)
}, THREE.QuaternionKeyframeTrack.parse = function(e) {
    for (var t = [], n = 0; n < e.keys.length; n++) {
        var i = e.keys[n];
        t.push({
            value: (new THREE.Quaternion).fromArray(i.value),
            time: i.time
        })
    }
    return new THREE.QuaternionKeyframeTrack(e.name, t)
}, THREE.StringKeyframeTrack = function(e, t) {
    THREE.KeyframeTrack.call(this, e, t), this.result = this.keys[0].value
}, THREE.StringKeyframeTrack.prototype = Object.create(THREE.KeyframeTrack.prototype), THREE.StringKeyframeTrack.prototype.constructor = THREE.StringKeyframeTrack, THREE.StringKeyframeTrack.prototype.setResult = function(e) {
    this.result = e
}, THREE.StringKeyframeTrack.prototype.lerpValues = function(e, t, n) {
    return n < 1 ? e : t
}, THREE.StringKeyframeTrack.prototype.compareValues = function(e, t) {
    return e === t
}, THREE.StringKeyframeTrack.prototype.clone = function() {
    for (var e = [], t = 0; t < this.keys.length; t++) {
        var n = this.keys[t];
        e.push({
            time: n.time,
            value: n.value
        })
    }
    return new THREE.StringKeyframeTrack(this.name, e)
}, THREE.StringKeyframeTrack.parse = function(e) {
    return new THREE.StringKeyframeTrack(e.name, e.keys)
}, THREE.BooleanKeyframeTrack = function(e, t) {
    THREE.KeyframeTrack.call(this, e, t), this.result = this.keys[0].value
}, THREE.BooleanKeyframeTrack.prototype = Object.create(THREE.KeyframeTrack.prototype), THREE.BooleanKeyframeTrack.prototype.constructor = THREE.BooleanKeyframeTrack, THREE.BooleanKeyframeTrack.prototype.setResult = function(e) {
    this.result = e
}, THREE.BooleanKeyframeTrack.prototype.lerpValues = function(e, t, n) {
    return n < 1 ? e : t
}, THREE.BooleanKeyframeTrack.prototype.compareValues = function(e, t) {
    return e === t
}, THREE.BooleanKeyframeTrack.prototype.clone = function() {
    for (var e = [], t = 0; t < this.keys.length; t++) {
        var n = this.keys[t];
        e.push({
            time: n.time,
            value: n.value
        })
    }
    return new THREE.BooleanKeyframeTrack(this.name, e)
}, THREE.BooleanKeyframeTrack.parse = function(e) {
    return new THREE.BooleanKeyframeTrack(e.name, e.keys)
}, THREE.NumberKeyframeTrack = function(e, t) {
    THREE.KeyframeTrack.call(this, e, t), this.result = this.keys[0].value
}, THREE.NumberKeyframeTrack.prototype = Object.create(THREE.KeyframeTrack.prototype), THREE.NumberKeyframeTrack.prototype.constructor = THREE.NumberKeyframeTrack, THREE.NumberKeyframeTrack.prototype.setResult = function(e) {
    this.result = e
}, THREE.NumberKeyframeTrack.prototype.lerpValues = function(e, t, n) {
    return e * (1 - n) + t * n
}, THREE.NumberKeyframeTrack.prototype.compareValues = function(e, t) {
    return e === t
}, THREE.NumberKeyframeTrack.prototype.clone = function() {
    for (var e = [], t = 0; t < this.keys.length; t++) {
        var n = this.keys[t];
        e.push({
            time: n.time,
            value: n.value
        })
    }
    return new THREE.NumberKeyframeTrack(this.name, e)
}, THREE.NumberKeyframeTrack.parse = function(e) {
    return new THREE.NumberKeyframeTrack(e.name, e.keys)
}, THREE.Camera = function() {
    THREE.Object3D.call(this), this.type = "Camera", this.matrixWorldInverse = new THREE.Matrix4, this.projectionMatrix = new THREE.Matrix4
}, THREE.Camera.prototype = Object.create(THREE.Object3D.prototype), THREE.Camera.prototype.constructor = THREE.Camera, THREE.Camera.prototype.getWorldDirection = function() {
    var e = new THREE.Quaternion;
    return function(t) {
        var n = t || new THREE.Vector3;
        return this.getWorldQuaternion(e), n.set(0, 0, -1).applyQuaternion(e)
    }
}(), THREE.Camera.prototype.lookAt = function() {
    var e = new THREE.Matrix4;
    return function(t) {
        e.lookAt(this.position, t, this.up), this.quaternion.setFromRotationMatrix(e)
    }
}(), THREE.Camera.prototype.clone = function() {
    return (new this.constructor).copy(this)
}, THREE.Camera.prototype.copy = function(e) {
    return THREE.Object3D.prototype.copy.call(this, e), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this
}, THREE.CubeCamera = function(e, t, n) {
    THREE.Object3D.call(this), this.type = "CubeCamera";
    var i = 90,
        r = 1,
        o = new THREE.PerspectiveCamera(i, r, e, t);
    o.up.set(0, -1, 0), o.lookAt(new THREE.Vector3(1, 0, 0)), this.add(o);
    var a = new THREE.PerspectiveCamera(i, r, e, t);
    a.up.set(0, -1, 0), a.lookAt(new THREE.Vector3(-1, 0, 0)), this.add(a);
    var s = new THREE.PerspectiveCamera(i, r, e, t);
    s.up.set(0, 0, 1), s.lookAt(new THREE.Vector3(0, 1, 0)), this.add(s);
    var l = new THREE.PerspectiveCamera(i, r, e, t);
    l.up.set(0, 0, -1), l.lookAt(new THREE.Vector3(0, -1, 0)), this.add(l);
    var c = new THREE.PerspectiveCamera(i, r, e, t);
    c.up.set(0, -1, 0), c.lookAt(new THREE.Vector3(0, 0, 1)), this.add(c);
    var u = new THREE.PerspectiveCamera(i, r, e, t);
    u.up.set(0, -1, 0), u.lookAt(new THREE.Vector3(0, 0, -1)), this.add(u), this.renderTarget = new THREE.WebGLRenderTargetCube(n, n, {
        format: THREE.RGBFormat,
        magFilter: THREE.LinearFilter,
        minFilter: THREE.LinearFilter
    }), this.updateCubeMap = function(e, t) {
        null === this.parent && this.updateMatrixWorld();
        var n = this.renderTarget,
            i = n.texture.generateMipmaps;
        n.texture.generateMipmaps = !1, n.activeCubeFace = 0, e.render(t, o, n), n.activeCubeFace = 1, e.render(t, a, n), n.activeCubeFace = 2, e.render(t, s, n), n.activeCubeFace = 3, e.render(t, l, n), n.activeCubeFace = 4, e.render(t, c, n), n.texture.generateMipmaps = i, n.activeCubeFace = 5, e.render(t, u, n), e.setRenderTarget(null)
    }
}, THREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype), THREE.CubeCamera.prototype.constructor = THREE.CubeCamera, THREE.OrthographicCamera = function(e, t, n, i, r, o) {
    THREE.Camera.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.left = e, this.right = t, this.top = n, this.bottom = i, this.near = void 0 !== r ? r : .1, this.far = void 0 !== o ? o : 2e3, this.updateProjectionMatrix()
}, THREE.OrthographicCamera.prototype = Object.create(THREE.Camera.prototype), THREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera, THREE.OrthographicCamera.prototype.updateProjectionMatrix = function() {
    var e = (this.right - this.left) / (2 * this.zoom),
        t = (this.top - this.bottom) / (2 * this.zoom),
        n = (this.right + this.left) / 2,
        i = (this.top + this.bottom) / 2;
    this.projectionMatrix.makeOrthographic(n - e, n + e, i + t, i - t, this.near, this.far)
}, THREE.OrthographicCamera.prototype.copy = function(e) {
    return THREE.Camera.prototype.copy.call(this, e), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this
}, THREE.OrthographicCamera.prototype.toJSON = function(e) {
    var t = THREE.Object3D.prototype.toJSON.call(this, e);
    return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, t
}, THREE.PerspectiveCamera = function(e, t, n, i) {
    THREE.Camera.call(this), this.type = "PerspectiveCamera", this.zoom = 1, this.fov = void 0 !== e ? e : 50, this.aspect = void 0 !== t ? t : 1, this.near = void 0 !== n ? n : .1, this.far = void 0 !== i ? i : 2e3, this.updateProjectionMatrix()
}, THREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype), THREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera, THREE.PerspectiveCamera.prototype.setLens = function(e, t) {
    void 0 === t && (t = 24), this.fov = 2 * THREE.Math.radToDeg(Math.atan(t / (2 * e))), this.updateProjectionMatrix()
}, THREE.PerspectiveCamera.prototype.setViewOffset = function(e, t, n, i, r, o) {
    this.fullWidth = e, this.fullHeight = t, this.x = n, this.y = i, this.width = r, this.height = o, this.updateProjectionMatrix()
}, THREE.PerspectiveCamera.prototype.updateProjectionMatrix = function() {
    var e = THREE.Math.radToDeg(2 * Math.atan(Math.tan(.5 * THREE.Math.degToRad(this.fov)) / this.zoom));
    if (this.fullWidth) {
        var t = this.fullWidth / this.fullHeight,
            n = Math.tan(THREE.Math.degToRad(.5 * e)) * this.near,
            i = -n,
            r = t * i,
            o = t * n,
            a = Math.abs(o - r),
            s = Math.abs(n - i);
        this.projectionMatrix.makeFrustum(r + this.x * a / this.fullWidth, r + (this.x + this.width) * a / this.fullWidth, n - (this.y + this.height) * s / this.fullHeight, n - this.y * s / this.fullHeight, this.near, this.far)
    } else this.projectionMatrix.makePerspective(e, this.aspect, this.near, this.far)
}, THREE.PerspectiveCamera.prototype.copy = function(e) {
    return THREE.Camera.prototype.copy.call(this, e), this.fov = e.fov, this.aspect = e.aspect, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this
}, THREE.PerspectiveCamera.prototype.toJSON = function(e) {
    var t = THREE.Object3D.prototype.toJSON.call(this, e);
    return t.object.zoom = this.zoom, t.object.fov = this.fov, t.object.aspect = this.aspect, t.object.near = this.near, t.object.far = this.far, t
}, THREE.Light = function(e) {
    THREE.Object3D.call(this), this.type = "Light", this.color = new THREE.Color(e), this.receiveShadow = void 0
}, THREE.Light.prototype = Object.create(THREE.Object3D.prototype), THREE.Light.prototype.constructor = THREE.Light, Object.defineProperties(THREE.Light.prototype, {
    onlyShadow: {
        set: function(e) {
            console.warn("THREE.Light: .onlyShadow has been removed.")
        }
    },
    shadowCameraFov: {
        set: function(e) {
            this.shadow.camera.fov = e
        }
    },
    shadowCameraLeft: {
        set: function(e) {
            this.shadow.camera.left = e
        }
    },
    shadowCameraRight: {
        set: function(e) {
            this.shadow.camera.right = e
        }
    },
    shadowCameraTop: {
        set: function(e) {
            this.shadow.camera.top = e
        }
    },
    shadowCameraBottom: {
        set: function(e) {
            this.shadow.camera.bottom = e
        }
    },
    shadowCameraNear: {
        set: function(e) {
            this.shadow.camera.near = e
        }
    },
    shadowCameraFar: {
        set: function(e) {
            this.shadow.camera.far = e
        }
    },
    shadowCameraVisible: {
        set: function(e) {
            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow ) instead.")
        }
    },
    shadowBias: {
        set: function(e) {
            this.shadow.bias = e
        }
    },
    shadowDarkness: {
        set: function(e) {
            this.shadow.darkness = e
        }
    },
    shadowMapWidth: {
        set: function(e) {
            this.shadow.mapSize.width = e
        }
    },
    shadowMapHeight: {
        set: function(e) {
            this.shadow.mapSize.height = e
        }
    }
}), THREE.Light.prototype.copy = function(e) {
    return THREE.Object3D.prototype.copy.call(this, e), this.color.copy(e.color), this
}, THREE.Light.prototype.toJSON = function(e) {
    var t = THREE.Object3D.prototype.toJSON.call(this, e);
    return t.object.color = this.color.getHex(), void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()), void 0 !== this.intensity && (t.object.intensity = this.intensity), void 0 !== this.distance && (t.object.distance = this.distance), void 0 !== this.angle && (t.object.angle = this.angle), void 0 !== this.decay && (t.object.decay = this.decay), void 0 !== this.exponent && (t.object.exponent = this.exponent), t
}, THREE.LightShadow = function(e) {
    this.camera = e, this.bias = 0, this.darkness = 1, this.mapSize = new THREE.Vector2(512, 512), this.map = null, this.matrix = null
}, THREE.LightShadow.prototype = {
    constructor: THREE.LightShadow,
    copy: function(e) {
        this.camera = e.camera.clone(), this.bias = e.bias, this.darkness = e.darkness, this.mapSize.copy(e.mapSize)
    },
    clone: function() {
        return (new this.constructor).copy(this)
    }
}, THREE.AmbientLight = function(e) {
    THREE.Light.call(this, e), this.type = "AmbientLight", this.castShadow = void 0
}, THREE.AmbientLight.prototype = Object.create(THREE.Light.prototype), THREE.AmbientLight.prototype.constructor = THREE.AmbientLight, THREE.DirectionalLight = function(e, t) {
    THREE.Light.call(this, e), this.type = "DirectionalLight", this.position.set(0, 1, 0), this.updateMatrix(), this.target = new THREE.Object3D, this.intensity = void 0 !== t ? t : 1, this.shadow = new THREE.LightShadow(new THREE.OrthographicCamera(-500, 500, 500, -500, 50, 5e3))
}, THREE.DirectionalLight.prototype = Object.create(THREE.Light.prototype), THREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight, THREE.DirectionalLight.prototype.copy = function(e) {
    return THREE.Light.prototype.copy.call(this, e), this.intensity = e.intensity, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this
}, THREE.HemisphereLight = function(e, t, n) {
    THREE.Light.call(this, e), this.type = "HemisphereLight", this.castShadow = void 0, this.position.set(0, 1, 0), this.updateMatrix(), this.groundColor = new THREE.Color(t), this.intensity = void 0 !== n ? n : 1
}, THREE.HemisphereLight.prototype = Object.create(THREE.Light.prototype), THREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight, THREE.HemisphereLight.prototype.copy = function(e) {
    return THREE.Light.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this.intensity = e.intensity, this
}, THREE.PointLight = function(e, t, n, i) {
    THREE.Light.call(this, e), this.type = "PointLight", this.intensity = void 0 !== t ? t : 1, this.distance = void 0 !== n ? n : 0, this.decay = void 0 !== i ? i : 1, this.shadow = new THREE.LightShadow(new THREE.PerspectiveCamera(90, 1, 1, 500))
}, THREE.PointLight.prototype = Object.create(THREE.Light.prototype), THREE.PointLight.prototype.constructor = THREE.PointLight, THREE.PointLight.prototype.copy = function(e) {
    return THREE.Light.prototype.copy.call(this, e), this.intensity = e.intensity, this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this
}, THREE.SpotLight = function(e, t, n, i, r, o) {
    THREE.Light.call(this, e), this.type = "SpotLight", this.position.set(0, 1, 0), this.updateMatrix(), this.target = new THREE.Object3D, this.intensity = void 0 !== t ? t : 1, this.distance = void 0 !== n ? n : 0, this.angle = void 0 !== i ? i : Math.PI / 3, this.exponent = void 0 !== r ? r : 10, this.decay = void 0 !== o ? o : 1, this.shadow = new THREE.LightShadow(new THREE.PerspectiveCamera(50, 1, 50, 5e3))
}, THREE.SpotLight.prototype = Object.create(THREE.Light.prototype), THREE.SpotLight.prototype.constructor = THREE.SpotLight, THREE.SpotLight.prototype.copy = function(e) {
    return THREE.Light.prototype.copy.call(this, e), this.intensity = e.intensity, this.distance = e.distance, this.angle = e.angle, this.exponent = e.exponent, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this
}, THREE.Cache = {
    enabled: !1,
    files: {},
    add: function(e, t) {
        this.enabled !== !1 && (this.files[e] = t)
    },
    get: function(e) {
        if (this.enabled !== !1) return this.files[e]
    },
    remove: function(e) {
        delete this.files[e]
    },
    clear: function() {
        this.files = {}
    }
}, THREE.Loader = function() {
    this.onLoadStart = function() {}, this.onLoadProgress = function() {}, this.onLoadComplete = function() {}
}, THREE.Loader.prototype = {
    constructor: THREE.Loader,
    crossOrigin: void 0,
    extractUrlBase: function(e) {
        var t = e.split("/");
        return 1 === t.length ? "./" : (t.pop(), t.join("/") + "/")
    },
    initMaterials: function(e, t, n) {
        for (var i = [], r = 0; r < e.length; ++r) i[r] = this.createMaterial(e[r], t, n);
        return i
    },
    createMaterial: function() {
        var e, t, n;
        return function(i, r, o) {
            function a(e, n, i, a, l) {
                var c = r + e,
                    u = THREE.Loader.Handlers.get(c),
                    h;
                null !== u ? h = u.load(c) : (t.setCrossOrigin(o), h = t.load(c)), void 0 !== n && (h.repeat.fromArray(n), 1 !== n[0] && (h.wrapS = THREE.RepeatWrapping), 1 !== n[1] && (h.wrapT = THREE.RepeatWrapping)), void 0 !== i && h.offset.fromArray(i), void 0 !== a && ("repeat" === a[0] && (h.wrapS = THREE.RepeatWrapping), "mirror" === a[0] && (h.wrapS = THREE.MirroredRepeatWrapping), "repeat" === a[1] && (h.wrapT = THREE.RepeatWrapping), "mirror" === a[1] && (h.wrapT = THREE.MirroredRepeatWrapping)), void 0 !== l && (h.anisotropy = l);
                var d = THREE.Math.generateUUID();
                return s[d] = h, d
            }
            void 0 === e && (e = new THREE.Color), void 0 === t && (t = new THREE.TextureLoader), void 0 === n && (n = new THREE.MaterialLoader);
            var s = {},
                l = {
                    uuid: THREE.Math.generateUUID(),
                    type: "MeshLambertMaterial"
                };
            for (var c in i) {
                var u = i[c];
                switch (c) {
                    case "DbgColor":
                        l.color = u;
                        break;
                    case "DbgIndex":
                    case "opticalDensity":
                    case "illumination":
                        break;
                    case "DbgName":
                        l.name = u;
                        break;
                    case "blending":
                        l.blending = THREE[u];
                        break;
                    case "colorDiffuse":
                        l.color = e.fromArray(u).getHex();
                        break;
                    case "colorSpecular":
                        l.specular = e.fromArray(u).getHex();
                        break;
                    case "colorEmissive":
                        l.emissive = e.fromArray(u).getHex();
                        break;
                    case "specularCoef":
                        l.shininess = u;
                        break;
                    case "shading":
                        "basic" === u.toLowerCase() && (l.type = "MeshBasicMaterial"), "phong" === u.toLowerCase() && (l.type = "MeshPhongMaterial");
                        break;
                    case "mapDiffuse":
                        l.map = a(u, i.mapDiffuseRepeat, i.mapDiffuseOffset, i.mapDiffuseWrap, i.mapDiffuseAnisotropy);
                        break;
                    case "mapDiffuseRepeat":
                    case "mapDiffuseOffset":
                    case "mapDiffuseWrap":
                    case "mapDiffuseAnisotropy":
                        break;
                    case "mapLight":
                        l.lightMap = a(u, i.mapLightRepeat, i.mapLightOffset, i.mapLightWrap, i.mapLightAnisotropy);
                        break;
                    case "mapLightRepeat":
                    case "mapLightOffset":
                    case "mapLightWrap":
                    case "mapLightAnisotropy":
                        break;
                    case "mapAO":
                        l.aoMap = a(u, i.mapAORepeat, i.mapAOOffset, i.mapAOWrap, i.mapAOAnisotropy);
                        break;
                    case "mapAORepeat":
                    case "mapAOOffset":
                    case "mapAOWrap":
                    case "mapAOAnisotropy":
                        break;
                    case "mapBump":
                        l.bumpMap = a(u, i.mapBumpRepeat, i.mapBumpOffset, i.mapBumpWrap, i.mapBumpAnisotropy);
                        break;
                    case "mapBumpScale":
                        l.bumpScale = u;
                        break;
                    case "mapBumpRepeat":
                    case "mapBumpOffset":
                    case "mapBumpWrap":
                    case "mapBumpAnisotropy":
                        break;
                    case "mapNormal":
                        l.normalMap = a(u, i.mapNormalRepeat, i.mapNormalOffset, i.mapNormalWrap, i.mapNormalAnisotropy);
                        break;
                    case "mapNormalFactor":
                        l.normalScale = [u, u];
                        break;
                    case "mapNormalRepeat":
                    case "mapNormalOffset":
                    case "mapNormalWrap":
                    case "mapNormalAnisotropy":
                        break;
                    case "mapSpecular":
                        l.specularMap = a(u, i.mapSpecularRepeat, i.mapSpecularOffset, i.mapSpecularWrap, i.mapSpecularAnisotropy);
                        break;
                    case "mapSpecularRepeat":
                    case "mapSpecularOffset":
                    case "mapSpecularWrap":
                    case "mapSpecularAnisotropy":
                        break;
                    case "mapAlpha":
                        l.alphaMap = a(u, i.mapAlphaRepeat, i.mapAlphaOffset, i.mapAlphaWrap, i.mapAlphaAnisotropy);
                        break;
                    case "mapAlphaRepeat":
                    case "mapAlphaOffset":
                    case "mapAlphaWrap":
                    case "mapAlphaAnisotropy":
                        break;
                    case "flipSided":
                        l.side = THREE.BackSide;
                        break;
                    case "doubleSided":
                        l.side = THREE.DoubleSide;
                        break;
                    case "transparency":
                        console.warn("THREE.Loader: transparency has been renamed to opacity"), l.opacity = u;
                        break;
                    case "opacity":
                    case "transparent":
                    case "depthTest":
                    case "depthWrite":
                    case "transparent":
                    case "visible":
                    case "wireframe":
                        l[c] = u;
                        break;
                    case "vertexColors":
                        u === !0 && (l.vertexColors = THREE.VertexColors), "face" === u && (l.vertexColors = THREE.FaceColors);
                        break;
                    default:
                        console.error("Loader.createMaterial: Unsupported", c, u)
                }
            }
            return "MeshPhongMaterial" !== l.type && delete l.specular, l.opacity < 1 && (l.transparent = !0), n.setTextures(s), n.parse(l)
        }
    }()
}, THREE.Loader.Handlers = {
    handlers: [],
    add: function(e, t) {
        this.handlers.push(e, t)
    },
    get: function(e) {
        for (var t = this.handlers, n = 0, i = t.length; n < i; n += 2) {
            var r = t[n],
                o = t[n + 1];
            if (r.test(e)) return o
        }
        return null
    }
}, THREE.XHRLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}, THREE.XHRLoader.prototype = {
    constructor: THREE.XHRLoader,
    load: function(e, t, n, i) {
        var r = this,
            o = THREE.Cache.get(e);
        if (void 0 !== o) return t && setTimeout(function() {
            t(o)
        }, 0), o;
        var a = new XMLHttpRequest;
        return a.open("GET", e, !0), a.addEventListener("load", function(n) {
            var i = n.target.response;
            THREE.Cache.add(e, i), t && t(i), r.manager.itemEnd(e)
        }, !1), void 0 !== n && a.addEventListener("progress", function(e) {
            n(e)
        }, !1), a.addEventListener("error", function(t) {
            i && i(t), r.manager.itemError(e)
        }, !1), void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin), void 0 !== this.responseType && (a.responseType = this.responseType), void 0 !== this.withCredentials && (a.withCredentials = this.withCredentials), a.send(null), r.manager.itemStart(e), a
    },
    setResponseType: function(e) {
        this.responseType = e
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    },
    setWithCredentials: function(e) {
        this.withCredentials = e
    }
}, THREE.ImageLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}, THREE.ImageLoader.prototype = {
    constructor: THREE.ImageLoader,
    load: function(e, t, n, i) {
        var r = this,
            o = THREE.Cache.get(e);
        if (void 0 !== o) return r.manager.itemStart(e), t ? setTimeout(function() {
            t(o), r.manager.itemEnd(e)
        }, 0) : r.manager.itemEnd(e), o;
        var a = document.createElement("img");
        return a.addEventListener("load", function(n) {
            THREE.Cache.add(e, this), t && t(this), r.manager.itemEnd(e)
        }, !1), void 0 !== n && a.addEventListener("progress", function(e) {
            n(e)
        }, !1), a.addEventListener("error", function(t) {
            i && i(t), r.manager.itemError(e)
        }, !1), void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin), r.manager.itemStart(e), a.src = e, a
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    }
}, THREE.JSONLoader = function(e) {
    "boolean" == typeof e && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."), e = void 0), this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager, this.withCredentials = !1
}, THREE.JSONLoader.prototype = {
    constructor: THREE.JSONLoader,
    get statusDomElement() {
        return void 0 === this._statusDomElement && (this._statusDomElement = document.createElement("div")), console.warn("THREE.JSONLoader: .statusDomElement has been removed."), this._statusDomElement
    },
    load: function(e, t, n, i) {
        var r = this,
            o = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : THREE.Loader.prototype.extractUrlBase(e),
            a = new THREE.XHRLoader(this.manager);
        a.setCrossOrigin(this.crossOrigin), a.setWithCredentials(this.withCredentials), a.load(e, function(n) {
            var i = JSON.parse(n),
                a = i.metadata;
            if (void 0 !== a) {
                if ("object" === a.type) return void console.error("THREE.JSONLoader: " + e + " should be loaded with THREE.ObjectLoader instead.");
                if ("scene" === a.type) return void console.error("THREE.JSONLoader: " + e + " should be loaded with THREE.SceneLoader instead.")
            }
            var s = r.parse(i, o);
            t(s.geometry, s.materials)
        })
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    },
    setTexturePath: function(e) {
        this.texturePath = e
    },
    parse: function(e, t) {
        function n(t) {
            function n(e, t) {
                return e & 1 << t
            }
            var i, r, o, s, l, c, u, h, d, p, f, m, E, g, v, y, T, x, R, w, b, H, S, _, M, C, A, P = e.faces,
                k = e.vertices,
                L = e.normals,
                D = e.colors,
                O = 0;
            if (void 0 !== e.uvs) {
                for (i = 0; i < e.uvs.length; i++) e.uvs[i].length && O++;
                for (i = 0; i < O; i++) a.faceVertexUvs[i] = []
            }
            for (s = 0, l = k.length; s < l;) x = new THREE.Vector3, x.x = k[s++] * t, x.y = k[s++] * t, x.z = k[s++] * t, a.vertices.push(x);
            for (s = 0, l = P.length; s < l;)
                if (p = P[s++], f = n(p, 0), m = n(p, 1), E = n(p, 3), g = n(p, 4), v = n(p, 5), y = n(p, 6), T = n(p, 7), f) {
                    if (w = new THREE.Face3, w.a = P[s], w.b = P[s + 1], w.c = P[s + 3], b = new THREE.Face3, b.a = P[s + 1], b.b = P[s + 2], b.c = P[s + 3], s += 4, m && (d = P[s++], w.materialIndex = d, b.materialIndex = d), o = a.faces.length, E)
                        for (i = 0; i < O; i++)
                            for (_ = e.uvs[i], a.faceVertexUvs[i][o] = [], a.faceVertexUvs[i][o + 1] = [], r = 0; r < 4; r++) h = P[s++], C = _[2 * h], A = _[2 * h + 1], M = new THREE.Vector2(C, A), 2 !== r && a.faceVertexUvs[i][o].push(M), 0 !== r && a.faceVertexUvs[i][o + 1].push(M);
                    if (g && (u = 3 * P[s++], w.normal.set(L[u++], L[u++], L[u]), b.normal.copy(w.normal)), v)
                        for (i = 0; i < 4; i++) u = 3 * P[s++], S = new THREE.Vector3(L[u++], L[u++], L[u]), 2 !== i && w.vertexNormals.push(S), 0 !== i && b.vertexNormals.push(S);
                    if (y && (c = P[s++], H = D[c], w.color.setHex(H), b.color.setHex(H)), T)
                        for (i = 0; i < 4; i++) c = P[s++], H = D[c], 2 !== i && w.vertexColors.push(new THREE.Color(H)), 0 !== i && b.vertexColors.push(new THREE.Color(H));
                    a.faces.push(w), a.faces.push(b)
                } else {
                    if (R = new THREE.Face3, R.a = P[s++], R.b = P[s++], R.c = P[s++], m && (d = P[s++], R.materialIndex = d), o = a.faces.length, E)
                        for (i = 0; i < O; i++)
                            for (_ = e.uvs[i], a.faceVertexUvs[i][o] = [], r = 0; r < 3; r++) h = P[s++], C = _[2 * h], A = _[2 * h + 1], M = new THREE.Vector2(C, A), a.faceVertexUvs[i][o].push(M);
                    if (g && (u = 3 * P[s++], R.normal.set(L[u++], L[u++], L[u])), v)
                        for (i = 0; i < 3; i++) u = 3 * P[s++], S = new THREE.Vector3(L[u++], L[u++], L[u]), R.vertexNormals.push(S);
                    if (y && (c = P[s++], R.color.setHex(D[c])), T)
                        for (i = 0; i < 3; i++) c = P[s++], R.vertexColors.push(new THREE.Color(D[c]));
                    a.faces.push(R)
                }
        }

        function i() {
            var t = void 0 !== e.influencesPerVertex ? e.influencesPerVertex : 2;
            if (e.skinWeights)
                for (var n = 0, i = e.skinWeights.length; n < i; n += t) {
                    var r = e.skinWeights[n],
                        o = t > 1 ? e.skinWeights[n + 1] : 0,
                        s = t > 2 ? e.skinWeights[n + 2] : 0,
                        l = t > 3 ? e.skinWeights[n + 3] : 0;
                    a.skinWeights.push(new THREE.Vector4(r, o, s, l))
                }
            if (e.skinIndices)
                for (var n = 0, i = e.skinIndices.length; n < i; n += t) {
                    var c = e.skinIndices[n],
                        u = t > 1 ? e.skinIndices[n + 1] : 0,
                        h = t > 2 ? e.skinIndices[n + 2] : 0,
                        d = t > 3 ? e.skinIndices[n + 3] : 0;
                    a.skinIndices.push(new THREE.Vector4(c, u, h, d))
                }
            a.bones = e.bones, a.bones && a.bones.length > 0 && (a.skinWeights.length !== a.skinIndices.length || a.skinIndices.length !== a.vertices.length) && console.warn("When skinning, number of vertices (" + a.vertices.length + "), skinIndices (" + a.skinIndices.length + "), and skinWeights (" + a.skinWeights.length + ") should match.")
        }

        function r(t) {
            if (void 0 !== e.morphTargets)
                for (var n = 0, i = e.morphTargets.length; n < i; n++) {
                    a.morphTargets[n] = {}, a.morphTargets[n].name = e.morphTargets[n].name, a.morphTargets[n].vertices = [];
                    for (var r = a.morphTargets[n].vertices, o = e.morphTargets[n].vertices, s = 0, l = o.length; s < l; s += 3) {
                        var c = new THREE.Vector3;
                        c.x = o[s] * t, c.y = o[s + 1] * t, c.z = o[s + 2] * t, r.push(c)
                    }
                }
            if (void 0 !== e.morphColors && e.morphColors.length > 0) {
                console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
                for (var u = a.faces, h = e.morphColors[0].colors, n = 0, i = u.length; n < i; n++) u[n].color.fromArray(h, 3 * n)
            }
        }

        function o() {
            var t = [],
                n = [];
            void 0 !== e.animation && n.push(e.animation), void 0 !== e.animations && (e.animations.length ? n = n.concat(e.animations) : n.push(e.animations));
            for (var i = 0; i < n.length; i++) {
                var r = THREE.AnimationClip.parseAnimation(n[i], a.bones);
                r && t.push(r)
            }
            if (a.morphTargets) {
                var o = THREE.AnimationClip.CreateClipsFromMorphTargetSequences(a.morphTargets, 10);
                t = t.concat(o)
            }
            t.length > 0 && (a.animations = t)
        }
        var a = new THREE.Geometry,
            s = void 0 !== e.scale ? 1 / e.scale : 1;
        if (n(s), i(), r(s), o(), a.computeFaceNormals(), a.computeBoundingSphere(), void 0 === e.materials || 0 === e.materials.length) return {
            geometry: a
        };
        var l = THREE.Loader.prototype.initMaterials(e.materials, t, this.crossOrigin);
        return {
            geometry: a,
            materials: l
        }
    }
}, THREE.LoadingManager = function(e, t, n) {
    var i = this,
        r = !1,
        o = 0,
        a = 0;
    this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function(e) {
        a++, r === !1 && void 0 !== i.onStart && i.onStart(e, o, a), r = !0
    }, this.itemEnd = function(e) {
        o++, void 0 !== i.onProgress && i.onProgress(e, o, a), o === a && (r = !1, void 0 !== i.onLoad && i.onLoad())
    }, this.itemError = function(e) {
        void 0 !== i.onError && i.onError(e)
    }
}, THREE.DefaultLoadingManager = new THREE.LoadingManager, THREE.BufferGeometryLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}, THREE.BufferGeometryLoader.prototype = {
    constructor: THREE.BufferGeometryLoader,
    load: function(e, t, n, i) {
        var r = this,
            o = new THREE.XHRLoader(r.manager);
        o.setCrossOrigin(this.crossOrigin), o.load(e, function(e) {
            t(r.parse(JSON.parse(e)))
        }, n, i)
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    },
    parse: function(e) {
        var t = new THREE.BufferGeometry,
            n = e.data.index;
        if (void 0 !== n) {
            var i = new self[n.type](n.array);
            t.setIndex(new THREE.BufferAttribute(i, 1))
        }
        var r = e.data.attributes;
        for (var o in r) {
            var a = r[o],
                i = new self[a.type](a.array);
            t.addAttribute(o, new THREE.BufferAttribute(i, a.itemSize))
        }
        var s = e.data.groups || e.data.drawcalls || e.data.offsets;
        if (void 0 !== s)
            for (var l = 0, c = s.length; l !== c; ++l) {
                var u = s[l];
                t.addGroup(u.start, u.count)
            }
        var h = e.data.boundingSphere;
        if (void 0 !== h) {
            var d = new THREE.Vector3;
            void 0 !== h.center && d.fromArray(h.center), t.boundingSphere = new THREE.Sphere(d, h.radius)
        }
        return t
    }
}, THREE.MaterialLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager, this.textures = {}
}, THREE.MaterialLoader.prototype = {
    constructor: THREE.MaterialLoader,
    load: function(e, t, n, i) {
        var r = this,
            o = new THREE.XHRLoader(r.manager);
        o.setCrossOrigin(this.crossOrigin), o.load(e, function(e) {
            t(r.parse(JSON.parse(e)))
        }, n, i)
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    },
    setTextures: function(e) {
        this.textures = e
    },
    getTexture: function(e) {
        var t = this.textures;
        return void 0 === t[e] && console.warn("THREE.MaterialLoader: Undefined texture", e), t[e]
    },
    parse: function(e) {
        var t = new THREE[e.type];
        if (t.uuid = e.uuid, void 0 !== e.name && (t.name = e.name), void 0 !== e.color && t.color.setHex(e.color), void 0 !== e.emissive && t.emissive.setHex(e.emissive), void 0 !== e.specular && t.specular.setHex(e.specular), void 0 !== e.shininess && (t.shininess = e.shininess), void 0 !== e.uniforms && (t.uniforms = e.uniforms), void 0 !== e.vertexShader && (t.vertexShader = e.vertexShader), void 0 !== e.fragmentShader && (t.fragmentShader = e.fragmentShader), void 0 !== e.vertexColors && (t.vertexColors = e.vertexColors), void 0 !== e.shading && (t.shading = e.shading), void 0 !== e.blending && (t.blending = e.blending), void 0 !== e.side && (t.side = e.side), void 0 !== e.opacity && (t.opacity = e.opacity), void 0 !== e.transparent && (t.transparent = e.transparent), void 0 !== e.alphaTest && (t.alphaTest = e.alphaTest), void 0 !== e.depthTest && (t.depthTest = e.depthTest), void 0 !== e.depthWrite && (t.depthWrite = e.depthWrite), void 0 !== e.wireframe && (t.wireframe = e.wireframe), void 0 !== e.wireframeLinewidth && (t.wireframeLinewidth = e.wireframeLinewidth), void 0 !== e.size && (t.size = e.size), void 0 !== e.sizeAttenuation && (t.sizeAttenuation = e.sizeAttenuation), void 0 !== e.map && (t.map = this.getTexture(e.map)), void 0 !== e.alphaMap && (t.alphaMap = this.getTexture(e.alphaMap), t.transparent = !0), void 0 !== e.bumpMap && (t.bumpMap = this.getTexture(e.bumpMap)), void 0 !== e.bumpScale && (t.bumpScale = e.bumpScale), void 0 !== e.normalMap && (t.normalMap = this.getTexture(e.normalMap)), e.normalScale && (t.normalScale = new THREE.Vector2(e.normalScale, e.normalScale)), void 0 !== e.displacementMap && (t.displacementMap = this.getTexture(e.displacementMap)), void 0 !== e.displacementScale && (t.displacementScale = e.displacementScale), void 0 !== e.displacementBias && (t.displacementBias = e.displacementBias), void 0 !== e.specularMap && (t.specularMap = this.getTexture(e.specularMap)), void 0 !== e.envMap && (t.envMap = this.getTexture(e.envMap), t.combine = THREE.MultiplyOperation), e.reflectivity && (t.reflectivity = e.reflectivity), void 0 !== e.lightMap && (t.lightMap = this.getTexture(e.lightMap)), void 0 !== e.lightMapIntensity && (t.lightMapIntensity = e.lightMapIntensity), void 0 !== e.aoMap && (t.aoMap = this.getTexture(e.aoMap)), void 0 !== e.aoMapIntensity && (t.aoMapIntensity = e.aoMapIntensity), void 0 !== e.materials)
            for (var n = 0, i = e.materials.length; n < i; n++) t.materials.push(this.parse(e.materials[n]));
        return t
    }
}, THREE.ObjectLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager, this.texturePath = ""
}, THREE.ObjectLoader.prototype = {
    constructor: THREE.ObjectLoader,
    load: function(e, t, n, i) {
        "" === this.texturePath && (this.texturePath = e.substring(0, e.lastIndexOf("/") + 1));
        var r = this,
            o = new THREE.XHRLoader(r.manager);
        o.setCrossOrigin(this.crossOrigin), o.load(e, function(e) {
            r.parse(JSON.parse(e), t)
        }, n, i)
    },
    setTexturePath: function(e) {
        this.texturePath = e
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    },
    parse: function(e, t) {
        var n = this.parseGeometries(e.geometries),
            i = this.parseImages(e.images, function() {
                void 0 !== t && t(a)
            }),
            r = this.parseTextures(e.textures, i),
            o = this.parseMaterials(e.materials, r),
            a = this.parseObject(e.object, n, o);
        return e.animations && (a.animations = this.parseAnimations(e.animations)), void 0 !== e.images && 0 !== e.images.length || void 0 !== t && t(a), a
    },
    parseGeometries: function(e) {
        var t = {};
        if (void 0 !== e)
            for (var n = new THREE.JSONLoader, i = new THREE.BufferGeometryLoader, r = 0, o = e.length; r < o; r++) {
                var a, s = e[r];
                switch (s.type) {
                    case "PlaneGeometry":
                    case "PlaneBufferGeometry":
                        a = new THREE[s.type](s.width, s.height, s.widthSegments, s.heightSegments);
                        break;
                    case "BoxGeometry":
                    case "CubeGeometry":
                        a = new THREE.BoxGeometry(s.width, s.height, s.depth, s.widthSegments, s.heightSegments, s.depthSegments);
                        break;
                    case "CircleBufferGeometry":
                        a = new THREE.CircleBufferGeometry(s.radius, s.segments, s.thetaStart, s.thetaLength);
                        break;
                    case "CircleGeometry":
                        a = new THREE.CircleGeometry(s.radius, s.segments, s.thetaStart, s.thetaLength);
                        break;
                    case "CylinderGeometry":
                        a = new THREE.CylinderGeometry(s.radiusTop, s.radiusBottom, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                        break;
                    case "SphereGeometry":
                        a = new THREE.SphereGeometry(s.radius, s.widthSegments, s.heightSegments, s.phiStart, s.phiLength, s.thetaStart, s.thetaLength);
                        break;
                    case "SphereBufferGeometry":
                        a = new THREE.SphereBufferGeometry(s.radius, s.widthSegments, s.heightSegments, s.phiStart, s.phiLength, s.thetaStart, s.thetaLength);
                        break;
                    case "DodecahedronGeometry":
                        a = new THREE.DodecahedronGeometry(s.radius, s.detail);
                        break;
                    case "IcosahedronGeometry":
                        a = new THREE.IcosahedronGeometry(s.radius, s.detail);
                        break;
                    case "OctahedronGeometry":
                        a = new THREE.OctahedronGeometry(s.radius, s.detail);
                        break;
                    case "TetrahedronGeometry":
                        a = new THREE.TetrahedronGeometry(s.radius, s.detail);
                        break;
                    case "RingGeometry":
                        a = new THREE.RingGeometry(s.innerRadius, s.outerRadius, s.thetaSegments, s.phiSegments, s.thetaStart, s.thetaLength);
                        break;
                    case "TorusGeometry":
                        a = new THREE.TorusGeometry(s.radius, s.tube, s.radialSegments, s.tubularSegments, s.arc);
                        break;
                    case "TorusKnotGeometry":
                        a = new THREE.TorusKnotGeometry(s.radius, s.tube, s.radialSegments, s.tubularSegments, s.p, s.q, s.heightScale);
                        break;
                    case "BufferGeometry":
                        a = i.parse(s);
                        break;
                    case "Geometry":
                        a = n.parse(s.data, this.texturePath).geometry;
                        break;
                    default:
                        console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s.type + '"');
                        continue
                }
                a.uuid = s.uuid, void 0 !== s.name && (a.name = s.name), t[s.uuid] = a
            }
        return t
    },
    parseMaterials: function(e, t) {
        var n = {};
        if (void 0 !== e) {
            var i = new THREE.MaterialLoader;
            i.setTextures(t);
            for (var r = 0, o = e.length; r < o; r++) {
                var a = i.parse(e[r]);
                n[a.uuid] = a
            }
        }
        return n
    },
    parseAnimations: function(e) {
        for (var t = [], n = 0; n < e.length; n++) {
            var i = THREE.AnimationClip.parse(e[n]);
            t.push(i)
        }
        return t
    },
    parseImages: function(e, t) {
        function n(e) {
            return i.manager.itemStart(e), a.load(e, function() {
                i.manager.itemEnd(e)
            })
        }
        var i = this,
            r = {};
        if (void 0 !== e && e.length > 0) {
            var o = new THREE.LoadingManager(t),
                a = new THREE.ImageLoader(o);
            a.setCrossOrigin(this.crossOrigin);
            for (var s = 0, l = e.length; s < l; s++) {
                var c = e[s],
                    u = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : i.texturePath + c.url;
                r[c.uuid] = n(u)
            }
        }
        return r
    },
    parseTextures: function(e, t) {
        function n(e) {
            return "number" == typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e), THREE[e])
        }
        var i = {};
        if (void 0 !== e)
            for (var r = 0, o = e.length; r < o; r++) {
                var a = e[r];
                void 0 === a.image && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), void 0 === t[a.image] && console.warn("THREE.ObjectLoader: Undefined image", a.image);
                var s = new THREE.Texture(t[a.image]);
                s.needsUpdate = !0, s.uuid = a.uuid, void 0 !== a.name && (s.name = a.name), void 0 !== a.mapping && (s.mapping = n(a.mapping)), void 0 !== a.offset && (s.offset = new THREE.Vector2(a.offset[0], a.offset[1])), void 0 !== a.repeat && (s.repeat = new THREE.Vector2(a.repeat[0], a.repeat[1])), void 0 !== a.minFilter && (s.minFilter = n(a.minFilter)), void 0 !== a.magFilter && (s.magFilter = n(a.magFilter)), void 0 !== a.anisotropy && (s.anisotropy = a.anisotropy), Array.isArray(a.wrap) && (s.wrapS = n(a.wrap[0]), s.wrapT = n(a.wrap[1])), i[a.uuid] = s
            }
        return i
    },
    parseObject: function() {
        var e = new THREE.Matrix4;
        return function(t, n, i) {
            function r(e) {
                return void 0 === n[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e), n[e]
            }

            function o(e) {
                if (void 0 !== e) return void 0 === i[e] && console.warn("THREE.ObjectLoader: Undefined material", e), i[e]
            }
            var a;
            switch (t.type) {
                case "Scene":
                    a = new THREE.Scene;
                    break;
                case "PerspectiveCamera":
                    a = new THREE.PerspectiveCamera(t.fov, t.aspect, t.near, t.far);
                    break;
                case "OrthographicCamera":
                    a = new THREE.OrthographicCamera(t.left, t.right, t.top, t.bottom, t.near, t.far);
                    break;
                case "AmbientLight":
                    a = new THREE.AmbientLight(t.color);
                    break;
                case "DirectionalLight":
                    a = new THREE.DirectionalLight(t.color, t.intensity);
                    break;
                case "PointLight":
                    a = new THREE.PointLight(t.color, t.intensity, t.distance, t.decay);
                    break;
                case "SpotLight":
                    a = new THREE.SpotLight(t.color, t.intensity, t.distance, t.angle, t.exponent, t.decay);
                    break;
                case "HemisphereLight":
                    a = new THREE.HemisphereLight(t.color, t.groundColor, t.intensity);
                    break;
                case "Mesh":
                    a = new THREE.Mesh(r(t.geometry), o(t.material));
                    break;
                case "LOD":
                    a = new THREE.LOD;
                    break;
                case "Line":
                    a = new THREE.Line(r(t.geometry), o(t.material), t.mode);
                    break;
                case "PointCloud":
                case "Points":
                    a = new THREE.Points(r(t.geometry), o(t.material));
                    break;
                case "Sprite":
                    a = new THREE.Sprite(o(t.material));
                    break;
                case "Group":
                    a = new THREE.Group;
                    break;
                default:
                    a = new THREE.Object3D
            }
            if (a.uuid = t.uuid, void 0 !== t.name && (a.name = t.name), void 0 !== t.matrix ? (e.fromArray(t.matrix), e.decompose(a.position, a.quaternion, a.scale)) : (void 0 !== t.position && a.position.fromArray(t.position), void 0 !== t.rotation && a.rotation.fromArray(t.rotation), void 0 !== t.scale && a.scale.fromArray(t.scale)), void 0 !== t.castShadow && (a.castShadow = t.castShadow), void 0 !== t.receiveShadow && (a.receiveShadow = t.receiveShadow), void 0 !== t.visible && (a.visible = t.visible), void 0 !== t.userData && (a.userData = t.userData), void 0 !== t.children)
                for (var s in t.children) a.add(this.parseObject(t.children[s], n, i));
            if ("LOD" === t.type)
                for (var l = t.levels, c = 0; c < l.length; c++) {
                    var u = l[c],
                        s = a.getObjectByProperty("uuid", u.object);
                    void 0 !== s && a.addLevel(s, u.distance)
                }
            return a
        }
    }()
}, THREE.TextureLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}, THREE.TextureLoader.prototype = {
    constructor: THREE.TextureLoader,
    load: function(e, t, n, i) {
        var r = new THREE.Texture,
            o = new THREE.ImageLoader(this.manager);
        return o.setCrossOrigin(this.crossOrigin), o.load(e, function(e) {
            r.image = e, r.needsUpdate = !0, void 0 !== t && t(r)
        }, n, i), r
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    }
}, THREE.CubeTextureLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager
}, THREE.CubeTextureLoader.prototype = {
    constructor: THREE.CubeTextureLoader,
    load: function(e, t, n, i) {
        function r(n) {
            a.load(e[n], function(e) {
                o.images[n] = e, s++, 6 === s && (o.needsUpdate = !0, t && t(o))
            }, void 0, i)
        }
        var o = new THREE.CubeTexture([]),
            a = new THREE.ImageLoader;
        a.setCrossOrigin(this.crossOrigin);
        for (var s = 0, l = 0; l < e.length; ++l) r(l);
        return o
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    }
}, THREE.DataTextureLoader = THREE.BinaryTextureLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager, this._parser = null
}, THREE.BinaryTextureLoader.prototype = {
    constructor: THREE.BinaryTextureLoader,
    load: function(e, t, n, i) {
        var r = this,
            o = new THREE.DataTexture,
            a = new THREE.XHRLoader(this.manager);
        return a.setCrossOrigin(this.crossOrigin), a.setResponseType("arraybuffer"), a.load(e, function(e) {
            var n = r._parser(e);
            n && (void 0 !== n.image ? o.image = n.image : void 0 !== n.data && (o.image.width = n.width, o.image.height = n.height, o.image.data = n.data), o.wrapS = void 0 !== n.wrapS ? n.wrapS : THREE.ClampToEdgeWrapping, o.wrapT = void 0 !== n.wrapT ? n.wrapT : THREE.ClampToEdgeWrapping, o.magFilter = void 0 !== n.magFilter ? n.magFilter : THREE.LinearFilter, o.minFilter = void 0 !== n.minFilter ? n.minFilter : THREE.LinearMipMapLinearFilter, o.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1, void 0 !== n.format && (o.format = n.format), void 0 !== n.type && (o.type = n.type), void 0 !== n.mipmaps && (o.mipmaps = n.mipmaps), 1 === n.mipmapCount && (o.minFilter = THREE.LinearFilter), o.needsUpdate = !0, t && t(o, n))
        }, n, i), o
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    }
}, THREE.CompressedTextureLoader = function(e) {
    this.manager = void 0 !== e ? e : THREE.DefaultLoadingManager, this._parser = null
}, THREE.CompressedTextureLoader.prototype = {
    constructor: THREE.CompressedTextureLoader,
    load: function(e, t, n, i) {
        var r = this,
            o = [],
            a = new THREE.CompressedTexture;
        a.image = o;
        var s = new THREE.XHRLoader(this.manager);
        if (s.setCrossOrigin(this.crossOrigin), s.setResponseType("arraybuffer"), Array.isArray(e))
            for (var l = 0, c = function(c) {
                    s.load(e[c], function(e) {
                        var n = r._parser(e, !0);
                        o[c] = {
                            width: n.width,
                            height: n.height,
                            format: n.format,
                            mipmaps: n.mipmaps
                        }, l += 1, 6 === l && (1 === n.mipmapCount && (a.minFilter = THREE.LinearFilter), a.format = n.format, a.needsUpdate = !0, t && t(a))
                    }, n, i)
                }, u = 0, h = e.length; u < h; ++u) c(u);
        else s.load(e, function(e) {
            var n = r._parser(e, !0);
            if (n.isCubemap)
                for (var i = n.mipmaps.length / n.mipmapCount, s = 0; s < i; s++) {
                    o[s] = {
                        mipmaps: []
                    };
                    for (var l = 0; l < n.mipmapCount; l++) o[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + l]), o[s].format = n.format, o[s].width = n.width, o[s].height = n.height
                } else a.image.width = n.width, a.image.height = n.height, a.mipmaps = n.mipmaps;
            1 === n.mipmapCount && (a.minFilter = THREE.LinearFilter), a.format = n.format, a.needsUpdate = !0, t && t(a)
        }, n, i);
        return a
    },
    setCrossOrigin: function(e) {
        this.crossOrigin = e
    }
}, THREE.Material = function() {
    Object.defineProperty(this, "id", {
        value: THREE.MaterialIdCount++
    }), this.uuid = THREE.Math.generateUUID(), this.name = "", this.type = "Material", this.side = THREE.FrontSide, this.opacity = 1, this.transparent = !1, this.blending = THREE.NormalBlending, this.blendSrc = THREE.SrcAlphaFactor, this.blendDst = THREE.OneMinusSrcAlphaFactor, this.blendEquation = THREE.AddEquation, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = THREE.LessEqualDepth, this.depthTest = !0, this.depthWrite = !0, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.alphaTest = 0, this.overdraw = 0, this.visible = !0, this._needsUpdate = !0
}, THREE.Material.prototype = {
    constructor: THREE.Material,
    get needsUpdate() {
        return this._needsUpdate
    },
    set needsUpdate(e) {
        e === !0 && this.update(), this._needsUpdate = e
    },
    setValues: function(e) {
        if (void 0 !== e)
            for (var t in e) {
                var n = e[t];
                if (void 0 !== n) {
                    var i = this[t];
                    void 0 !== i ? i instanceof THREE.Color ? i.set(n) : i instanceof THREE.Vector3 && n instanceof THREE.Vector3 ? i.copy(n) : "overdraw" === t ? this[t] = Number(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.")
                } else console.warn("THREE.Material: '" + t + "' parameter is undefined.")
            }
    },
    toJSON: function(e) {
        var t = {
            metadata: {
                version: 4.4,
                type: "Material",
                generator: "Material.toJSON"
            }
        };
        return t.uuid = this.uuid, t.type = this.type, "" !== this.name && (t.name = this.name), this.color instanceof THREE.Color && (t.color = this.color.getHex()), this.emissive instanceof THREE.Color && (t.emissive = this.emissive.getHex()), this.specular instanceof THREE.Color && (t.specular = this.specular.getHex()), void 0 !== this.shininess && (t.shininess = this.shininess), this.map instanceof THREE.Texture && (t.map = this.map.toJSON(e).uuid), this.alphaMap instanceof THREE.Texture && (t.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap instanceof THREE.Texture && (t.lightMap = this.lightMap.toJSON(e).uuid), this.bumpMap instanceof THREE.Texture && (t.bumpMap = this.bumpMap.toJSON(e).uuid, t.bumpScale = this.bumpScale), this.normalMap instanceof THREE.Texture && (t.normalMap = this.normalMap.toJSON(e).uuid, t.normalScale = this.normalScale), this.displacementMap instanceof THREE.Texture && (t.displacementMap = this.displacementMap.toJSON(e).uuid, t.displacementScale = this.displacementScale, t.displacementBias = this.displacementBias), this.specularMap instanceof THREE.Texture && (t.specularMap = this.specularMap.toJSON(e).uuid), this.envMap instanceof THREE.Texture && (t.envMap = this.envMap.toJSON(e).uuid, t.reflectivity = this.reflectivity), void 0 !== this.size && (t.size = this.size), void 0 !== this.sizeAttenuation && (t.sizeAttenuation = this.sizeAttenuation), void 0 !== this.vertexColors && this.vertexColors !== THREE.NoColors && (t.vertexColors = this.vertexColors), void 0 !== this.shading && this.shading !== THREE.SmoothShading && (t.shading = this.shading), void 0 !== this.blending && this.blending !== THREE.NormalBlending && (t.blending = this.blending), void 0 !== this.side && this.side !== THREE.FrontSide && (t.side = this.side), this.opacity < 1 && (t.opacity = this.opacity), this.transparent === !0 && (t.transparent = this.transparent), this.alphaTest > 0 && (t.alphaTest = this.alphaTest), this.wireframe === !0 && (t.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (t.wireframeLinewidth = this.wireframeLinewidth), t
    },
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.name = e.name, this.side = e.side, this.opacity = e.opacity, this.transparent = e.transparent, this.blending = e.blending, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.alphaTest = e.alphaTest, this.overdraw = e.overdraw, this.visible = e.visible, this
    },
    update: function() {
        this.dispatchEvent({
            type: "update"
        })
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    },
    get wrapAround() {
        console.warn("THREE." + this.type + ": .wrapAround has been removed.")
    },
    set wrapAround(e) {
        console.warn("THREE." + this.type + ": .wrapAround has been removed.")
    },
    get wrapRGB() {
        return console.warn("THREE." + this.type + ": .wrapRGB has been removed."), new THREE.Color
    }
}, THREE.EventDispatcher.prototype.apply(THREE.Material.prototype), THREE.MaterialIdCount = 0, THREE.LineBasicMaterial = function(e) {
    THREE.Material.call(this), this.type = "LineBasicMaterial", this.color = new THREE.Color(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.vertexColors = THREE.NoColors, this.fog = !0, this.setValues(e)
}, THREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype), THREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial, THREE.LineBasicMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this.vertexColors = e.vertexColors, this.fog = e.fog, this
}, THREE.LineDashedMaterial = function(e) {
    THREE.Material.call(this), this.type = "LineDashedMaterial", this.color = new THREE.Color(16777215), this.linewidth = 1, this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.vertexColors = !1, this.fog = !0, this.setValues(e)
}, THREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype), THREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial, THREE.LineDashedMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e), this.color.copy(e.color), this.linewidth = e.linewidth, this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this.vertexColors = e.vertexColors, this.fog = e.fog, this
}, THREE.MeshBasicMaterial = function(e) {
    THREE.Material.call(this), this.type = "MeshBasicMaterial", this.color = new THREE.Color(16777215), this.map = null, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = THREE.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = THREE.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = THREE.NoColors, this.skinning = !1, this.morphTargets = !1, this.setValues(e)
}, THREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype), THREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial, THREE.MeshBasicMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.fog = e.fog, this.shading = e.shading, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.vertexColors = e.vertexColors, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this
}, THREE.MeshLambertMaterial = function(e) {
    THREE.Material.call(this), this.type = "MeshLambertMaterial", this.color = new THREE.Color(16777215), this.emissive = new THREE.Color(0), this.map = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = THREE.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = THREE.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
}, THREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype), THREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial, THREE.MeshLambertMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e), this.color.copy(e.color), this.emissive.copy(e.emissive), this.map = e.map, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.fog = e.fog, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.vertexColors = e.vertexColors, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
}, THREE.MeshPhongMaterial = function(e) {
    THREE.Material.call(this), this.type = "MeshPhongMaterial", this.color = new THREE.Color(16777215), this.emissive = new THREE.Color(0), this.specular = new THREE.Color(1118481), this.shininess = 30, this.metal = !1, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new THREE.Vector2(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null,
        this.alphaMap = null, this.envMap = null, this.combine = THREE.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = THREE.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = THREE.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
}, THREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype), THREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial, THREE.MeshPhongMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e), this.color.copy(e.color), this.emissive.copy(e.emissive), this.specular.copy(e.specular), this.shininess = e.shininess, this.metal = e.metal, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissiveMap = e.emissiveMap, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.fog = e.fog, this.shading = e.shading, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.vertexColors = e.vertexColors, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
}, THREE.MeshDepthMaterial = function(e) {
    THREE.Material.call(this), this.type = "MeshDepthMaterial", this.morphTargets = !1, this.wireframe = !1, this.wireframeLinewidth = 1, this.setValues(e)
}, THREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype), THREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial, THREE.MeshDepthMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this
}, THREE.MeshNormalMaterial = function(e) {
    THREE.Material.call(this, e), this.type = "MeshNormalMaterial", this.wireframe = !1, this.wireframeLinewidth = 1, this.morphTargets = !1, this.setValues(e)
}, THREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype), THREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial, THREE.MeshNormalMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this
}, THREE.MultiMaterial = function(e) {
    this.uuid = THREE.Math.generateUUID(), this.type = "MultiMaterial", this.materials = e instanceof Array ? e : [], this.visible = !0
}, THREE.MultiMaterial.prototype = {
    constructor: THREE.MultiMaterial,
    toJSON: function() {
        for (var e = {
                metadata: {
                    version: 4.2,
                    type: "material",
                    generator: "MaterialExporter"
                },
                uuid: this.uuid,
                type: this.type,
                materials: []
            }, t = 0, n = this.materials.length; t < n; t++) e.materials.push(this.materials[t].toJSON());
        return e.visible = this.visible, e
    },
    clone: function() {
        for (var e = new this.constructor, t = 0; t < this.materials.length; t++) e.materials.push(this.materials[t].clone());
        return e.visible = this.visible, e
    }
}, THREE.MeshFaceMaterial = THREE.MultiMaterial, THREE.PointsMaterial = function(e) {
    THREE.Material.call(this), this.type = "PointsMaterial", this.color = new THREE.Color(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.vertexColors = THREE.NoColors, this.fog = !0, this.setValues(e)
}, THREE.PointsMaterial.prototype = Object.create(THREE.Material.prototype), THREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial, THREE.PointsMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this.vertexColors = e.vertexColors, this.fog = e.fog, this
}, THREE.PointCloudMaterial = function(e) {
    return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new THREE.PointsMaterial(e)
}, THREE.ParticleBasicMaterial = function(e) {
    return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new THREE.PointsMaterial(e)
}, THREE.ParticleSystemMaterial = function(e) {
    return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new THREE.PointsMaterial(e)
}, THREE.ShaderMaterial = function(e) {
    THREE.Material.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}", this.shading = THREE.SmoothShading, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.vertexColors = THREE.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.derivatives = !1, this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv2: [0, 0]
    }, this.index0AttributeName = void 0, void 0 !== e && (void 0 !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e))
}, THREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype), THREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial, THREE.ShaderMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = THREE.UniformsUtils.clone(e.uniforms), this.attributes = e.attributes, this.defines = e.defines, this.shading = e.shading, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.fog = e.fog, this.lights = e.lights, this.vertexColors = e.vertexColors, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this.derivatives = e.derivatives, this
}, THREE.ShaderMaterial.prototype.toJSON = function(e) {
    var t = THREE.Material.prototype.toJSON.call(this, e);
    return t.uniforms = this.uniforms, t.attributes = this.attributes, t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader, t
}, THREE.RawShaderMaterial = function(e) {
    THREE.ShaderMaterial.call(this, e), this.type = "RawShaderMaterial"
}, THREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype), THREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial, THREE.SpriteMaterial = function(e) {
    THREE.Material.call(this), this.type = "SpriteMaterial", this.color = new THREE.Color(16777215), this.map = null, this.rotation = 0, this.fog = !1, this.setValues(e)
}, THREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype), THREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial, THREE.SpriteMaterial.prototype.copy = function(e) {
    return THREE.Material.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.rotation = e.rotation, this.fog = e.fog, this
}, THREE.Texture = function(e, t, n, i, r, o, a, s, l) {
    Object.defineProperty(this, "id", {
        value: THREE.TextureIdCount++
    }), this.uuid = THREE.Math.generateUUID(), this.name = "", this.sourceFile = "", this.image = void 0 !== e ? e : THREE.Texture.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = void 0 !== t ? t : THREE.Texture.DEFAULT_MAPPING, this.wrapS = void 0 !== n ? n : THREE.ClampToEdgeWrapping, this.wrapT = void 0 !== i ? i : THREE.ClampToEdgeWrapping, this.magFilter = void 0 !== r ? r : THREE.LinearFilter, this.minFilter = void 0 !== o ? o : THREE.LinearMipMapLinearFilter, this.anisotropy = void 0 !== l ? l : 1, this.format = void 0 !== a ? a : THREE.RGBAFormat, this.type = void 0 !== s ? s : THREE.UnsignedByteType, this.offset = new THREE.Vector2(0, 0), this.repeat = new THREE.Vector2(1, 1), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.version = 0, this.onUpdate = null
}, THREE.Texture.DEFAULT_IMAGE = void 0, THREE.Texture.DEFAULT_MAPPING = THREE.UVMapping, THREE.Texture.prototype = {
    constructor: THREE.Texture,
    set needsUpdate(e) {
        e === !0 && this.version++
    },
    clone: function() {
        return (new this.constructor).copy(this)
    },
    copy: function(e) {
        return this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this
    },
    toJSON: function(e) {
        function t(e) {
            var t;
            return void 0 !== e.toDataURL ? t = e : (t = document.createElement("canvas"), t.width = e.width, t.height = e.height, t.getContext("2d").drawImage(e, 0, 0, e.width, e.height)), t.width > 2048 || t.height > 2048 ? t.toDataURL("image/jpeg", .6) : t.toDataURL("image/png")
        }
        if (void 0 !== e.textures[this.uuid]) return e.textures[this.uuid];
        var n = {
            metadata: {
                version: 4.4,
                type: "Texture",
                generator: "Texture.toJSON"
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [this.repeat.x, this.repeat.y],
            offset: [this.offset.x, this.offset.y],
            wrap: [this.wrapS, this.wrapT],
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy
        };
        if (void 0 !== this.image) {
            var i = this.image;
            void 0 === i.uuid && (i.uuid = THREE.Math.generateUUID()), void 0 === e.images[i.uuid] && (e.images[i.uuid] = {
                uuid: i.uuid,
                url: t(i)
            }), n.image = i.uuid
        }
        return e.textures[this.uuid] = n, n
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    },
    transformUv: function(e) {
        if (this.mapping === THREE.UVMapping) {
            if (e.multiply(this.repeat), e.add(this.offset), e.x < 0 || e.x > 1) switch (this.wrapS) {
                case THREE.RepeatWrapping:
                    e.x = e.x - Math.floor(e.x);
                    break;
                case THREE.ClampToEdgeWrapping:
                    e.x = e.x < 0 ? 0 : 1;
                    break;
                case THREE.MirroredRepeatWrapping:
                    1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x)
            }
            if (e.y < 0 || e.y > 1) switch (this.wrapT) {
                case THREE.RepeatWrapping:
                    e.y = e.y - Math.floor(e.y);
                    break;
                case THREE.ClampToEdgeWrapping:
                    e.y = e.y < 0 ? 0 : 1;
                    break;
                case THREE.MirroredRepeatWrapping:
                    1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y)
            }
            this.flipY && (e.y = 1 - e.y)
        }
    }
}, THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype), THREE.TextureIdCount = 0;
THREE.CanvasTexture = function(e, t, n, i, r, o, a, s, l) {
    THREE.Texture.call(this, e, t, n, i, r, o, a, s, l), this.needsUpdate = !0
};
THREE.CanvasTexture.prototype = Object.create(THREE.Texture.prototype), THREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture, THREE.CubeTexture = function(e, t, n, i, r, o, a, s, l) {
        t = void 0 !== t ? t : THREE.CubeReflectionMapping, THREE.Texture.call(this, e, t, n, i, r, o, a, s, l), this.images = e, this.flipY = !1
    }, THREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype), THREE.CubeTexture.prototype.constructor = THREE.CubeTexture, THREE.CubeTexture.prototype.copy = function(e) {
        return THREE.Texture.prototype.copy.call(this, e), this.images = e.images, this
    }, THREE.CompressedTexture = function(e, t, n, i, r, o, a, s, l, c, u) {
        THREE.Texture.call(this, null, o, a, s, l, c, i, r, u), this.image = {
            width: t,
            height: n
        }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1
    }, THREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype), THREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture, THREE.DataTexture = function(e, t, n, i, r, o, a, s, l, c, u) {
        THREE.Texture.call(this, null, o, a, s, l, c, i, r, u), this.image = {
            data: e,
            width: t,
            height: n
        }, this.magFilter = void 0 !== l ? l : THREE.NearestFilter, this.minFilter = void 0 !== c ? c : THREE.NearestFilter, this.flipY = !1, this.generateMipmaps = !1
    }, THREE.DataTexture.prototype = Object.create(THREE.Texture.prototype), THREE.DataTexture.prototype.constructor = THREE.DataTexture, THREE.VideoTexture = function(e, t, n, i, r, o, a, s, l) {
        function c() {
            requestAnimationFrame(c), e.readyState === e.HAVE_ENOUGH_DATA && (u.needsUpdate = !0)
        }
        THREE.Texture.call(this, e, t, n, i, r, o, a, s, l), this.generateMipmaps = !1;
        var u = this;
        c()
    }, THREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype), THREE.VideoTexture.prototype.constructor = THREE.VideoTexture, THREE.Group = function() {
        THREE.Object3D.call(this), this.type = "Group"
    }, THREE.Group.prototype = Object.create(THREE.Object3D.prototype), THREE.Group.prototype.constructor = THREE.Group, THREE.Points = function(e, t) {
        THREE.Object3D.call(this), this.type = "Points", this.geometry = void 0 !== e ? e : new THREE.Geometry, this.material = void 0 !== t ? t : new THREE.PointsMaterial({
            color: 16777215 * Math.random()
        })
    }, THREE.Points.prototype = Object.create(THREE.Object3D.prototype), THREE.Points.prototype.constructor = THREE.Points, THREE.Points.prototype.raycast = function() {
        var e = new THREE.Matrix4,
            t = new THREE.Ray;
        return function n(i, r) {
            function o(e, n) {
                var o = t.distanceSqToPoint(e);
                if (o < u) {
                    var s = t.closestPointToPoint(e);
                    s.applyMatrix4(a.matrixWorld);
                    var l = i.ray.origin.distanceTo(s);
                    if (l < i.near || l > i.far) return;
                    r.push({
                        distance: l,
                        distanceToRay: Math.sqrt(o),
                        point: s.clone(),
                        index: n,
                        face: null,
                        object: a
                    })
                }
            }
            var a = this,
                s = a.geometry,
                l = i.params.Points.threshold;
            if (e.getInverse(this.matrixWorld), t.copy(i.ray).applyMatrix4(e), null === s.boundingBox || t.isIntersectionBox(s.boundingBox) !== !1) {
                var c = l / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                    u = c * c,
                    h = new THREE.Vector3;
                if (s instanceof THREE.BufferGeometry) {
                    var d = s.index,
                        p = s.attributes,
                        f = p.position.array;
                    if (null !== d)
                        for (var m = d.array, E = 0, g = m.length; E < g; E++) {
                            var v = m[E];
                            h.fromArray(f, 3 * v), o(h, v)
                        } else
                            for (var E = 0, y = f.length / 3; E < y; E++) h.fromArray(f, 3 * E), o(h, E)
                } else
                    for (var T = s.vertices, E = 0, y = T.length; E < y; E++) o(T[E], E)
            }
        }
    }(), THREE.Points.prototype.clone = function() {
        return new this.constructor(this.geometry, this.material).copy(this)
    }, THREE.PointCloud = function(e, t) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new THREE.Points(e, t)
    }, THREE.ParticleSystem = function(e, t) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new THREE.Points(e, t)
    }, THREE.Line = function(e, t, n) {
        return 1 === n ? (console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."), new THREE.LineSegments(e, t)) : (THREE.Object3D.call(this), this.type = "Line", this.geometry = void 0 !== e ? e : new THREE.Geometry, void(this.material = void 0 !== t ? t : new THREE.LineBasicMaterial({
            color: 16777215 * Math.random()
        })))
    }, THREE.Line.prototype = Object.create(THREE.Object3D.prototype), THREE.Line.prototype.constructor = THREE.Line, THREE.Line.prototype.raycast = function() {
        var e = new THREE.Matrix4,
            t = new THREE.Ray,
            n = new THREE.Sphere;
        return function i(r, o) {
            var a = r.linePrecision,
                s = a * a,
                l = this.geometry;
            if (null === l.boundingSphere && l.computeBoundingSphere(), n.copy(l.boundingSphere), n.applyMatrix4(this.matrixWorld), r.ray.isIntersectionSphere(n) !== !1) {
                e.getInverse(this.matrixWorld), t.copy(r.ray).applyMatrix4(e);
                var c = new THREE.Vector3,
                    u = new THREE.Vector3,
                    h = new THREE.Vector3,
                    d = new THREE.Vector3,
                    p = this instanceof THREE.LineSegments ? 2 : 1;
                if (l instanceof THREE.BufferGeometry) {
                    var f = l.index,
                        m = l.attributes;
                    if (null !== f)
                        for (var E = f.array, g = m.position.array, v = 0, y = E.length - 1; v < y; v += p) {
                            var T = E[v],
                                x = E[v + 1];
                            c.fromArray(g, 3 * T), u.fromArray(g, 3 * x);
                            var R = t.distanceSqToSegment(c, u, d, h);
                            if (!(R > s)) {
                                d.applyMatrix4(this.matrixWorld);
                                var w = r.ray.origin.distanceTo(d);
                                w < r.near || w > r.far || o.push({
                                    distance: w,
                                    point: h.clone().applyMatrix4(this.matrixWorld),
                                    index: v,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            }
                        } else
                            for (var g = m.position.array, v = 0, y = g.length / 3 - 1; v < y; v += p) {
                                c.fromArray(g, 3 * v), u.fromArray(g, 3 * v + 3);
                                var R = t.distanceSqToSegment(c, u, d, h);
                                if (!(R > s)) {
                                    d.applyMatrix4(this.matrixWorld);
                                    var w = r.ray.origin.distanceTo(d);
                                    w < r.near || w > r.far || o.push({
                                        distance: w,
                                        point: h.clone().applyMatrix4(this.matrixWorld),
                                        index: v,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                                }
                            }
                } else if (l instanceof THREE.Geometry)
                    for (var b = l.vertices, H = b.length, v = 0; v < H - 1; v += p) {
                        var R = t.distanceSqToSegment(b[v], b[v + 1], d, h);
                        if (!(R > s)) {
                            d.applyMatrix4(this.matrixWorld);
                            var w = r.ray.origin.distanceTo(d);
                            w < r.near || w > r.far || o.push({
                                distance: w,
                                point: h.clone().applyMatrix4(this.matrixWorld),
                                index: v,
                                face: null,
                                faceIndex: null,
                                object: this
                            })
                        }
                    }
            }
        }
    }(), THREE.Line.prototype.clone = function() {
        return new this.constructor(this.geometry, this.material).copy(this)
    }, THREE.LineStrip = 0, THREE.LinePieces = 1, THREE.LineSegments = function(e, t) {
        THREE.Line.call(this, e, t), this.type = "LineSegments"
    }, THREE.LineSegments.prototype = Object.create(THREE.Line.prototype), THREE.LineSegments.prototype.constructor = THREE.LineSegments, THREE.Mesh = function(e, t) {
        THREE.Object3D.call(this), this.type = "Mesh", this.geometry = void 0 !== e ? e : new THREE.Geometry, this.material = void 0 !== t ? t : new THREE.MeshBasicMaterial({
            color: 16777215 * Math.random()
        }), this.updateMorphTargets()
    }, THREE.Mesh.prototype = Object.create(THREE.Object3D.prototype), THREE.Mesh.prototype.constructor = THREE.Mesh, THREE.Mesh.prototype.updateMorphTargets = function() {
        if (void 0 !== this.geometry.morphTargets && this.geometry.morphTargets.length > 0) {
            this.morphTargetBase = -1, this.morphTargetInfluences = [], this.morphTargetDictionary = {};
            for (var e = 0, t = this.geometry.morphTargets.length; e < t; e++) this.morphTargetInfluences.push(0), this.morphTargetDictionary[this.geometry.morphTargets[e].name] = e
        }
    }, THREE.Mesh.prototype.getMorphTargetIndexByName = function(e) {
        return void 0 !== this.morphTargetDictionary[e] ? this.morphTargetDictionary[e] : (console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target " + e + " does not exist. Returning 0."), 0)
    }, THREE.Mesh.prototype.raycast = function() {
        function e(e, t, n, i, r, o, a) {
            return THREE.Triangle.barycoordFromPoint(e, t, n, i, m), r.multiplyScalar(m.x), o.multiplyScalar(m.y), a.multiplyScalar(m.z), r.add(o).add(a), r.clone()
        }

        function t(e, t, n, i, r, o, a) {
            var s, l = e.material;
            if (s = l.side === THREE.BackSide ? n.intersectTriangle(o, r, i, !0, a) : n.intersectTriangle(i, r, o, l.side !== THREE.DoubleSide, a), null === s) return null;
            g.copy(a), g.applyMatrix4(e.matrixWorld);
            var c = t.ray.origin.distanceTo(g);
            return c < t.near || c > t.far ? null : {
                distance: c,
                point: g.clone(),
                object: e
            }
        }

        function n(n, i, r, o, c, u, h, m) {
            a.fromArray(o, 3 * u), s.fromArray(o, 3 * h), l.fromArray(o, 3 * m);
            var g = t(n, i, r, a, s, l, E);
            return g && (c && (d.fromArray(c, 2 * u), p.fromArray(c, 2 * h), f.fromArray(c, 2 * m), g.uv = e(E, a, s, l, d, p, f)), g.face = new THREE.Face3(u, h, m, THREE.Triangle.normal(a, s, l)), g.faceIndex = u), g
        }
        var i = new THREE.Matrix4,
            r = new THREE.Ray,
            o = new THREE.Sphere,
            a = new THREE.Vector3,
            s = new THREE.Vector3,
            l = new THREE.Vector3,
            c = new THREE.Vector3,
            u = new THREE.Vector3,
            h = new THREE.Vector3,
            d = new THREE.Vector2,
            p = new THREE.Vector2,
            f = new THREE.Vector2,
            m = new THREE.Vector3,
            E = new THREE.Vector3,
            g = new THREE.Vector3;
        return function m(g, v) {
            var y = this.geometry,
                T = this.material;
            if (void 0 !== T) {
                null === y.boundingSphere && y.computeBoundingSphere();
                var x = this.matrixWorld;
                if (o.copy(y.boundingSphere), o.applyMatrix4(x), g.ray.isIntersectionSphere(o) !== !1 && (i.getInverse(x), r.copy(g.ray).applyMatrix4(i), null === y.boundingBox || r.isIntersectionBox(y.boundingBox) !== !1)) {
                    var R, w;
                    if (y instanceof THREE.BufferGeometry) {
                        var b, H, S, _ = y.index,
                            M = y.attributes,
                            C = M.position.array;
                        if (void 0 !== M.uv && (R = M.uv.array), null !== _)
                            for (var A = _.array, P = 0, k = A.length; P < k; P += 3) b = A[P], H = A[P + 1], S = A[P + 2], w = n(this, g, r, C, R, b, H, S), w && (w.faceIndex = Math.floor(P / 3), v.push(w));
                        else
                            for (var P = 0, k = C.length; P < k; P += 9) b = P / 3, H = b + 1, S = b + 2, w = n(this, g, r, C, R, b, H, S), w && (w.index = b, v.push(w))
                    } else if (y instanceof THREE.Geometry) {
                        var L, D, O, F = T instanceof THREE.MeshFaceMaterial,
                            j = F === !0 ? T.materials : null,
                            V = y.vertices,
                            I = y.faces,
                            N = y.faceVertexUvs[0];
                        N.length > 0 && (R = N);
                        for (var B = 0, z = I.length; B < z; B++) {
                            var U = I[B],
                                G = F === !0 ? j[U.materialIndex] : T;
                            if (void 0 !== G) {
                                if (L = V[U.a], D = V[U.b], O = V[U.c], G.morphTargets === !0) {
                                    var W = y.morphTargets,
                                        q = this.morphTargetInfluences;
                                    a.set(0, 0, 0), s.set(0, 0, 0), l.set(0, 0, 0);
                                    for (var X = 0, Y = W.length; X < Y; X++) {
                                        var Z = q[X];
                                        if (0 !== Z) {
                                            var K = W[X].vertices;
                                            a.addScaledVector(c.subVectors(K[U.a], L), Z), s.addScaledVector(u.subVectors(K[U.b], D), Z), l.addScaledVector(h.subVectors(K[U.c], O), Z)
                                        }
                                    }
                                    a.add(L), s.add(D), l.add(O), L = a, D = s, O = l
                                }
                                if (w = t(this, g, r, L, D, O, E)) {
                                    if (R) {
                                        var Q = R[B];
                                        d.copy(Q[0]), p.copy(Q[1]), f.copy(Q[2]), w.uv = e(E, L, D, O, d, p, f)
                                    }
                                    w.face = U, w.faceIndex = B, v.push(w)
                                }
                            }
                        }
                    }
                }
            }
        }
    }(), THREE.Mesh.prototype.clone = function() {
        return new this.constructor(this.geometry, this.material).copy(this)
    }, THREE.Bone = function(e) {
        THREE.Object3D.call(this), this.type = "Bone", this.skin = e
    }, THREE.Bone.prototype = Object.create(THREE.Object3D.prototype), THREE.Bone.prototype.constructor = THREE.Bone, THREE.Bone.prototype.copy = function(e) {
        return THREE.Object3D.prototype.copy.call(this, e), this.skin = e.skin, this
    }, THREE.Skeleton = function(e, t, n) {
        if (this.useVertexTexture = void 0 === n || n, this.identityMatrix = new THREE.Matrix4, e = e || [], this.bones = e.slice(0), this.useVertexTexture) {
            var i = Math.sqrt(4 * this.bones.length);
            i = THREE.Math.nextPowerOfTwo(Math.ceil(i)), i = Math.max(i, 4), this.boneTextureWidth = i, this.boneTextureHeight = i, this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4), this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType)
        } else this.boneMatrices = new Float32Array(16 * this.bones.length);
        if (void 0 === t) this.calculateInverses();
        else if (this.bones.length === t.length) this.boneInverses = t.slice(0);
        else {
            console.warn("THREE.Skeleton bonInverses is the wrong length."), this.boneInverses = [];
            for (var r = 0, o = this.bones.length; r < o; r++) this.boneInverses.push(new THREE.Matrix4)
        }
    }, THREE.Skeleton.prototype.calculateInverses = function() {
        this.boneInverses = [];
        for (var e = 0, t = this.bones.length; e < t; e++) {
            var n = new THREE.Matrix4;
            this.bones[e] && n.getInverse(this.bones[e].matrixWorld), this.boneInverses.push(n)
        }
    }, THREE.Skeleton.prototype.pose = function() {
        for (var e, t = 0, n = this.bones.length; t < n; t++) e = this.bones[t], e && e.matrixWorld.getInverse(this.boneInverses[t]);
        for (var t = 0, n = this.bones.length; t < n; t++) e = this.bones[t], e && (e.parent ? (e.matrix.getInverse(e.parent.matrixWorld), e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld), e.matrix.decompose(e.position, e.quaternion, e.scale))
    }, THREE.Skeleton.prototype.update = function() {
        var e = new THREE.Matrix4;
        return function t() {
            for (var n = 0, i = this.bones.length; n < i; n++) {
                var r = this.bones[n] ? this.bones[n].matrixWorld : this.identityMatrix;
                e.multiplyMatrices(r, this.boneInverses[n]), e.flattenToArrayOffset(this.boneMatrices, 16 * n)
            }
            this.useVertexTexture && (this.boneTexture.needsUpdate = !0)
        }
    }(), THREE.Skeleton.prototype.clone = function() {
        return new THREE.Skeleton(this.bones, this.boneInverses, this.useVertexTexture)
    }, THREE.SkinnedMesh = function(e, t, n) {
        THREE.Mesh.call(this, e, t), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new THREE.Matrix4, this.bindMatrixInverse = new THREE.Matrix4;
        var i = [];
        if (this.geometry && void 0 !== this.geometry.bones) {
            for (var r, o, a = 0, s = this.geometry.bones.length; a < s; ++a) o = this.geometry.bones[a], r = new THREE.Bone(this), i.push(r), r.name = o.name, r.position.fromArray(o.pos), r.quaternion.fromArray(o.rotq), void 0 !== o.scl && r.scale.fromArray(o.scl);
            for (var a = 0, s = this.geometry.bones.length; a < s; ++a) o = this.geometry.bones[a], o.parent !== -1 && null !== o.parent ? i[o.parent].add(i[a]) : this.add(i[a])
        }
        this.normalizeSkinWeights(), this.updateMatrixWorld(!0), this.bind(new THREE.Skeleton(i, void 0, n), this.matrixWorld)
    }, THREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype), THREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh, THREE.SkinnedMesh.prototype.bind = function(e, t) {
        this.skeleton = e, void 0 === t && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.getInverse(t)
    }, THREE.SkinnedMesh.prototype.pose = function() {
        this.skeleton.pose()
    }, THREE.SkinnedMesh.prototype.normalizeSkinWeights = function() {
        if (this.geometry instanceof THREE.Geometry)
            for (var e = 0; e < this.geometry.skinIndices.length; e++) {
                var t = this.geometry.skinWeights[e],
                    n = 1 / t.lengthManhattan();
                n !== 1 / 0 ? t.multiplyScalar(n) : t.set(1)
            }
    }, THREE.SkinnedMesh.prototype.updateMatrixWorld = function(e) {
        THREE.Mesh.prototype.updateMatrixWorld.call(this, !0), "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh unrecognized bindMode: " + this.bindMode)
    }, THREE.SkinnedMesh.prototype.clone = function() {
        return new this.constructor(this.geometry, this.material, this.useVertexTexture).copy(this)
    }, THREE.LOD = function() {
        THREE.Object3D.call(this), this.type = "LOD", Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            },
            objects: {
                get: function() {
                    return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels
                }
            }
        })
    }, THREE.LOD.prototype = Object.create(THREE.Object3D.prototype), THREE.LOD.prototype.constructor = THREE.LOD, THREE.LOD.prototype.addLevel = function(e, t) {
        void 0 === t && (t = 0), t = Math.abs(t);
        for (var n = this.levels, i = 0; i < n.length && !(t < n[i].distance); i++);
        n.splice(i, 0, {
            distance: t,
            object: e
        }), this.add(e)
    }, THREE.LOD.prototype.getObjectForDistance = function(e) {
        for (var t = this.levels, n = 1, i = t.length; n < i && !(e < t[n].distance); n++);
        return t[n - 1].object
    }, THREE.LOD.prototype.raycast = function() {
        var e = new THREE.Vector3;
        return function t(n, i) {
            e.setFromMatrixPosition(this.matrixWorld);
            var r = n.ray.origin.distanceTo(e);
            this.getObjectForDistance(r).raycast(n, i)
        }
    }(), THREE.LOD.prototype.update = function() {
        var e = new THREE.Vector3,
            t = new THREE.Vector3;
        return function n(i) {
            var r = this.levels;
            if (r.length > 1) {
                e.setFromMatrixPosition(i.matrixWorld), t.setFromMatrixPosition(this.matrixWorld);
                var o = e.distanceTo(t);
                r[0].object.visible = !0;
                for (var a = 1, s = r.length; a < s && o >= r[a].distance; a++) r[a - 1].object.visible = !1, r[a].object.visible = !0;
                for (; a < s; a++) r[a].object.visible = !1
            }
        }
    }(), THREE.LOD.prototype.copy = function(e) {
        THREE.Object3D.prototype.copy.call(this, e, !1);
        for (var t = e.levels, n = 0, i = t.length; n < i; n++) {
            var r = t[n];
            this.addLevel(r.object.clone(), r.distance)
        }
        return this
    }, THREE.LOD.prototype.toJSON = function(e) {
        var t = THREE.Object3D.prototype.toJSON.call(this, e);
        t.object.levels = [];
        for (var n = this.levels, i = 0, r = n.length; i < r; i++) {
            var o = n[i];
            t.object.levels.push({
                object: o.object.uuid,
                distance: o.distance
            })
        }
        return t
    }, THREE.Sprite = function() {
        var e = new Uint16Array([0, 1, 2, 0, 2, 3]),
            t = new Float32Array([-.5, -.5, 0, .5, -.5, 0, .5, .5, 0, -.5, .5, 0]),
            n = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),
            i = new THREE.BufferGeometry;
        return i.setIndex(new THREE.BufferAttribute(e, 1)), i.addAttribute("position", new THREE.BufferAttribute(t, 3)), i.addAttribute("uv", new THREE.BufferAttribute(n, 2)),
            function e(t) {
                THREE.Object3D.call(this), this.type = "Sprite", this.geometry = i, this.material = void 0 !== t ? t : new THREE.SpriteMaterial
            }
    }(), THREE.Sprite.prototype = Object.create(THREE.Object3D.prototype), THREE.Sprite.prototype.constructor = THREE.Sprite, THREE.Sprite.prototype.raycast = function() {
        var e = new THREE.Vector3;
        return function t(n, i) {
            e.setFromMatrixPosition(this.matrixWorld);
            var r = n.ray.distanceSqToPoint(e),
                o = this.scale.x * this.scale.y;
            r > o || i.push({
                distance: Math.sqrt(r),
                point: this.position,
                face: null,
                object: this
            })
        }
    }(), THREE.Sprite.prototype.clone = function() {
        return new this.constructor(this.material).copy(this)
    }, THREE.Particle = THREE.Sprite, THREE.LensFlare = function(e, t, n, i, r) {
        THREE.Object3D.call(this), this.lensFlares = [], this.positionScreen = new THREE.Vector3, this.customUpdateCallback = void 0, void 0 !== e && this.add(e, t, n, i, r)
    }, THREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype), THREE.LensFlare.prototype.constructor = THREE.LensFlare, THREE.LensFlare.prototype.add = function(e, t, n, i, r, o) {
        void 0 === t && (t = -1), void 0 === n && (n = 0), void 0 === o && (o = 1), void 0 === r && (r = new THREE.Color(16777215)), void 0 === i && (i = THREE.NormalBlending), n = Math.min(n, Math.max(0, n)), this.lensFlares.push({
            texture: e,
            size: t,
            distance: n,
            x: 0,
            y: 0,
            z: 0,
            scale: 1,
            rotation: 0,
            opacity: o,
            color: r,
            blending: i
        })
    }, THREE.LensFlare.prototype.updateLensFlares = function() {
        var e, t = this.lensFlares.length,
            n, i = 2 * -this.positionScreen.x,
            r = 2 * -this.positionScreen.y;
        for (e = 0; e < t; e++) n = this.lensFlares[e], n.x = this.positionScreen.x + i * n.distance, n.y = this.positionScreen.y + r * n.distance, n.wantedRotation = n.x * Math.PI * .25, n.rotation += .25 * (n.wantedRotation - n.rotation)
    }, THREE.LensFlare.prototype.copy = function(e) {
        THREE.Object3D.prototype.copy.call(this, e), this.positionScreen.copy(e.positionScreen), this.customUpdateCallback = e.customUpdateCallback;
        for (var t = 0, n = e.lensFlares.length; t < n; t++) this.lensFlares.push(e.lensFlares[t]);
        return this
    }, THREE.Scene = function() {
        THREE.Object3D.call(this), this.type = "Scene", this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0
    }, THREE.Scene.prototype = Object.create(THREE.Object3D.prototype), THREE.Scene.prototype.constructor = THREE.Scene, THREE.Scene.prototype.copy = function(e) {
        return THREE.Object3D.prototype.copy.call(this, e), null !== e.fog && (this.fog = e.fog.clone()), null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this
    }, THREE.Fog = function(e, t, n) {
        this.name = "", this.color = new THREE.Color(e), this.near = void 0 !== t ? t : 1, this.far = void 0 !== n ? n : 1e3
    }, THREE.Fog.prototype.clone = function() {
        return new THREE.Fog(this.color.getHex(), this.near, this.far)
    }, THREE.FogExp2 = function(e, t) {
        this.name = "", this.color = new THREE.Color(e), this.density = void 0 !== t ? t : 25e-5
    }, THREE.FogExp2.prototype.clone = function() {
        return new THREE.FogExp2(this.color.getHex(), this.density)
    }, THREE.ShaderChunk = {}, THREE.ShaderChunk.alphamap_fragment = "#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n", THREE.ShaderChunk.alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n", THREE.ShaderChunk.alphatest_fragment = "#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n", THREE.ShaderChunk.aomap_fragment = "#ifdef USE_AOMAP\n\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n#endif\n", THREE.ShaderChunk.aomap_pars_fragment = "#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif", THREE.ShaderChunk.begin_vertex = "\nvec3 transformed = vec3( position );\n", THREE.ShaderChunk.beginnormal_vertex = "\nvec3 objectNormal = vec3( normal );\n", THREE.ShaderChunk.bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n", THREE.ShaderChunk.color_fragment = "#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif", THREE.ShaderChunk.color_pars_fragment = "#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n", THREE.ShaderChunk.color_pars_vertex = "#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif", THREE.ShaderChunk.color_vertex = "#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif", THREE.ShaderChunk.common = "#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n\n\tif ( decayExponent > 0.0 ) {\n\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n}\n\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\n\n\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\n\n\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\n\n\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\n\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * G * D;\n\n}\n\nvec3 inputToLinear( in vec3 a ) {\n\n\t#ifdef GAMMA_INPUT\n\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n\nvec3 linearToOutput( in vec3 a ) {\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n",
    THREE.ShaderChunk.defaultnormal_vertex = "#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n", THREE.ShaderChunk.displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n", THREE.ShaderChunk.displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n", THREE.ShaderChunk.emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\n\n\ttotalEmissiveLight *= emissiveColor.rgb;\n\n#endif\n", THREE.ShaderChunk.emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n", THREE.ShaderChunk.envmap_fragment = "#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\tenvColor.xyz = inputToLinear( envColor.xyz );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n", THREE.ShaderChunk.envmap_pars_fragment = "#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n", THREE.ShaderChunk.envmap_pars_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n", THREE.ShaderChunk.envmap_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n", THREE.ShaderChunk.fog_fragment = "#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif", THREE.ShaderChunk.fog_pars_fragment = "#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif", THREE.ShaderChunk.hemilight_fragment = "#if MAX_HEMI_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\ttotalAmbientLight += lightColor;\n\n\t}\n\n#endif\n\n", THREE.ShaderChunk.lightmap_fragment = "#ifdef USE_LIGHTMAP\n\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n#endif\n", THREE.ShaderChunk.lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif", THREE.ShaderChunk.lights_lambert_pars_vertex = "#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n", THREE.ShaderChunk.lights_lambert_vertex = "vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\nvec3 normal = normalize( transformedNormal );\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = pointLightColor[ i ];\n\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = spotLightColor[ i ];\n\n\t\tvec3 lightPosition = spotLightPosition[ i ];\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\t\tattenuation *= spotEffect;\n\n\n\t\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = directionalLightColor[ i ];\n\n\t\tvec3 lightDir = directionalLightDirection[ i ];\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tvLightFront += lightColor * saturate( dotProduct );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n", THREE.ShaderChunk.lights_phong_fragment = "vec3 viewDir = normalize( vViewPosition );\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = pointLightColor[ i ];\n\n\t\tvec3 lightPosition = pointLightPosition[ i ];\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = spotLightColor[ i ];\n\n\t\tvec3 lightPosition = spotLightPosition[ i ];\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\t\tattenuation *= spotEffect;\n\n\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = directionalLightColor[ i ];\n\n\t\tvec3 lightDir = directionalLightDirection[ i ];\n\n\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\n\n\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\n\n\t}\n\n#endif\n", THREE.ShaderChunk.lights_phong_pars_fragment = "uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n", THREE.ShaderChunk.lights_phong_pars_vertex = "#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\n#endif\n", THREE.ShaderChunk.lights_phong_vertex = "#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif\n", THREE.ShaderChunk.linear_to_gamma_fragment = "\n\toutgoingLight = linearToOutput( outgoingLight );\n", THREE.ShaderChunk.logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif", THREE.ShaderChunk.logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif\n", THREE.ShaderChunk.logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif", THREE.ShaderChunk.logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif", THREE.ShaderChunk.map_fragment = "#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\n\n\tdiffuseColor *= texelColor;\n\n#endif\n", THREE.ShaderChunk.map_pars_fragment = "#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif", THREE.ShaderChunk.map_particle_fragment = "#ifdef USE_MAP\n\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n", THREE.ShaderChunk.map_particle_pars_fragment = "#ifdef USE_MAP\n\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n\n#endif\n", THREE.ShaderChunk.morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n", THREE.ShaderChunk.morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif", THREE.ShaderChunk.morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n", THREE.ShaderChunk.normal_phong_fragment = "#ifndef FLAT_SHADED\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n\t#endif\n\n#else\n\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n", THREE.ShaderChunk.normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n", THREE.ShaderChunk.project_vertex = "#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n", THREE.ShaderChunk.shadowmap_fragment = "#ifdef USE_SHADOWMAP\n\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tfloat texelSizeY =  1.0 / shadowMapSize[ i ].y;\n\n\t\tfloat shadow = 0.0;\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n\t\tbool isPointLight = shadowDarkness[ i ] < 0.0;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tfloat realShadowDarkness = abs( shadowDarkness[ i ] );\n\n\t\t\tvec3 lightToPosition = vShadowCoord[ i ].xyz;\n\n\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tfloat dp = length( lightToPosition );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\n\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tconst float Dr = 1.25;\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tconst float Dr = 2.25;\n\t#endif\n\n\t\t\tfloat os = Dr *  2.0 * texelSizeY;\n\n\t\t\tconst vec3 Gsd = vec3( - 1, 0, 1 );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tshadow *= realShadowDarkness * ( 1.0 / 21.0 );\n\n\t#else \n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tfloat dp = length( lightToPosition );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tshadow *= realShadowDarkness;\n\n\t#endif\n\n\t\t} else {\n\n#endif \n\t\t\tfloat texelSizeX =  1.0 / shadowMapSize[ i ].x;\n\n\t\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\n\t\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t\tbool frustumTest = all( frustumTestVec );\n\n\t\t\tif ( frustumTest ) {\n\n\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\n\t\t\t\t/*\n\t\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\t\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\t\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\t\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\t\tshadow += 1.0;\n\t\t\t\t\t}\n\t\t\t\t\tshadow /= 9.0;\n\t\t\t\t*/\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tconst float ShadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = texelSizeX;\n\t\t\t\tfloat yPixelOffset = texelSizeY;\n\n\t\t\t\tfloat dx0 = - 1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = - 1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfloat fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tshadow *= shadowDarkness[ i ];\n\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tfloat xPixelOffset = texelSizeX;\n\t\t\t\tfloat yPixelOffset = texelSizeY;\n\n\t\t\t\tfloat dx0 = - 1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = - 1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[ 0 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[ 0 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[ 0 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[ 1 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[ 1 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[ 1 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[ 0 ] = vec3( lessThan( depthKernel[ 0 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 0 ] *= vec3( 0.25 );\n\n\t\t\t\tshadowKernel[ 1 ] = vec3( lessThan( depthKernel[ 1 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 1 ] *= vec3( 0.25 );\n\n\t\t\t\tshadowKernel[ 2 ] = vec3( lessThan( depthKernel[ 2 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 2 ] *= vec3( 0.25 );\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[ i ].xy );\n\n\t\t\t\tshadowKernel[ 0 ] = mix( shadowKernel[ 1 ], shadowKernel[ 0 ], fractionalCoord.x );\n\t\t\t\tshadowKernel[ 1 ] = mix( shadowKernel[ 2 ], shadowKernel[ 1 ], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[ 0 ][ 1 ], shadowKernel[ 0 ][ 0 ], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[ 0 ][ 2 ], shadowKernel[ 0 ][ 1 ], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[ 1 ][ 1 ], shadowKernel[ 1 ][ 0 ], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[ 1 ][ 2 ], shadowKernel[ 1 ][ 1 ], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) ) * shadowDarkness[ i ];\n\n\t#else \n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\tshadow = shadowDarkness[ i ];\n\n\t#endif\n\n\t\t\t}\n\n#ifdef SHADOWMAP_DEBUG\n\n\t\t\tif ( inFrustum ) {\n\n\t\t\t\tif ( i == 0 ) {\n\n\t\t\t\t\toutgoingLight *= vec3( 1.0, 0.5, 0.0 );\n\n\t\t\t\t} else if ( i == 1 ) {\n\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 1.0, 0.8 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 0.5, 1.0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n#endif\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n\t\t}\n\n#endif\n\n\t\tshadowMask = shadowMask * vec3( 1.0 - shadow );\n\n\t}\n\n#endif\n", THREE.ShaderChunk.shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n\t#if defined(POINT_LIGHT_SHADOWS)\n\n\n\t\tvoid adjustShadowValue1K( const float testDepth, const vec4 textureData, const float bias, inout float shadowValue ) {\n\n\t\t\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\t\tif ( testDepth >= dot( textureData, bitSh ) * 1000.0 + bias )\n\t\t\t\tshadowValue += 1.0;\n\n\t\t}\n\n\n\t\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\n\t\t\tvec3 absV = abs( v );\n\n\n\t\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\t\tabsV *= scaleToCube;\n\n\n\t\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\n\n\t\t\tvec2 planar = v.xy;\n\n\t\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\t\tif ( absV.z >= almostOne ) {\n\n\t\t\t\tif ( v.z > 0.0 )\n\t\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\t\tfloat signX = sign( v.x );\n\t\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\t\tfloat signY = sign( v.y );\n\t\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t\t}\n\n\n\t\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t\t}\n\n\t#endif\n\n#endif\n", THREE.ShaderChunk.shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n#endif", THREE.ShaderChunk.shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif", THREE.ShaderChunk.skinbase_vertex = "#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif", THREE.ShaderChunk.skinning_pars_vertex = "#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n", THREE.ShaderChunk.skinning_vertex = "#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n", THREE.ShaderChunk.skinnormal_vertex = "#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n",
    THREE.ShaderChunk.specularmap_fragment = "float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif", THREE.ShaderChunk.specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif", THREE.ShaderChunk.uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif", THREE.ShaderChunk.uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n#endif", THREE.ShaderChunk.uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = uv2;\n\n#endif", THREE.ShaderChunk.uv_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvarying vec2 vUv;\n\n#endif", THREE.ShaderChunk.uv_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n", THREE.ShaderChunk.uv_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif", THREE.ShaderChunk.worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n\t#endif\n\n#endif\n", THREE.UniformsUtils = {
        merge: function(e) {
            for (var t = {}, n = 0; n < e.length; n++) {
                var i = this.clone(e[n]);
                for (var r in i) t[r] = i[r]
            }
            return t
        },
        clone: function(e) {
            var t = {};
            for (var n in e) {
                t[n] = {};
                for (var i in e[n]) {
                    var r = e[n][i];
                    r instanceof THREE.Color || r instanceof THREE.Vector2 || r instanceof THREE.Vector3 || r instanceof THREE.Vector4 || r instanceof THREE.Matrix3 || r instanceof THREE.Matrix4 || r instanceof THREE.Texture ? t[n][i] = r.clone() : Array.isArray(r) ? t[n][i] = r.slice() : t[n][i] = r
                }
            }
            return t
        }
    }, THREE.UniformsLib = {
        common: {
            diffuse: {
                type: "c",
                value: new THREE.Color(15658734)
            },
            opacity: {
                type: "f",
                value: 1
            },
            map: {
                type: "t",
                value: null
            },
            offsetRepeat: {
                type: "v4",
                value: new THREE.Vector4(0, 0, 1, 1)
            },
            specularMap: {
                type: "t",
                value: null
            },
            alphaMap: {
                type: "t",
                value: null
            },
            envMap: {
                type: "t",
                value: null
            },
            flipEnvMap: {
                type: "f",
                value: -1
            },
            reflectivity: {
                type: "f",
                value: 1
            },
            refractionRatio: {
                type: "f",
                value: .98
            }
        },
        aomap: {
            aoMap: {
                type: "t",
                value: null
            },
            aoMapIntensity: {
                type: "f",
                value: 1
            }
        },
        lightmap: {
            lightMap: {
                type: "t",
                value: null
            },
            lightMapIntensity: {
                type: "f",
                value: 1
            }
        },
        emissivemap: {
            emissiveMap: {
                type: "t",
                value: null
            }
        },
        bumpmap: {
            bumpMap: {
                type: "t",
                value: null
            },
            bumpScale: {
                type: "f",
                value: 1
            }
        },
        normalmap: {
            normalMap: {
                type: "t",
                value: null
            },
            normalScale: {
                type: "v2",
                value: new THREE.Vector2(1, 1)
            }
        },
        displacementmap: {
            displacementMap: {
                type: "t",
                value: null
            },
            displacementScale: {
                type: "f",
                value: 1
            },
            displacementBias: {
                type: "f",
                value: 0
            }
        },
        fog: {
            fogDensity: {
                type: "f",
                value: 25e-5
            },
            fogNear: {
                type: "f",
                value: 1
            },
            fogFar: {
                type: "f",
                value: 2e3
            },
            fogColor: {
                type: "c",
                value: new THREE.Color(16777215)
            }
        },
        lights: {
            ambientLightColor: {
                type: "fv",
                value: []
            },
            directionalLightDirection: {
                type: "fv",
                value: []
            },
            directionalLightColor: {
                type: "fv",
                value: []
            },
            hemisphereLightDirection: {
                type: "fv",
                value: []
            },
            hemisphereLightSkyColor: {
                type: "fv",
                value: []
            },
            hemisphereLightGroundColor: {
                type: "fv",
                value: []
            },
            pointLightColor: {
                type: "fv",
                value: []
            },
            pointLightPosition: {
                type: "fv",
                value: []
            },
            pointLightDistance: {
                type: "fv1",
                value: []
            },
            pointLightDecay: {
                type: "fv1",
                value: []
            },
            spotLightColor: {
                type: "fv",
                value: []
            },
            spotLightPosition: {
                type: "fv",
                value: []
            },
            spotLightDirection: {
                type: "fv",
                value: []
            },
            spotLightDistance: {
                type: "fv1",
                value: []
            },
            spotLightAngleCos: {
                type: "fv1",
                value: []
            },
            spotLightExponent: {
                type: "fv1",
                value: []
            },
            spotLightDecay: {
                type: "fv1",
                value: []
            }
        },
        points: {
            psColor: {
                type: "c",
                value: new THREE.Color(15658734)
            },
            opacity: {
                type: "f",
                value: 1
            },
            size: {
                type: "f",
                value: 1
            },
            scale: {
                type: "f",
                value: 1
            },
            map: {
                type: "t",
                value: null
            },
            offsetRepeat: {
                type: "v4",
                value: new THREE.Vector4(0, 0, 1, 1)
            },
            fogDensity: {
                type: "f",
                value: 25e-5
            },
            fogNear: {
                type: "f",
                value: 1
            },
            fogFar: {
                type: "f",
                value: 2e3
            },
            fogColor: {
                type: "c",
                value: new THREE.Color(16777215)
            }
        },
        shadowmap: {
            shadowMap: {
                type: "tv",
                value: []
            },
            shadowMapSize: {
                type: "v2v",
                value: []
            },
            shadowBias: {
                type: "fv1",
                value: []
            },
            shadowDarkness: {
                type: "fv1",
                value: []
            },
            shadowMatrix: {
                type: "m4v",
                value: []
            }
        }
    }, THREE.ShaderLib = {
        basic: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.aomap, THREE.UniformsLib.fog, THREE.UniformsLib.shadowmap]),
            vertexShader: [THREE.ShaderChunk.common, THREE.ShaderChunk.uv_pars_vertex, THREE.ShaderChunk.uv2_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.uv_vertex, THREE.ShaderChunk.uv2_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.skinbase_vertex, "\t#ifdef USE_ENVMAP", THREE.ShaderChunk.beginnormal_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "\t#endif", THREE.ShaderChunk.begin_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.project_vertex, THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
            fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", THREE.ShaderChunk.common, THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.uv_pars_fragment, THREE.ShaderChunk.uv2_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.aomap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tvec3 outgoingLight = vec3( 0.0 );", "\tvec4 diffuseColor = vec4( diffuse, opacity );", "\tvec3 totalAmbientLight = vec3( 1.0 );", "\tvec3 shadowMask = vec3( 1.0 );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.aomap_fragment, THREE.ShaderChunk.shadowmap_fragment, "\toutgoingLight = diffuseColor.rgb * totalAmbientLight * shadowMask;", THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
        },
        lambert: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
                emissive: {
                    type: "c",
                    value: new THREE.Color(0)
                }
            }]),
            vertexShader: ["#define LAMBERT", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "\tvarying vec3 vLightBack;", "#endif", THREE.ShaderChunk.common, THREE.ShaderChunk.uv_pars_vertex, THREE.ShaderChunk.uv2_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_lambert_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.uv_vertex, THREE.ShaderChunk.uv2_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.beginnormal_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, THREE.ShaderChunk.begin_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.project_vertex, THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_lambert_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
            fragmentShader: ["uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform float opacity;", "uniform vec3 ambientLightColor;", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "\tvarying vec3 vLightBack;", "#endif", THREE.ShaderChunk.common, THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.uv_pars_fragment, THREE.ShaderChunk.uv2_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tvec3 outgoingLight = vec3( 0.0 );", "\tvec4 diffuseColor = vec4( diffuse, opacity );", "\tvec3 totalAmbientLight = ambientLightColor;", "\tvec3 shadowMask = vec3( 1.0 );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.shadowmap_fragment, "\t#ifdef DOUBLE_SIDED", "\t\tif ( gl_FrontFacing )", "\t\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;", "\t\telse", "\t\t\toutgoingLight += diffuseColor.rgb * ( vLightBack * shadowMask + totalAmbientLight ) + emissive;", "\t#else", "\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;", "\t#endif", THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
        },
        phong: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.aomap, THREE.UniformsLib.lightmap, THREE.UniformsLib.emissivemap, THREE.UniformsLib.bumpmap, THREE.UniformsLib.normalmap, THREE.UniformsLib.displacementmap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
                emissive: {
                    type: "c",
                    value: new THREE.Color(0)
                },
                specular: {
                    type: "c",
                    value: new THREE.Color(1118481)
                },
                shininess: {
                    type: "f",
                    value: 30
                }
            }]),
            vertexShader: ["#define PHONG", "varying vec3 vViewPosition;", "#ifndef FLAT_SHADED", "\tvarying vec3 vNormal;", "#endif", THREE.ShaderChunk.common, THREE.ShaderChunk.uv_pars_vertex, THREE.ShaderChunk.uv2_pars_vertex, THREE.ShaderChunk.displacementmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_phong_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.uv_vertex, THREE.ShaderChunk.uv2_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.beginnormal_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "#ifndef FLAT_SHADED", "\tvNormal = normalize( transformedNormal );", "#endif", THREE.ShaderChunk.begin_vertex, THREE.ShaderChunk.displacementmap_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.project_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "\tvViewPosition = - mvPosition.xyz;", THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_phong_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
            fragmentShader: ["#define PHONG", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform vec3 specular;", "uniform float shininess;", "uniform float opacity;", THREE.ShaderChunk.common, THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.uv_pars_fragment, THREE.ShaderChunk.uv2_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.aomap_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.emissivemap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.lights_phong_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.bumpmap_pars_fragment, THREE.ShaderChunk.normalmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tvec3 outgoingLight = vec3( 0.0 );", "\tvec4 diffuseColor = vec4( diffuse, opacity );", "\tvec3 totalAmbientLight = ambientLightColor;", "\tvec3 totalEmissiveLight = emissive;", "\tvec3 shadowMask = vec3( 1.0 );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.normal_phong_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.hemilight_fragment, THREE.ShaderChunk.aomap_fragment, THREE.ShaderChunk.emissivemap_fragment, THREE.ShaderChunk.lights_phong_fragment, THREE.ShaderChunk.shadowmap_fragment, "totalDiffuseLight *= shadowMask;", "totalSpecularLight *= shadowMask;", "#ifdef METAL", "\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;", "#else", "\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;", "#endif", THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
        },
        points: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.points, THREE.UniformsLib.shadowmap]),
            vertexShader: ["uniform float size;", "uniform float scale;", THREE.ShaderChunk.common, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "\t#ifdef USE_SIZEATTENUATION", "\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );", "\t#else", "\t\tgl_PointSize = size;", "\t#endif", "\tgl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
            fragmentShader: ["uniform vec3 psColor;", "uniform float opacity;", THREE.ShaderChunk.common, THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_particle_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tvec3 outgoingLight = vec3( 0.0 );", "\tvec4 diffuseColor = vec4( psColor, opacity );", "\tvec3 shadowMask = vec3( 1.0 );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_particle_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.shadowmap_fragment, "\toutgoingLight = diffuseColor.rgb * shadowMask;", THREE.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
        },
        dashed: {
            uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, {
                scale: {
                    type: "f",
                    value: 1
                },
                dashSize: {
                    type: "f",
                    value: 1
                },
                totalSize: {
                    type: "f",
                    value: 2
                }
            }]),
            vertexShader: ["uniform float scale;", "attribute float lineDistance;", "varying float vLineDistance;", THREE.ShaderChunk.common, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "\tvLineDistance = scale * lineDistance;", "\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "\tgl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
            fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", "uniform float dashSize;", "uniform float totalSize;", "varying float vLineDistance;", THREE.ShaderChunk.common, THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tif ( mod( vLineDistance, totalSize ) > dashSize ) {", "\t\tdiscard;", "\t}", "\tvec3 outgoingLight = vec3( 0.0 );", "\tvec4 diffuseColor = vec4( diffuse, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.color_fragment, "\toutgoingLight = diffuseColor.rgb;", THREE.ShaderChunk.fog_fragment, "\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
        },
        depth: {
            uniforms: {
                mNear: {
                    type: "f",
                    value: 1
                },
                mFar: {
                    type: "f",
                    value: 2e3
                },
                opacity: {
                    type: "f",
                    value: 1
                }
            },
            vertexShader: [THREE.ShaderChunk.common, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.begin_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.project_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
            fragmentShader: ["uniform float mNear;", "uniform float mFar;", "uniform float opacity;", THREE.ShaderChunk.common, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "\t#ifdef USE_LOGDEPTHBUF_EXT", "\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;", "\t#else", "\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;", "\t#endif", "\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );", "\tgl_FragColor = vec4( vec3( color ), opacity );", "}"].join("\n")
        },
        normal: {
            uniforms: {
                opacity: {
                    type: "f",
                    value: 1
                }
            },
            vertexShader: ["varying vec3 vNormal;", THREE.ShaderChunk.common, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "\tvNormal = normalize( normalMatrix * normal );", THREE.ShaderChunk.begin_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.project_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
            fragmentShader: ["uniform float opacity;", "varying vec3 vNormal;", THREE.ShaderChunk.common, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
        },
        cube: {
            uniforms: {
                tCube: {
                    type: "t",
                    value: null
                },
                tFlip: {
                    type: "f",
                    value: -1
                }
            },
            vertexShader: ["varying vec3 vWorldPosition;", THREE.ShaderChunk.common, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "\tvWorldPosition = transformDirection( position, modelMatrix );", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
            fragmentShader: ["uniform samplerCube tCube;", "uniform float tFlip;", "varying vec3 vWorldPosition;", THREE.ShaderChunk.common, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );", THREE.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
        },
        equirect: {
            uniforms: {
                tEquirect: {
                    type: "t",
                    value: null
                },
                tFlip: {
                    type: "f",
                    value: -1
                }
            },
            vertexShader: ["varying vec3 vWorldPosition;", THREE.ShaderChunk.common, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "\tvWorldPosition = transformDirection( position, modelMatrix );", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
            fragmentShader: ["uniform sampler2D tEquirect;", "uniform float tFlip;", "varying vec3 vWorldPosition;", THREE.ShaderChunk.common, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "vec3 direction = normalize( vWorldPosition );", "vec2 sampleUV;", "sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );", "sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;", "gl_FragColor = texture2D( tEquirect, sampleUV );", THREE.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
        },
        depthRGBA: {
            uniforms: {},
            vertexShader: [THREE.ShaderChunk.common, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.begin_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.project_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
            fragmentShader: [THREE.ShaderChunk.common, THREE.ShaderChunk.logdepthbuf_pars_fragment, "vec4 pack_depth( const in float depth ) {", "\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );", "\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );", "\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );", "\tres -= res.xxyz * bit_mask;", "\treturn res;", "}", "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "\t#ifdef USE_LOGDEPTHBUF_EXT", "\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );", "\t#else", "\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );", "\t#endif", "}"].join("\n")
        },
        distanceRGBA: {
            uniforms: {
                lightPos: {
                    type: "v3",
                    value: new THREE.Vector3(0, 0, 0)
                }
            },
            vertexShader: ["varying vec4 vWorldPosition;", THREE.ShaderChunk.common, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.begin_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.project_vertex, THREE.ShaderChunk.worldpos_vertex, "vWorldPosition = worldPosition;", "}"].join("\n"),
            fragmentShader: ["uniform vec3 lightPos;", "varying vec4 vWorldPosition;", THREE.ShaderChunk.common, "vec4 pack1K ( float depth ) {", "   depth /= 1000.0;", "   const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );", "\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );", "\tvec4 res = fract( depth * bitSh );", "\tres -= res.xxyz * bitMsk;", "\treturn res; ", "}", "float unpack1K ( vec4 color ) {", "\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );", "\treturn dot( color, bitSh ) * 1000.0;", "}", "void main () {", "\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );", "}"].join("\n")
        }
    }, THREE.WebGLRenderer = function(e) {
        function t(e, t, n, i) {
            ae === !0 && (e *= i, t *= i, n *= i), Ie.clearColor(e, t, n, i)
        }

        function n() {
            Ue.init(), Ie.viewport(He, Se, _e, Me), t(le.r, le.g, le.b, ce)
        }

        function i() {
            ye = null, we = null, Re = "", xe = -1, Oe = !0, Ue.reset()
        }

        function r(e) {
            e.preventDefault(), i(), n(), Ge.clear()
        }

        function o(e) {
            var t = e.target;
            t.removeEventListener("dispose", o), l(t), je.textures--
        }

        function a(e) {
            var t = e.target;
            t.removeEventListener("dispose", a), c(t), je.textures--
        }

        function s(e) {
            var t = e.target;
            t.removeEventListener("dispose", s), u(t)
        }

        function l(e) {
            var t = Ge.get(e);
            if (e.image && t.__image__webglTextureCube) Ie.deleteTexture(t.__image__webglTextureCube);
            else {
                if (void 0 === t.__webglInit) return;
                Ie.deleteTexture(t.__webglTexture)
            }
            Ge.delete(e)
        }

        function c(e) {
            var t = Ge.get(e),
                n = Ge.get(e.texture);
            if (e && void 0 !== n.__webglTexture) {
                if (Ie.deleteTexture(n.__webglTexture), e instanceof THREE.WebGLRenderTargetCube)
                    for (var i = 0; i < 6; i++) Ie.deleteFramebuffer(t.__webglFramebuffer[i]), Ie.deleteRenderbuffer(t.__webglRenderbuffer[i]);
                else Ie.deleteFramebuffer(t.__webglFramebuffer), Ie.deleteRenderbuffer(t.__webglRenderbuffer);
                Ge.delete(e.texture), Ge.delete(e)
            }
        }

        function u(e) {
            h(e), Ge.delete(e)
        }

        function h(e) {
            var t = Ge.get(e).program;
            e.program = void 0, void 0 !== t && qe.releaseProgram(t)
        }

        function d(e, t, n, i) {
            var r;
            if (n instanceof THREE.InstancedBufferGeometry && (r = Be.get("ANGLE_instanced_arrays"), null === r)) return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            void 0 === i && (i = 0), Ue.initAttributes();
            var o = n.attributes,
                a = t.getAttributes(),
                s = e.defaultAttributeValues;
            for (var l in a) {
                var c = a[l];
                if (c >= 0) {
                    var u = o[l];
                    if (void 0 !== u) {
                        var h = u.itemSize,
                            d = We.getAttributeBuffer(u);
                        if (u instanceof THREE.InterleavedBufferAttribute) {
                            var p = u.data,
                                f = p.stride,
                                m = u.offset;
                            p instanceof THREE.InstancedInterleavedBuffer ? (Ue.enableAttributeAndDivisor(c, p.meshPerAttribute, r), void 0 === n.maxInstancedCount && (n.maxInstancedCount = p.meshPerAttribute * p.count)) : Ue.enableAttribute(c), Ie.bindBuffer(Ie.ARRAY_BUFFER, d), Ie.vertexAttribPointer(c, h, Ie.FLOAT, !1, f * p.array.BYTES_PER_ELEMENT, (i * f + m) * p.array.BYTES_PER_ELEMENT)
                        } else u instanceof THREE.InstancedBufferAttribute ? (Ue.enableAttributeAndDivisor(c, u.meshPerAttribute, r), void 0 === n.maxInstancedCount && (n.maxInstancedCount = u.meshPerAttribute * u.count)) : Ue.enableAttribute(c), Ie.bindBuffer(Ie.ARRAY_BUFFER, d), Ie.vertexAttribPointer(c, h, Ie.FLOAT, !1, 0, i * h * 4)
                    } else if (void 0 !== s) {
                        var E = s[l];
                        if (void 0 !== E) switch (E.length) {
                            case 2:
                                Ie.vertexAttrib2fv(c, E);
                                break;
                            case 3:
                                Ie.vertexAttrib3fv(c, E);
                                break;
                            case 4:
                                Ie.vertexAttrib4fv(c, E);
                                break;
                            default:
                                Ie.vertexAttrib1fv(c, E)
                        }
                    }
                }
            }
            Ue.disableUnusedAttributes()
        }

        function p(e, t) {
            return t[0] - e[0]
        }

        function f(e, t) {
            return e.object.renderOrder !== t.object.renderOrder ? e.object.renderOrder - t.object.renderOrder : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
        }

        function m(e, t) {
            return e.object.renderOrder !== t.object.renderOrder ? e.object.renderOrder - t.object.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
        }

        function E(e, t, n, i, r) {
            var o, a;
            n.transparent ? (o = pe, a = ++fe) : (o = he, a = ++de);
            var s = o[a];
            void 0 !== s ? (s.id = e.id, s.object = e, s.geometry = t, s.material = n, s.z = Le.z, s.group = r) : (s = {
                id: e.id,
                object: e,
                geometry: t,
                material: n,
                z: Le.z,
                group: r
            }, o.push(s))
        }

        function g(e, t) {
            if (e.visible !== !1) {
                if (0 !== (e.channels.mask & t.channels.mask))
                    if (e instanceof THREE.Light) ue.push(e);
                    else if (e instanceof THREE.Sprite) Ee.push(e);
                else if (e instanceof THREE.LensFlare) ge.push(e);
                else if (e instanceof THREE.ImmediateRenderObject) ve.sortObjects === !0 && (Le.setFromMatrixPosition(e.matrixWorld), Le.applyProjection(ke)), E(e, null, e.material, Le.z, null);
                else if ((e instanceof THREE.Mesh || e instanceof THREE.Line || e instanceof THREE.Points) && (e instanceof THREE.SkinnedMesh && e.skeleton.update(), e.frustumCulled === !1 || Pe.intersectsObject(e) === !0)) {
                    var n = e.material;
                    if (n.visible === !0) {
                        ve.sortObjects === !0 && (Le.setFromMatrixPosition(e.matrixWorld), Le.applyProjection(ke));
                        var i = We.update(e);
                        if (n instanceof THREE.MeshFaceMaterial)
                            for (var r = i.groups, o = n.materials, a = 0, s = r.length; a < s; a++) {
                                var l = r[a],
                                    c = o[l.materialIndex];
                                c.visible === !0 && E(e, i, c, Le.z, l)
                            } else E(e, i, n, Le.z, null)
                    }
                }
                for (var u = e.children, a = 0, s = u.length; a < s; a++) g(u[a], t)
            }
        }

        function v(e, t, n, i, r) {
            for (var o = 0, a = e.length; o < a; o++) {
                var s = e[o],
                    l = s.object,
                    c = s.geometry,
                    u = void 0 === r ? s.material : r,
                    h = s.group;
                if (l.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse, l.matrixWorld), l.normalMatrix.getNormalMatrix(l.modelViewMatrix), l instanceof THREE.ImmediateRenderObject) {
                    T(u);
                    var d = R(t, n, i, u, l);
                    Re = "", l.render(function(e) {
                        ve.renderBufferImmediate(e, d, u)
                    })
                } else ve.renderBufferDirect(t, n, i, c, u, l, h)
            }
        }

        function y(e, t, n, i) {
            var r = Ge.get(e),
                o = qe.getParameters(e, t, n, i),
                a = qe.getProgramCode(e, o),
                l = r.program,
                c = !0;
            if (void 0 === l) e.addEventListener("dispose", s);
            else if (l.code !== a) h(e);
            else {
                if (void 0 !== o.shaderID) return;
                c = !1
            }
            if (c) {
                if (o.shaderID) {
                    var u = THREE.ShaderLib[o.shaderID];
                    r.__webglShader = {
                        name: e.type,
                        uniforms: THREE.UniformsUtils.clone(u.uniforms),
                        vertexShader: u.vertexShader,
                        fragmentShader: u.fragmentShader
                    }
                } else r.__webglShader = {
                    name: e.type,
                    uniforms: e.uniforms,
                    vertexShader: e.vertexShader,
                    fragmentShader: e.fragmentShader
                };
                e.__webglShader = r.__webglShader, l = qe.acquireProgram(e, o, a), r.program = l, e.program = l
            }
            var d = l.getAttributes();
            if (e.morphTargets) {
                e.numSupportedMorphTargets = 0;
                for (var p = 0; p < ve.maxMorphTargets; p++) d["morphTarget" + p] >= 0 && e.numSupportedMorphTargets++
            }
            if (e.morphNormals)
                for (e.numSupportedMorphNormals = 0, p = 0; p < ve.maxMorphNormals; p++) d["morphNormal" + p] >= 0 && e.numSupportedMorphNormals++;
            r.uniformsList = [];
            var f = r.program.getUniforms();
            for (var m in r.__webglShader.uniforms) {
                var E = f[m];
                E && r.uniformsList.push([r.__webglShader.uniforms[m], E])
            }
        }

        function T(e) {
            x(e), e.transparent === !0 ? Ue.setBlending(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha) : Ue.setBlending(THREE.NoBlending), Ue.setDepthFunc(e.depthFunc), Ue.setDepthTest(e.depthTest), Ue.setDepthWrite(e.depthWrite), Ue.setColorWrite(e.colorWrite), Ue.setPolygonOffset(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
        }

        function x(e) {
            e.side !== THREE.DoubleSide ? Ue.enable(Ie.CULL_FACE) : Ue.disable(Ie.CULL_FACE), Ue.setFlipSided(e.side === THREE.BackSide)
        }

        function R(e, t, n, i, r) {
            be = 0;
            var o = Ge.get(i);
            !i.needsUpdate && o.program || (y(i, t, n, r), i.needsUpdate = !1);
            var a = !1,
                s = !1,
                l = !1,
                c = o.program,
                u = c.getUniforms(),
                h = o.__webglShader.uniforms;
            if (c.id !== ye && (Ie.useProgram(c.program), ye = c.id, a = !0, s = !0, l = !0), i.id !== xe && (xe === -1 && (l = !0), xe = i.id, s = !0), (a || e !== we) && (Ie.uniformMatrix4fv(u.projectionMatrix, !1, e.projectionMatrix.elements), ze.logarithmicDepthBuffer && Ie.uniform1f(u.logDepthBufFC, 2 / (Math.log(e.far + 1) / Math.LN2)), e !== we && (we = e), (i instanceof THREE.ShaderMaterial || i instanceof THREE.MeshPhongMaterial || i.envMap) && void 0 !== u.cameraPosition && (Le.setFromMatrixPosition(e.matrixWorld), Ie.uniform3f(u.cameraPosition, Le.x, Le.y, Le.z)), (i instanceof THREE.MeshPhongMaterial || i instanceof THREE.MeshLambertMaterial || i instanceof THREE.MeshBasicMaterial || i instanceof THREE.ShaderMaterial || i.skinning) && void 0 !== u.viewMatrix && Ie.uniformMatrix4fv(u.viewMatrix, !1, e.matrixWorldInverse.elements)), i.skinning)
                if (r.bindMatrix && void 0 !== u.bindMatrix && Ie.uniformMatrix4fv(u.bindMatrix, !1, r.bindMatrix.elements), r.bindMatrixInverse && void 0 !== u.bindMatrixInverse && Ie.uniformMatrix4fv(u.bindMatrixInverse, !1, r.bindMatrixInverse.elements), ze.floatVertexTextures && r.skeleton && r.skeleton.useVertexTexture) {
                    if (void 0 !== u.boneTexture) {
                        var d = L();
                        Ie.uniform1i(u.boneTexture, d), ve.setTexture(r.skeleton.boneTexture, d)
                    }
                    void 0 !== u.boneTextureWidth && Ie.uniform1i(u.boneTextureWidth, r.skeleton.boneTextureWidth), void 0 !== u.boneTextureHeight && Ie.uniform1i(u.boneTextureHeight, r.skeleton.boneTextureHeight)
                } else r.skeleton && r.skeleton.boneMatrices && void 0 !== u.boneGlobalMatrices && Ie.uniformMatrix4fv(u.boneGlobalMatrices, !1, r.skeleton.boneMatrices);
            return s && (n && i.fog && _(h, n), (i instanceof THREE.MeshPhongMaterial || i instanceof THREE.MeshLambertMaterial || i.lights) && (Oe && (l = !0, F(t, e), Oe = !1), l ? (C(h, Fe), A(h, !0)) : A(h, !1)), (i instanceof THREE.MeshBasicMaterial || i instanceof THREE.MeshLambertMaterial || i instanceof THREE.MeshPhongMaterial) && w(h, i), i instanceof THREE.LineBasicMaterial ? b(h, i) : i instanceof THREE.LineDashedMaterial ? (b(h, i), H(h, i)) : i instanceof THREE.PointsMaterial ? S(h, i) : i instanceof THREE.MeshPhongMaterial ? M(h, i) : i instanceof THREE.MeshDepthMaterial ? (h.mNear.value = e.near, h.mFar.value = e.far, h.opacity.value = i.opacity) : i instanceof THREE.MeshNormalMaterial && (h.opacity.value = i.opacity), r.receiveShadow && !i._shadowPass && P(h, t, e), D(o.uniformsList)), k(u, r), void 0 !== u.modelMatrix && Ie.uniformMatrix4fv(u.modelMatrix, !1, r.matrixWorld.elements), c
        }

        function w(e, t) {
            e.opacity.value = t.opacity, e.diffuse.value = t.color, t.emissive && (e.emissive.value = t.emissive), e.map.value = t.map, e.specularMap.value = t.specularMap, e.alphaMap.value = t.alphaMap, t.aoMap && (e.aoMap.value = t.aoMap, e.aoMapIntensity.value = t.aoMapIntensity);
            var n;
            if (t.map ? n = t.map : t.specularMap ? n = t.specularMap : t.displacementMap ? n = t.displacementMap : t.normalMap ? n = t.normalMap : t.bumpMap ? n = t.bumpMap : t.alphaMap ? n = t.alphaMap : t.emissiveMap && (n = t.emissiveMap), void 0 !== n) {
                n instanceof THREE.WebGLRenderTarget && (n = n.texture);
                var i = n.offset,
                    r = n.repeat;
                e.offsetRepeat.value.set(i.x, i.y, r.x, r.y)
            }
            e.envMap.value = t.envMap, e.flipEnvMap.value = t.envMap instanceof THREE.WebGLRenderTargetCube ? 1 : -1, e.reflectivity.value = t.reflectivity, e.refractionRatio.value = t.refractionRatio
        }

        function b(e, t) {
            e.diffuse.value = t.color, e.opacity.value = t.opacity
        }

        function H(e, t) {
            e.dashSize.value = t.dashSize, e.totalSize.value = t.dashSize + t.gapSize, e.scale.value = t.scale
        }

        function S(e, t) {
            if (e.psColor.value = t.color, e.opacity.value = t.opacity, e.size.value = t.size, e.scale.value = K.height / 2, e.map.value = t.map, null !== t.map) {
                var n = t.map.offset,
                    i = t.map.repeat;
                e.offsetRepeat.value.set(n.x, n.y, i.x, i.y)
            }
        }

        function _(e, t) {
            e.fogColor.value = t.color, t instanceof THREE.Fog ? (e.fogNear.value = t.near, e.fogFar.value = t.far) : t instanceof THREE.FogExp2 && (e.fogDensity.value = t.density)
        }

        function M(e, t) {
            e.specular.value = t.specular,
                e.shininess.value = Math.max(t.shininess, 1e-4), t.lightMap && (e.lightMap.value = t.lightMap, e.lightMapIntensity.value = t.lightMapIntensity), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale)), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
        }

        function C(e, t) {
            e.ambientLightColor.value = t.ambient, e.directionalLightColor.value = t.directional.colors, e.directionalLightDirection.value = t.directional.positions, e.pointLightColor.value = t.point.colors, e.pointLightPosition.value = t.point.positions, e.pointLightDistance.value = t.point.distances, e.pointLightDecay.value = t.point.decays, e.spotLightColor.value = t.spot.colors, e.spotLightPosition.value = t.spot.positions, e.spotLightDistance.value = t.spot.distances, e.spotLightDirection.value = t.spot.directions, e.spotLightAngleCos.value = t.spot.anglesCos, e.spotLightExponent.value = t.spot.exponents, e.spotLightDecay.value = t.spot.decays, e.hemisphereLightSkyColor.value = t.hemi.skyColors, e.hemisphereLightGroundColor.value = t.hemi.groundColors, e.hemisphereLightDirection.value = t.hemi.positions
        }

        function A(e, t) {
            e.ambientLightColor.needsUpdate = t, e.directionalLightColor.needsUpdate = t, e.directionalLightDirection.needsUpdate = t, e.pointLightColor.needsUpdate = t, e.pointLightPosition.needsUpdate = t, e.pointLightDistance.needsUpdate = t, e.pointLightDecay.needsUpdate = t, e.spotLightColor.needsUpdate = t, e.spotLightPosition.needsUpdate = t, e.spotLightDistance.needsUpdate = t, e.spotLightDirection.needsUpdate = t, e.spotLightAngleCos.needsUpdate = t, e.spotLightExponent.needsUpdate = t, e.spotLightDecay.needsUpdate = t, e.hemisphereLightSkyColor.needsUpdate = t, e.hemisphereLightGroundColor.needsUpdate = t, e.hemisphereLightDirection.needsUpdate = t
        }

        function P(e, t, n) {
            if (e.shadowMatrix)
                for (var i = 0, r = 0, o = t.length; r < o; r++) {
                    var a = t[r];
                    if (a.castShadow === !0 && (a instanceof THREE.PointLight || a instanceof THREE.SpotLight || a instanceof THREE.DirectionalLight)) {
                        var s = a.shadow;
                        a instanceof THREE.PointLight ? (Le.setFromMatrixPosition(a.matrixWorld).negate(), s.matrix.identity().setPosition(Le), e.shadowDarkness.value[i] = -s.darkness) : e.shadowDarkness.value[i] = s.darkness, e.shadowMatrix.value[i] = s.matrix, e.shadowMap.value[i] = s.map, e.shadowMapSize.value[i] = s.mapSize, e.shadowBias.value[i] = s.bias, i++
                    }
                }
        }

        function k(e, t) {
            Ie.uniformMatrix4fv(e.modelViewMatrix, !1, t.modelViewMatrix.elements), e.normalMatrix && Ie.uniformMatrix3fv(e.normalMatrix, !1, t.normalMatrix.elements)
        }

        function L() {
            var e = be;
            return e >= ze.maxTextures && console.warn("WebGLRenderer: trying to use " + e + " texture units while this GPU supports only " + ze.maxTextures), be += 1, e
        }

        function D(e) {
            for (var t, n, i = 0, r = e.length; i < r; i++) {
                var o = e[i][0];
                if (o.needsUpdate !== !1) {
                    var a = o.type,
                        s = o.value,
                        l = e[i][1];
                    switch (a) {
                        case "1i":
                            Ie.uniform1i(l, s);
                            break;
                        case "1f":
                            Ie.uniform1f(l, s);
                            break;
                        case "2f":
                            Ie.uniform2f(l, s[0], s[1]);
                            break;
                        case "3f":
                            Ie.uniform3f(l, s[0], s[1], s[2]);
                            break;
                        case "4f":
                            Ie.uniform4f(l, s[0], s[1], s[2], s[3]);
                            break;
                        case "1iv":
                            Ie.uniform1iv(l, s);
                            break;
                        case "3iv":
                            Ie.uniform3iv(l, s);
                            break;
                        case "1fv":
                            Ie.uniform1fv(l, s);
                            break;
                        case "2fv":
                            Ie.uniform2fv(l, s);
                            break;
                        case "3fv":
                            Ie.uniform3fv(l, s);
                            break;
                        case "4fv":
                            Ie.uniform4fv(l, s);
                            break;
                        case "Matrix3fv":
                            Ie.uniformMatrix3fv(l, !1, s);
                            break;
                        case "Matrix4fv":
                            Ie.uniformMatrix4fv(l, !1, s);
                            break;
                        case "i":
                            Ie.uniform1i(l, s);
                            break;
                        case "f":
                            Ie.uniform1f(l, s);
                            break;
                        case "v2":
                            Ie.uniform2f(l, s.x, s.y);
                            break;
                        case "v3":
                            Ie.uniform3f(l, s.x, s.y, s.z);
                            break;
                        case "v4":
                            Ie.uniform4f(l, s.x, s.y, s.z, s.w);
                            break;
                        case "c":
                            Ie.uniform3f(l, s.r, s.g, s.b);
                            break;
                        case "iv1":
                            Ie.uniform1iv(l, s);
                            break;
                        case "iv":
                            Ie.uniform3iv(l, s);
                            break;
                        case "fv1":
                            Ie.uniform1fv(l, s);
                            break;
                        case "fv":
                            Ie.uniform3fv(l, s);
                            break;
                        case "v2v":
                            void 0 === o._array && (o._array = new Float32Array(2 * s.length));
                            for (var c = 0, u = 0, h = s.length; c < h; c++, u += 2) o._array[u + 0] = s[c].x, o._array[u + 1] = s[c].y;
                            Ie.uniform2fv(l, o._array);
                            break;
                        case "v3v":
                            void 0 === o._array && (o._array = new Float32Array(3 * s.length));
                            for (var c = 0, d = 0, h = s.length; c < h; c++, d += 3) o._array[d + 0] = s[c].x, o._array[d + 1] = s[c].y, o._array[d + 2] = s[c].z;
                            Ie.uniform3fv(l, o._array);
                            break;
                        case "v4v":
                            void 0 === o._array && (o._array = new Float32Array(4 * s.length));
                            for (var c = 0, p = 0, h = s.length; c < h; c++, p += 4) o._array[p + 0] = s[c].x, o._array[p + 1] = s[c].y, o._array[p + 2] = s[c].z, o._array[p + 3] = s[c].w;
                            Ie.uniform4fv(l, o._array);
                            break;
                        case "m3":
                            Ie.uniformMatrix3fv(l, !1, s.elements);
                            break;
                        case "m3v":
                            void 0 === o._array && (o._array = new Float32Array(9 * s.length));
                            for (var c = 0, h = s.length; c < h; c++) s[c].flattenToArrayOffset(o._array, 9 * c);
                            Ie.uniformMatrix3fv(l, !1, o._array);
                            break;
                        case "m4":
                            Ie.uniformMatrix4fv(l, !1, s.elements);
                            break;
                        case "m4v":
                            void 0 === o._array && (o._array = new Float32Array(16 * s.length));
                            for (var c = 0, h = s.length; c < h; c++) s[c].flattenToArrayOffset(o._array, 16 * c);
                            Ie.uniformMatrix4fv(l, !1, o._array);
                            break;
                        case "t":
                            if (t = s, n = L(), Ie.uniform1i(l, n), !t) continue;
                            t instanceof THREE.CubeTexture || Array.isArray(t.image) && 6 === t.image.length ? U(t, n) : t instanceof THREE.WebGLRenderTargetCube ? G(t.texture, n) : t instanceof THREE.WebGLRenderTarget ? ve.setTexture(t.texture, n) : ve.setTexture(t, n);
                            break;
                        case "tv":
                            void 0 === o._array && (o._array = []);
                            for (var c = 0, h = o.value.length; c < h; c++) o._array[c] = L();
                            Ie.uniform1iv(l, o._array);
                            for (var c = 0, h = o.value.length; c < h; c++) t = o.value[c], n = o._array[c], t && (t instanceof THREE.CubeTexture || t.image instanceof Array && 6 === t.image.length ? U(t, n) : t instanceof THREE.WebGLRenderTarget ? ve.setTexture(t.texture, n) : t instanceof THREE.WebGLRenderTargetCube ? G(t.texture, n) : ve.setTexture(t, n));
                            break;
                        default:
                            console.warn("THREE.WebGLRenderer: Unknown uniform type: " + a)
                    }
                }
            }
        }

        function O(e, t, n, i) {
            e[t + 0] = n.r * i, e[t + 1] = n.g * i, e[t + 2] = n.b * i
        }

        function F(e, t) {
            var n, i, r, o = 0,
                a = 0,
                s = 0,
                l, c, u, h, d, p = Fe,
                f = t.matrixWorldInverse,
                m = p.directional.colors,
                E = p.directional.positions,
                g = p.point.colors,
                v = p.point.positions,
                y = p.point.distances,
                T = p.point.decays,
                x = p.spot.colors,
                R = p.spot.positions,
                w = p.spot.distances,
                b = p.spot.directions,
                H = p.spot.anglesCos,
                S = p.spot.exponents,
                _ = p.spot.decays,
                M = p.hemi.skyColors,
                C = p.hemi.groundColors,
                A = p.hemi.positions,
                P = 0,
                k = 0,
                L = 0,
                D = 0,
                F = 0,
                j = 0,
                V = 0,
                I = 0,
                N = 0,
                B = 0,
                z = 0,
                U = 0;
            for (n = 0, i = e.length; n < i; n++)
                if (r = e[n], l = r.color, h = r.intensity, d = r.distance, r instanceof THREE.AmbientLight) {
                    if (!r.visible) continue;
                    o += l.r, a += l.g, s += l.b
                } else if (r instanceof THREE.DirectionalLight) {
                if (F += 1, !r.visible) continue;
                De.setFromMatrixPosition(r.matrixWorld), Le.setFromMatrixPosition(r.target.matrixWorld), De.sub(Le), De.transformDirection(f), N = 3 * P, E[N + 0] = De.x, E[N + 1] = De.y, E[N + 2] = De.z, O(m, N, l, h), P += 1
            } else if (r instanceof THREE.PointLight) {
                if (j += 1, !r.visible) continue;
                B = 3 * k, O(g, B, l, h), Le.setFromMatrixPosition(r.matrixWorld), Le.applyMatrix4(f), v[B + 0] = Le.x, v[B + 1] = Le.y, v[B + 2] = Le.z, y[k] = d, T[k] = 0 === r.distance ? 0 : r.decay, k += 1
            } else if (r instanceof THREE.SpotLight) {
                if (V += 1, !r.visible) continue;
                z = 3 * L, O(x, z, l, h), De.setFromMatrixPosition(r.matrixWorld), Le.copy(De).applyMatrix4(f), R[z + 0] = Le.x, R[z + 1] = Le.y, R[z + 2] = Le.z, w[L] = d, Le.setFromMatrixPosition(r.target.matrixWorld), De.sub(Le), De.transformDirection(f), b[z + 0] = De.x, b[z + 1] = De.y, b[z + 2] = De.z, H[L] = Math.cos(r.angle), S[L] = r.exponent, _[L] = 0 === r.distance ? 0 : r.decay, L += 1
            } else if (r instanceof THREE.HemisphereLight) {
                if (I += 1, !r.visible) continue;
                De.setFromMatrixPosition(r.matrixWorld), De.transformDirection(f), U = 3 * D, A[U + 0] = De.x, A[U + 1] = De.y, A[U + 2] = De.z, c = r.color, u = r.groundColor, O(M, U, c, h), O(C, U, u, h), D += 1
            }
            for (n = 3 * P, i = Math.max(m.length, 3 * F); n < i; n++) m[n] = 0;
            for (n = 3 * k, i = Math.max(g.length, 3 * j); n < i; n++) g[n] = 0;
            for (n = 3 * L, i = Math.max(x.length, 3 * V); n < i; n++) x[n] = 0;
            for (n = 3 * D, i = Math.max(M.length, 3 * I); n < i; n++) M[n] = 0;
            for (n = 3 * D, i = Math.max(C.length, 3 * I); n < i; n++) C[n] = 0;
            p.directional.length = P, p.point.length = k, p.spot.length = L, p.hemi.length = D, p.ambient[0] = o, p.ambient[1] = a, p.ambient[2] = s
        }

        function j(e, t, n) {
            var i;
            if (n ? (Ie.texParameteri(e, Ie.TEXTURE_WRAP_S, Z(t.wrapS)), Ie.texParameteri(e, Ie.TEXTURE_WRAP_T, Z(t.wrapT)), Ie.texParameteri(e, Ie.TEXTURE_MAG_FILTER, Z(t.magFilter)), Ie.texParameteri(e, Ie.TEXTURE_MIN_FILTER, Z(t.minFilter))) : (Ie.texParameteri(e, Ie.TEXTURE_WRAP_S, Ie.CLAMP_TO_EDGE), Ie.texParameteri(e, Ie.TEXTURE_WRAP_T, Ie.CLAMP_TO_EDGE), t.wrapS === THREE.ClampToEdgeWrapping && t.wrapT === THREE.ClampToEdgeWrapping || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.", t), Ie.texParameteri(e, Ie.TEXTURE_MAG_FILTER, Y(t.magFilter)), Ie.texParameteri(e, Ie.TEXTURE_MIN_FILTER, Y(t.minFilter)), t.minFilter !== THREE.NearestFilter && t.minFilter !== THREE.LinearFilter && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.", t)), i = Be.get("EXT_texture_filter_anisotropic")) {
                if (t.type === THREE.FloatType && null === Be.get("OES_texture_float_linear")) return;
                if (t.type === THREE.HalfFloatType && null === Be.get("OES_texture_half_float_linear")) return;
                (t.anisotropy > 1 || Ge.get(t).__currentAnisotropy) && (Ie.texParameterf(e, i.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(t.anisotropy, ve.getMaxAnisotropy())), Ge.get(t).__currentAnisotropy = t.anisotropy)
            }
        }

        function V(e, t, n) {
            void 0 === e.__webglInit && (e.__webglInit = !0, t.addEventListener("dispose", o), e.__webglTexture = Ie.createTexture(), je.textures++), Ue.activeTexture(Ie.TEXTURE0 + n), Ue.bindTexture(Ie.TEXTURE_2D, e.__webglTexture), Ie.pixelStorei(Ie.UNPACK_FLIP_Y_WEBGL, t.flipY), Ie.pixelStorei(Ie.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultiplyAlpha), Ie.pixelStorei(Ie.UNPACK_ALIGNMENT, t.unpackAlignment), t.image = I(t.image, ze.maxTextureSize), B(t) && N(t.image) === !1 && (t.image = z(t.image));
            var i = t.image,
                r = N(i),
                a = Z(t.format),
                s = Z(t.type);
            j(Ie.TEXTURE_2D, t, r);
            var l, c = t.mipmaps;
            if (t instanceof THREE.DataTexture)
                if (c.length > 0 && r) {
                    for (var u = 0, h = c.length; u < h; u++) l = c[u], Ue.texImage2D(Ie.TEXTURE_2D, u, a, l.width, l.height, 0, a, s, l.data);
                    t.generateMipmaps = !1
                } else Ue.texImage2D(Ie.TEXTURE_2D, 0, a, i.width, i.height, 0, a, s, i.data);
            else if (t instanceof THREE.CompressedTexture)
                for (var u = 0, h = c.length; u < h; u++) l = c[u], t.format !== THREE.RGBAFormat && t.format !== THREE.RGBFormat ? Ue.getCompressedTextureFormats().indexOf(a) > -1 ? Ue.compressedTexImage2D(Ie.TEXTURE_2D, u, a, l.width, l.height, 0, l.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : Ue.texImage2D(Ie.TEXTURE_2D, u, a, l.width, l.height, 0, a, s, l.data);
            else if (c.length > 0 && r) {
                for (var u = 0, h = c.length; u < h; u++) l = c[u], Ue.texImage2D(Ie.TEXTURE_2D, u, a, a, s, l);
                t.generateMipmaps = !1
            } else Ue.texImage2D(Ie.TEXTURE_2D, 0, a, a, s, t.image);
            t.generateMipmaps && r && Ie.generateMipmap(Ie.TEXTURE_2D), e.__version = t.version, t.onUpdate && t.onUpdate(t)
        }

        function I(e, t) {
            if (e.width > t || e.height > t) {
                var n = t / Math.max(e.width, e.height),
                    i = document.createElement("canvas");
                i.width = Math.floor(e.width * n), i.height = Math.floor(e.height * n);
                var r = i.getContext("2d");
                return r.drawImage(e, 0, 0, e.width, e.height, 0, 0, i.width, i.height), console.warn("THREE.WebGLRenderer: image is too big (" + e.width + "x" + e.height + "). Resized to " + i.width + "x" + i.height, e), i
            }
            return e
        }

        function N(e) {
            return THREE.Math.isPowerOfTwo(e.width) && THREE.Math.isPowerOfTwo(e.height)
        }

        function B(e) {
            return e.wrapS !== THREE.ClampToEdgeWrapping || e.wrapT !== THREE.ClampToEdgeWrapping || e.minFilter !== THREE.NearestFilter && e.minFilter !== THREE.LinearFilter
        }

        function z(e) {
            if (e instanceof HTMLImageElement || e instanceof HTMLCanvasElement) {
                var t = document.createElement("canvas");
                t.width = THREE.Math.nearestPowerOfTwo(e.width), t.height = THREE.Math.nearestPowerOfTwo(e.height);
                var n = t.getContext("2d");
                return n.drawImage(e, 0, 0, t.width, t.height), console.warn("THREE.WebGLRenderer: image is not power of two (" + e.width + "x" + e.height + "). Resized to " + t.width + "x" + t.height, e), t
            }
            return e
        }

        function U(e, t) {
            var n = Ge.get(e);
            if (6 === e.image.length)
                if (e.version > 0 && n.__version !== e.version) {
                    n.__image__webglTextureCube || (e.addEventListener("dispose", o), n.__image__webglTextureCube = Ie.createTexture(), je.textures++), Ue.activeTexture(Ie.TEXTURE0 + t), Ue.bindTexture(Ie.TEXTURE_CUBE_MAP, n.__image__webglTextureCube), Ie.pixelStorei(Ie.UNPACK_FLIP_Y_WEBGL, e.flipY);
                    for (var i = e instanceof THREE.CompressedTexture, r = e.image[0] instanceof THREE.DataTexture, a = [], s = 0; s < 6; s++) !ve.autoScaleCubemaps || i || r ? a[s] = r ? e.image[s].image : e.image[s] : a[s] = I(e.image[s], ze.maxCubemapSize);
                    var l = a[0],
                        c = N(l),
                        u = Z(e.format),
                        h = Z(e.type);
                    j(Ie.TEXTURE_CUBE_MAP, e, c);
                    for (var s = 0; s < 6; s++)
                        if (i)
                            for (var d, p = a[s].mipmaps, f = 0, m = p.length; f < m; f++) d = p[f], e.format !== THREE.RGBAFormat && e.format !== THREE.RGBFormat ? Ue.getCompressedTextureFormats().indexOf(u) > -1 ? Ue.compressedTexImage2D(Ie.TEXTURE_CUBE_MAP_POSITIVE_X + s, f, u, d.width, d.height, 0, d.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()") : Ue.texImage2D(Ie.TEXTURE_CUBE_MAP_POSITIVE_X + s, f, u, d.width, d.height, 0, u, h, d.data);
                        else r ? Ue.texImage2D(Ie.TEXTURE_CUBE_MAP_POSITIVE_X + s, 0, u, a[s].width, a[s].height, 0, u, h, a[s].data) : Ue.texImage2D(Ie.TEXTURE_CUBE_MAP_POSITIVE_X + s, 0, u, u, h, a[s]);
                    e.generateMipmaps && c && Ie.generateMipmap(Ie.TEXTURE_CUBE_MAP), n.__version = e.version, e.onUpdate && e.onUpdate(e)
                } else Ue.activeTexture(Ie.TEXTURE0 + t), Ue.bindTexture(Ie.TEXTURE_CUBE_MAP, n.__image__webglTextureCube)
        }

        function G(e, t) {
            Ue.activeTexture(Ie.TEXTURE0 + t), Ue.bindTexture(Ie.TEXTURE_CUBE_MAP, Ge.get(e).__webglTexture)
        }

        function W(e, t, n) {
            Ie.bindFramebuffer(Ie.FRAMEBUFFER, e), Ie.framebufferTexture2D(Ie.FRAMEBUFFER, Ie.COLOR_ATTACHMENT0, n, Ge.get(t.texture).__webglTexture, 0)
        }

        function q(e, t) {
            Ie.bindRenderbuffer(Ie.RENDERBUFFER, e), t.depthBuffer && !t.stencilBuffer ? (Ie.renderbufferStorage(Ie.RENDERBUFFER, Ie.DEPTH_COMPONENT16, t.width, t.height), Ie.framebufferRenderbuffer(Ie.FRAMEBUFFER, Ie.DEPTH_ATTACHMENT, Ie.RENDERBUFFER, e)) : t.depthBuffer && t.stencilBuffer ? (Ie.renderbufferStorage(Ie.RENDERBUFFER, Ie.DEPTH_STENCIL, t.width, t.height), Ie.framebufferRenderbuffer(Ie.FRAMEBUFFER, Ie.DEPTH_STENCIL_ATTACHMENT, Ie.RENDERBUFFER, e)) : Ie.renderbufferStorage(Ie.RENDERBUFFER, Ie.RGBA4, t.width, t.height)
        }

        function X(e) {
            var t = e instanceof THREE.WebGLRenderTargetCube ? Ie.TEXTURE_CUBE_MAP : Ie.TEXTURE_2D,
                n = Ge.get(e.texture).__webglTexture;
            Ue.bindTexture(t, n), Ie.generateMipmap(t), Ue.bindTexture(t, null)
        }

        function Y(e) {
            return e === THREE.NearestFilter || e === THREE.NearestMipMapNearestFilter || e === THREE.NearestMipMapLinearFilter ? Ie.NEAREST : Ie.LINEAR
        }

        function Z(e) {
            var t;
            if (e === THREE.RepeatWrapping) return Ie.REPEAT;
            if (e === THREE.ClampToEdgeWrapping) return Ie.CLAMP_TO_EDGE;
            if (e === THREE.MirroredRepeatWrapping) return Ie.MIRRORED_REPEAT;
            if (e === THREE.NearestFilter) return Ie.NEAREST;
            if (e === THREE.NearestMipMapNearestFilter) return Ie.NEAREST_MIPMAP_NEAREST;
            if (e === THREE.NearestMipMapLinearFilter) return Ie.NEAREST_MIPMAP_LINEAR;
            if (e === THREE.LinearFilter) return Ie.LINEAR;
            if (e === THREE.LinearMipMapNearestFilter) return Ie.LINEAR_MIPMAP_NEAREST;
            if (e === THREE.LinearMipMapLinearFilter) return Ie.LINEAR_MIPMAP_LINEAR;
            if (e === THREE.UnsignedByteType) return Ie.UNSIGNED_BYTE;
            if (e === THREE.UnsignedShort4444Type) return Ie.UNSIGNED_SHORT_4_4_4_4;
            if (e === THREE.UnsignedShort5551Type) return Ie.UNSIGNED_SHORT_5_5_5_1;
            if (e === THREE.UnsignedShort565Type) return Ie.UNSIGNED_SHORT_5_6_5;
            if (e === THREE.ByteType) return Ie.BYTE;
            if (e === THREE.ShortType) return Ie.SHORT;
            if (e === THREE.UnsignedShortType) return Ie.UNSIGNED_SHORT;
            if (e === THREE.IntType) return Ie.INT;
            if (e === THREE.UnsignedIntType) return Ie.UNSIGNED_INT;
            if (e === THREE.FloatType) return Ie.FLOAT;
            if (t = Be.get("OES_texture_half_float"), null !== t && e === THREE.HalfFloatType) return t.HALF_FLOAT_OES;
            if (e === THREE.AlphaFormat) return Ie.ALPHA;
            if (e === THREE.RGBFormat) return Ie.RGB;
            if (e === THREE.RGBAFormat) return Ie.RGBA;
            if (e === THREE.LuminanceFormat) return Ie.LUMINANCE;
            if (e === THREE.LuminanceAlphaFormat) return Ie.LUMINANCE_ALPHA;
            if (e === THREE.AddEquation) return Ie.FUNC_ADD;
            if (e === THREE.SubtractEquation) return Ie.FUNC_SUBTRACT;
            if (e === THREE.ReverseSubtractEquation) return Ie.FUNC_REVERSE_SUBTRACT;
            if (e === THREE.ZeroFactor) return Ie.ZERO;
            if (e === THREE.OneFactor) return Ie.ONE;
            if (e === THREE.SrcColorFactor) return Ie.SRC_COLOR;
            if (e === THREE.OneMinusSrcColorFactor) return Ie.ONE_MINUS_SRC_COLOR;
            if (e === THREE.SrcAlphaFactor) return Ie.SRC_ALPHA;
            if (e === THREE.OneMinusSrcAlphaFactor) return Ie.ONE_MINUS_SRC_ALPHA;
            if (e === THREE.DstAlphaFactor) return Ie.DST_ALPHA;
            if (e === THREE.OneMinusDstAlphaFactor) return Ie.ONE_MINUS_DST_ALPHA;
            if (e === THREE.DstColorFactor) return Ie.DST_COLOR;
            if (e === THREE.OneMinusDstColorFactor) return Ie.ONE_MINUS_DST_COLOR;
            if (e === THREE.SrcAlphaSaturateFactor) return Ie.SRC_ALPHA_SATURATE;
            if (t = Be.get("WEBGL_compressed_texture_s3tc"), null !== t) {
                if (e === THREE.RGB_S3TC_DXT1_Format) return t.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (e === THREE.RGBA_S3TC_DXT1_Format) return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (e === THREE.RGBA_S3TC_DXT3_Format) return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (e === THREE.RGBA_S3TC_DXT5_Format) return t.COMPRESSED_RGBA_S3TC_DXT5_EXT
            }
            if (t = Be.get("WEBGL_compressed_texture_pvrtc"), null !== t) {
                if (e === THREE.RGB_PVRTC_4BPPV1_Format) return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                if (e === THREE.RGB_PVRTC_2BPPV1_Format) return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                if (e === THREE.RGBA_PVRTC_4BPPV1_Format) return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                if (e === THREE.RGBA_PVRTC_2BPPV1_Format) return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
            }
            if (t = Be.get("EXT_blend_minmax"), null !== t) {
                if (e === THREE.MinEquation) return t.MIN_EXT;
                if (e === THREE.MaxEquation) return t.MAX_EXT
            }
            return 0
        }
        e = e || {};
        var K = void 0 !== e.canvas ? e.canvas : document.createElement("canvas"),
            Q = void 0 !== e.context ? e.context : null,
            J = K.width,
            ee = K.height,
            te = 1,
            ne = void 0 !== e.alpha && e.alpha,
            ie = void 0 === e.depth || e.depth,
            re = void 0 === e.stencil || e.stencil,
            oe = void 0 !== e.antialias && e.antialias,
            ae = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,
            se = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,
            le = new THREE.Color(0),
            ce = 0,
            ue = [],
            he = [],
            de = -1,
            pe = [],
            fe = -1,
            me = new Float32Array(8),
            Ee = [],
            ge = [];
        this.domElement = K, this.context = null, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.gammaFactor = 2, this.gammaInput = !1, this.gammaOutput = !1, this.maxMorphTargets = 8, this.maxMorphNormals = 4, this.autoScaleCubemaps = !0;
        var ve = this,
            ye = null,
            Te = null,
            xe = -1,
            Re = "",
            we = null,
            be = 0,
            He = 0,
            Se = 0,
            _e = K.width,
            Me = K.height,
            Ce = 0,
            Ae = 0,
            Pe = new THREE.Frustum,
            ke = new THREE.Matrix4,
            Le = new THREE.Vector3,
            De = new THREE.Vector3,
            Oe = !0,
            Fe = {
                ambient: [0, 0, 0],
                directional: {
                    length: 0,
                    colors: [],
                    positions: []
                },
                point: {
                    length: 0,
                    colors: [],
                    positions: [],
                    distances: [],
                    decays: []
                },
                spot: {
                    length: 0,
                    colors: [],
                    positions: [],
                    distances: [],
                    directions: [],
                    anglesCos: [],
                    exponents: [],
                    decays: []
                },
                hemi: {
                    length: 0,
                    skyColors: [],
                    groundColors: [],
                    positions: []
                }
            },
            je = {
                geometries: 0,
                textures: 0
            },
            Ve = {
                calls: 0,
                vertices: 0,
                faces: 0,
                points: 0
            };
        this.info = {
            render: Ve,
            memory: je,
            programs: null
        };
        var Ie;
        try {
            var Ne = {
                alpha: ne,
                depth: ie,
                stencil: re,
                antialias: oe,
                premultipliedAlpha: ae,
                preserveDrawingBuffer: se
            };
            if (Ie = Q || K.getContext("webgl", Ne) || K.getContext("experimental-webgl", Ne), null === Ie) throw null !== K.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
            K.addEventListener("webglcontextlost", r, !1)
        } catch (e) {
            console.error("THREE.WebGLRenderer: " + e)
        }
        var Be = new THREE.WebGLExtensions(Ie);
        Be.get("OES_texture_float"), Be.get("OES_texture_float_linear"), Be.get("OES_texture_half_float"), Be.get("OES_texture_half_float_linear"), Be.get("OES_standard_derivatives"), Be.get("ANGLE_instanced_arrays"), Be.get("OES_element_index_uint") && (THREE.BufferGeometry.MaxIndex = 4294967296);
        var ze = new THREE.WebGLCapabilities(Ie, Be, e),
            Ue = new THREE.WebGLState(Ie, Be, Z),
            Ge = new THREE.WebGLProperties,
            We = new THREE.WebGLObjects(Ie, Ge, this.info),
            qe = new THREE.WebGLPrograms(this, ze);
        this.info.programs = qe.programs;
        var Xe = new THREE.WebGLBufferRenderer(Ie, Be, Ve),
            $e = new THREE.WebGLIndexedBufferRenderer(Ie, Be, Ve);
        n(), this.context = Ie, this.capabilities = ze, this.extensions = Be, this.state = Ue;
        var Ye = new THREE.WebGLShadowMap(this, ue, We);
        this.shadowMap = Ye;
        var Ze = new THREE.SpritePlugin(this, Ee),
            Ke = new THREE.LensFlarePlugin(this, ge);
        this.getContext = function() {
            return Ie
        }, this.getContextAttributes = function() {
            return Ie.getContextAttributes()
        }, this.forceContextLoss = function() {
            Be.get("WEBGL_lose_context").loseContext()
        }, this.getMaxAnisotropy = function() {
            var e;
            return function t() {
                if (void 0 !== e) return e;
                var n = Be.get("EXT_texture_filter_anisotropic");
                return e = null !== n ? Ie.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
            }
        }(), this.getPrecision = function() {
            return ze.precision
        }, this.getPixelRatio = function() {
            return te
        }, this.setPixelRatio = function(e) {
            void 0 !== e && (te = e)
        }, this.getSize = function() {
            return {
                width: J,
                height: ee
            }
        }, this.setSize = function(e, t, n) {
            J = e, ee = t, K.width = e * te, K.height = t * te, n !== !1 && (K.style.width = e + "px", K.style.height = t + "px"), this.setViewport(0, 0, e, t)
        }, this.setViewport = function(e, t, n, i) {
            He = e * te, Se = t * te, _e = n * te, Me = i * te, Ie.viewport(He, Se, _e, Me)
        }, this.getViewport = function(e) {
            e.x = He / te, e.y = Se / te, e.z = _e / te, e.w = Me / te
        }, this.setScissor = function(e, t, n, i) {
            Ie.scissor(e * te, t * te, n * te, i * te)
        }, this.enableScissorTest = function(e) {
            Ue.setScissorTest(e)
        }, this.getClearColor = function() {
            return le
        }, this.setClearColor = function(e, n) {
            le.set(e), ce = void 0 !== n ? n : 1, t(le.r, le.g, le.b, ce)
        }, this.getClearAlpha = function() {
            return ce
        }, this.setClearAlpha = function(e) {
            ce = e, t(le.r, le.g, le.b, ce)
        }, this.clear = function(e, t, n) {
            var i = 0;
            (void 0 === e || e) && (i |= Ie.COLOR_BUFFER_BIT), (void 0 === t || t) && (i |= Ie.DEPTH_BUFFER_BIT), (void 0 === n || n) && (i |= Ie.STENCIL_BUFFER_BIT), Ie.clear(i)
        }, this.clearColor = function() {
            Ie.clear(Ie.COLOR_BUFFER_BIT)
        }, this.clearDepth = function() {
            Ie.clear(Ie.DEPTH_BUFFER_BIT)
        }, this.clearStencil = function() {
            Ie.clear(Ie.STENCIL_BUFFER_BIT)
        }, this.clearTarget = function(e, t, n, i) {
            this.setRenderTarget(e), this.clear(t, n, i)
        }, this.resetGLState = i, this.dispose = function() {
            K.removeEventListener("webglcontextlost", r, !1)
        }, this.renderBufferImmediate = function(e, t, n) {
            Ue.initAttributes();
            var i = Ge.get(e);
            e.hasPositions && !i.position && (i.position = Ie.createBuffer()), e.hasNormals && !i.normal && (i.normal = Ie.createBuffer()), e.hasUvs && !i.uv && (i.uv = Ie.createBuffer()), e.hasColors && !i.color && (i.color = Ie.createBuffer());
            var r = t.getAttributes();
            if (e.hasPositions && (Ie.bindBuffer(Ie.ARRAY_BUFFER, i.position), Ie.bufferData(Ie.ARRAY_BUFFER, e.positionArray, Ie.DYNAMIC_DRAW), Ue.enableAttribute(r.position), Ie.vertexAttribPointer(r.position, 3, Ie.FLOAT, !1, 0, 0)), e.hasNormals) {
                if (Ie.bindBuffer(Ie.ARRAY_BUFFER, i.normal), "MeshPhongMaterial" !== n.type && n.shading === THREE.FlatShading)
                    for (var o = 0, a = 3 * e.count; o < a; o += 9) {
                        var s = e.normalArray,
                            l = (s[o + 0] + s[o + 3] + s[o + 6]) / 3,
                            c = (s[o + 1] + s[o + 4] + s[o + 7]) / 3,
                            u = (s[o + 2] + s[o + 5] + s[o + 8]) / 3;
                        s[o + 0] = l, s[o + 1] = c, s[o + 2] = u, s[o + 3] = l, s[o + 4] = c, s[o + 5] = u, s[o + 6] = l, s[o + 7] = c, s[o + 8] = u
                    }
                Ie.bufferData(Ie.ARRAY_BUFFER, e.normalArray, Ie.DYNAMIC_DRAW), Ue.enableAttribute(r.normal), Ie.vertexAttribPointer(r.normal, 3, Ie.FLOAT, !1, 0, 0)
            }
            e.hasUvs && n.map && (Ie.bindBuffer(Ie.ARRAY_BUFFER, i.uv), Ie.bufferData(Ie.ARRAY_BUFFER, e.uvArray, Ie.DYNAMIC_DRAW), Ue.enableAttribute(r.uv), Ie.vertexAttribPointer(r.uv, 2, Ie.FLOAT, !1, 0, 0)), e.hasColors && n.vertexColors !== THREE.NoColors && (Ie.bindBuffer(Ie.ARRAY_BUFFER, i.color), Ie.bufferData(Ie.ARRAY_BUFFER, e.colorArray, Ie.DYNAMIC_DRAW), Ue.enableAttribute(r.color), Ie.vertexAttribPointer(r.color, 3, Ie.FLOAT, !1, 0, 0)), Ue.disableUnusedAttributes(), Ie.drawArrays(Ie.TRIANGLES, 0, e.count), e.count = 0
        }, this.renderBufferDirect = function(e, t, n, i, r, o, a) {
            T(r);
            var s = R(e, t, n, r, o),
                l = !1,
                c = i.id + "_" + s.id + "_" + r.wireframe;
            c !== Re && (Re = c, l = !0);
            var u = o.morphTargetInfluences;
            if (void 0 !== u) {
                for (var h = [], f = 0, m = u.length; f < m; f++) {
                    var E = u[f];
                    h.push([E, f])
                }
                h.sort(p), h.length > 8 && (h.length = 8);
                for (var g = i.morphAttributes, f = 0, m = h.length; f < m; f++) {
                    var E = h[f];
                    if (me[f] = E[0], 0 !== E[0]) {
                        var v = E[1];
                        r.morphTargets === !0 && g.position && i.addAttribute("morphTarget" + f, g.position[v]), r.morphNormals === !0 && g.normal && i.addAttribute("morphNormal" + f, g.normal[v])
                    } else r.morphTargets === !0 && i.removeAttribute("morphTarget" + f), r.morphNormals === !0 && i.removeAttribute("morphNormal" + f)
                }
                var y = s.getUniforms();
                null !== y.morphTargetInfluences && Ie.uniform1fv(y.morphTargetInfluences, me), l = !0
            }
            var v = i.index,
                x = i.attributes.position;
            r.wireframe === !0 && (v = We.getWireframeAttribute(i));
            var w;
            null !== v ? (w = $e, w.setIndex(v)) : w = Xe, l && (d(r, s, i), null !== v && Ie.bindBuffer(Ie.ELEMENT_ARRAY_BUFFER, We.getAttributeBuffer(v)));
            var b = 0,
                H = 1 / 0;
            null !== v ? H = v.count : void 0 !== x && (H = x.count);
            var S = i.drawRange.start,
                _ = i.drawRange.count,
                M = null !== a ? a.start : 0,
                C = null !== a ? a.count : 1 / 0,
                A = Math.max(b, S, M),
                P = Math.min(b + H, S + _, M + C) - 1,
                k = Math.max(0, P - A + 1);
            if (o instanceof THREE.Mesh) r.wireframe === !0 ? (Ue.setLineWidth(r.wireframeLinewidth * te), w.setMode(Ie.LINES)) : w.setMode(Ie.TRIANGLES), i instanceof THREE.InstancedBufferGeometry && i.maxInstancedCount > 0 ? w.renderInstances(i) : w.render(A, k);
            else if (o instanceof THREE.Line) {
                var L = r.linewidth;
                void 0 === L && (L = 1), Ue.setLineWidth(L * te), o instanceof THREE.LineSegments ? w.setMode(Ie.LINES) : w.setMode(Ie.LINE_STRIP), w.render(A, k)
            } else o instanceof THREE.Points && (w.setMode(Ie.POINTS), w.render(A, k))
        }, this.render = function(e, t, n, i) {
            if (t instanceof THREE.Camera == !1) return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            var r = e.fog;
            if (Re = "", xe = -1, we = null, Oe = !0, e.autoUpdate === !0 && e.updateMatrixWorld(), null === t.parent && t.updateMatrixWorld(), t.matrixWorldInverse.getInverse(t.matrixWorld), ke.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), Pe.setFromMatrix(ke), ue.length = 0, de = -1, fe = -1, Ee.length = 0, ge.length = 0, g(e, t), he.length = de + 1, pe.length = fe + 1, ve.sortObjects === !0 && (he.sort(f), pe.sort(m)), Ye.render(e), Ve.calls = 0, Ve.vertices = 0, Ve.faces = 0, Ve.points = 0, this.setRenderTarget(n), (this.autoClear || i) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil), e.overrideMaterial) {
                var o = e.overrideMaterial;
                v(he, t, ue, r, o), v(pe, t, ue, r, o)
            } else Ue.setBlending(THREE.NoBlending), v(he, t, ue, r), v(pe, t, ue, r);
            if (Ze.render(e, t), Ke.render(e, t, Ce, Ae), n) {
                var a = n.texture,
                    s = N(n);
                a.generateMipmaps && s && a.minFilter !== THREE.NearestFilter && a.minFilter !== THREE.LinearFilter && X(n)
            }
            Ue.setDepthTest(!0), Ue.setDepthWrite(!0), Ue.setColorWrite(!0)
        }, this.setFaceCulling = function(e, t) {
            e === THREE.CullFaceNone ? Ue.disable(Ie.CULL_FACE) : (t === THREE.FrontFaceDirectionCW ? Ie.frontFace(Ie.CW) : Ie.frontFace(Ie.CCW), e === THREE.CullFaceBack ? Ie.cullFace(Ie.BACK) : e === THREE.CullFaceFront ? Ie.cullFace(Ie.FRONT) : Ie.cullFace(Ie.FRONT_AND_BACK), Ue.enable(Ie.CULL_FACE))
        }, this.setTexture = function(e, t) {
            var n = Ge.get(e);
            if (e.version > 0 && n.__version !== e.version) {
                var i = e.image;
                return void 0 === i ? void console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined", e) : i.complete === !1 ? void console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete", e) : void V(n, e, t)
            }
            Ue.activeTexture(Ie.TEXTURE0 + t), Ue.bindTexture(Ie.TEXTURE_2D, n.__webglTexture)
        }, this.setRenderTarget = function(e) {
            var t = e instanceof THREE.WebGLRenderTargetCube;
            if (e && void 0 === Ge.get(e).__webglFramebuffer) {
                var n = Ge.get(e),
                    i = Ge.get(e.texture);
                void 0 === e.depthBuffer && (e.depthBuffer = !0), void 0 === e.stencilBuffer && (e.stencilBuffer = !0), e.addEventListener("dispose", a), i.__webglTexture = Ie.createTexture(), je.textures++;
                var r = N(e),
                    o = Z(e.texture.format),
                    s = Z(e.texture.type);
                if (t) {
                    n.__webglFramebuffer = [], n.__webglRenderbuffer = [], Ue.bindTexture(Ie.TEXTURE_CUBE_MAP, i.__webglTexture), j(Ie.TEXTURE_CUBE_MAP, e.texture, r);
                    for (var l = 0; l < 6; l++) n.__webglFramebuffer[l] = Ie.createFramebuffer(), n.__webglRenderbuffer[l] = Ie.createRenderbuffer(), Ue.texImage2D(Ie.TEXTURE_CUBE_MAP_POSITIVE_X + l, 0, o, e.width, e.height, 0, o, s, null), W(n.__webglFramebuffer[l], e, Ie.TEXTURE_CUBE_MAP_POSITIVE_X + l), q(n.__webglRenderbuffer[l], e);
                    e.texture.generateMipmaps && r && Ie.generateMipmap(Ie.TEXTURE_CUBE_MAP)
                } else n.__webglFramebuffer = Ie.createFramebuffer(), e.shareDepthFrom ? n.__webglRenderbuffer = e.shareDepthFrom.__webglRenderbuffer : n.__webglRenderbuffer = Ie.createRenderbuffer(), Ue.bindTexture(Ie.TEXTURE_2D, i.__webglTexture), j(Ie.TEXTURE_2D, e.texture, r), Ue.texImage2D(Ie.TEXTURE_2D, 0, o, e.width, e.height, 0, o, s, null), W(n.__webglFramebuffer, e, Ie.TEXTURE_2D), e.shareDepthFrom ? e.depthBuffer && !e.stencilBuffer ? Ie.framebufferRenderbuffer(Ie.FRAMEBUFFER, Ie.DEPTH_ATTACHMENT, Ie.RENDERBUFFER, n.__webglRenderbuffer) : e.depthBuffer && e.stencilBuffer && Ie.framebufferRenderbuffer(Ie.FRAMEBUFFER, Ie.DEPTH_STENCIL_ATTACHMENT, Ie.RENDERBUFFER, n.__webglRenderbuffer) : q(n.__webglRenderbuffer, e), e.texture.generateMipmaps && r && Ie.generateMipmap(Ie.TEXTURE_2D);
                t ? Ue.bindTexture(Ie.TEXTURE_CUBE_MAP, null) : Ue.bindTexture(Ie.TEXTURE_2D, null), Ie.bindRenderbuffer(Ie.RENDERBUFFER, null), Ie.bindFramebuffer(Ie.FRAMEBUFFER, null)
            }
            var c, u, h, d, p;
            if (e) {
                var n = Ge.get(e);
                c = t ? n.__webglFramebuffer[e.activeCubeFace] : n.__webglFramebuffer, u = e.width, h = e.height, d = 0, p = 0
            } else c = null, u = _e, h = Me, d = He, p = Se;
            if (c !== Te && (Ie.bindFramebuffer(Ie.FRAMEBUFFER, c), Ie.viewport(d, p, u, h), Te = c), t) {
                var i = Ge.get(e.texture);
                Ie.framebufferTexture2D(Ie.FRAMEBUFFER, Ie.COLOR_ATTACHMENT0, Ie.TEXTURE_CUBE_MAP_POSITIVE_X + e.activeCubeFace, i.__webglTexture, 0)
            }
            Ce = u, Ae = h
        }, this.readRenderTargetPixels = function(e, t, n, i, r, o) {
            if (e instanceof THREE.WebGLRenderTarget == !1) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
            var a = Ge.get(e).__webglFramebuffer;
            if (a) {
                var s = !1;
                a !== Te && (Ie.bindFramebuffer(Ie.FRAMEBUFFER, a), s = !0);
                try {
                    var l = e.texture;
                    if (l.format !== THREE.RGBAFormat && Z(l.format) !== Ie.getParameter(Ie.IMPLEMENTATION_COLOR_READ_FORMAT)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                    if (!(l.type === THREE.UnsignedByteType || Z(l.type) === Ie.getParameter(Ie.IMPLEMENTATION_COLOR_READ_TYPE) || l.type === THREE.FloatType && Be.get("WEBGL_color_buffer_float") || l.type === THREE.HalfFloatType && Be.get("EXT_color_buffer_half_float"))) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                    Ie.checkFramebufferStatus(Ie.FRAMEBUFFER) === Ie.FRAMEBUFFER_COMPLETE ? Ie.readPixels(t, n, i, r, Z(l.format), Z(l.type), o) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                } finally {
                    s && Ie.bindFramebuffer(Ie.FRAMEBUFFER, Te)
                }
            }
        }, this.supportsFloatTextures = function() {
            return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), Be.get("OES_texture_float")
        }, this.supportsHalfFloatTextures = function() {
            return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), Be.get("OES_texture_half_float")
        }, this.supportsStandardDerivatives = function() {
            return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), Be.get("OES_standard_derivatives")
        }, this.supportsCompressedTextureS3TC = function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), Be.get("WEBGL_compressed_texture_s3tc")
        }, this.supportsCompressedTexturePVRTC = function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), Be.get("WEBGL_compressed_texture_pvrtc")
        }, this.supportsBlendMinMax = function() {
            return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), Be.get("EXT_blend_minmax")
        }, this.supportsVertexTextures = function() {
            return ze.vertexTextures
        }, this.supportsInstancedArrays = function() {
            return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), Be.get("ANGLE_instanced_arrays")
        }, this.initMaterial = function() {
            console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
        }, this.addPrePlugin = function() {
            console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
        }, this.addPostPlugin = function() {
            console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
        }, this.updateShadowMap = function() {
            console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
        }, Object.defineProperties(this, {
            shadowMapEnabled: {
                get: function() {
                    return Ye.enabled
                },
                set: function(e) {
                    console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), Ye.enabled = e
                }
            },
            shadowMapType: {
                get: function() {
                    return Ye.type
                },
                set: function(e) {
                    console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), Ye.type = e
                }
            },
            shadowMapCullFace: {
                get: function() {
                    return Ye.cullFace
                },
                set: function(e) {
                    console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."), Ye.cullFace = e
                }
            },
            shadowMapDebug: {
                get: function() {
                    return Ye.debug
                },
                set: function(e) {
                    console.warn("THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug."), Ye.debug = e
                }
            }
        })
    }, THREE.WebGLRenderTarget = function(e, t, n) {
        this.uuid = THREE.Math.generateUUID(), this.width = e, this.height = t, n = n || {}, void 0 === n.minFilter && (n.minFilter = THREE.LinearFilter), this.texture = new THREE.Texture(void 0, void 0, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy), this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer, this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer, this.shareDepthFrom = void 0 !== n.shareDepthFrom ? n.shareDepthFrom : null
    }, THREE.WebGLRenderTarget.prototype = {
        constructor: THREE.WebGLRenderTarget,
        get wrapS() {
            return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS
        },
        set wrapS(e) {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = e
        },
        get wrapT() {
            return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT
        },
        set wrapT(e) {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = e
        },
        get magFilter() {
            return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter
        },
        set magFilter(e) {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = e
        },
        get minFilter() {
            return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter
        },
        set minFilter(e) {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = e
        },
        get anisotropy() {
            return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy
        },
        set anisotropy(e) {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = e
        },
        get offset() {
            return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset
        },
        set offset(e) {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = e
        },
        get repeat() {
            return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat
        },
        set repeat(e) {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = e
        },
        get format() {
            return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format
        },
        set format(e) {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = e
        },
        get type() {
            return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type
        },
        set type(e) {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = e
        },
        get generateMipmaps() {
            return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps
        },
        set generateMipmaps(e) {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = e
        },
        setSize: function(e, t) {
            this.width === e && this.height === t || (this.width = e, this.height = t, this.dispose())
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.width = e.width, this.height = e.height, this.texture = e.texture.clone(), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.shareDepthFrom = e.shareDepthFrom, this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }, THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype), THREE.WebGLRenderTargetCube = function(e, t, n) {
        THREE.WebGLRenderTarget.call(this, e, t, n), this.activeCubeFace = 0
    }, THREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype), THREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube, THREE.WebGLBufferRenderer = function(e, t, n) {
        function i(e) {
            a = e
        }

        function r(t, i) {
            e.drawArrays(a, t, i), n.calls++, n.vertices += i, a === e.TRIANGLES && (n.faces += i / 3)
        }

        function o(e) {
            var n = t.get("ANGLE_instanced_arrays");
            if (null === n) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            var i = e.attributes.position;
            i instanceof THREE.InterleavedBufferAttribute ? n.drawArraysInstancedANGLE(a, 0, i.data.count, e.maxInstancedCount) : n.drawArraysInstancedANGLE(a, 0, i.count, e.maxInstancedCount)
        }
        var a;
        this.setMode = i, this.render = r, this.renderInstances = o
    }, THREE.WebGLIndexedBufferRenderer = function(e, t, n) {
        function i(e) {
            s = e
        }

        function r(n) {
            n.array instanceof Uint32Array && t.get("OES_element_index_uint") ? (l = e.UNSIGNED_INT, c = 4) : (l = e.UNSIGNED_SHORT, c = 2)
        }

        function o(t, i) {
            e.drawElements(s, i, l, t * c), n.calls++, n.vertices += i, s === e.TRIANGLES && (n.faces += i / 3)
        }

        function a(e) {
            var n = t.get("ANGLE_instanced_arrays");
            if (null === n) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            var i = e.index;
            n.drawElementsInstancedANGLE(s, i.array.length, l, 0, e.maxInstancedCount)
        }
        var s, l, c;
        this.setMode = i, this.setIndex = r, this.render = o, this.renderInstances = a
    }, THREE.WebGLExtensions = function(e) {
        var t = {};
        this.get = function(n) {
            if (void 0 !== t[n]) return t[n];
            var i;
            switch (n) {
                case "EXT_texture_filter_anisotropic":
                    i = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    i = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    i = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                default:
                    i = e.getExtension(n)
            }
            return null === i && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), t[n] = i, i
        }
    }, THREE.WebGLCapabilities = function(e, t, n) {
        function i(t) {
            if ("highp" === t) {
                if (e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).precision > 0) return "highp";
                t = "mediump"
            }
            return "mediump" === t && e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
        }
        this.getMaxPrecision = i, this.precision = void 0 !== n.precision ? n.precision : "highp", this.logarithmicDepthBuffer = void 0 !== n.logarithmicDepthBuffer && n.logarithmicDepthBuffer, this.maxTextures = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS), this.maxVertexTextures = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS), this.maxTextureSize = e.getParameter(e.MAX_TEXTURE_SIZE), this.maxCubemapSize = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE), this.maxAttributes = e.getParameter(e.MAX_VERTEX_ATTRIBS), this.maxVertexUniforms = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS), this.maxVaryings = e.getParameter(e.MAX_VARYING_VECTORS), this.maxFragmentUniforms = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS), this.vertexTextures = this.maxVertexTextures > 0, this.floatFragmentTextures = !!t.get("OES_texture_float"), this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;
        var r = i(this.precision);
        r !== this.precision && (console.warn("THREE.WebGLRenderer:", this.precision, "not supported, using", r, "instead."), this.precision = r), this.logarithmicDepthBuffer && (this.logarithmicDepthBuffer = !!t.get("EXT_frag_depth"))
    }, THREE.WebGLGeometries = function(e, t, n) {
        function i(e) {
            var t = e.geometry;
            if (void 0 !== c[t.id]) return c[t.id];
            t.addEventListener("dispose", r);
            var i;
            return t instanceof THREE.BufferGeometry ? i = t : t instanceof THREE.Geometry && (void 0 === t._bufferGeometry && (t._bufferGeometry = (new THREE.BufferGeometry).setFromObject(e)), i = t._bufferGeometry), c[t.id] = i, n.memory.geometries++, i
        }

        function r(e) {
            var i = e.target,
                o = c[i.id];
            s(o.attributes), i.removeEventListener("dispose", r), delete c[i.id];
            var l = t.get(i);
            l.wireframe && a(l.wireframe), n.memory.geometries--
        }

        function o(e) {
            return e instanceof THREE.InterleavedBufferAttribute ? t.get(e.data).__webglBuffer : t.get(e).__webglBuffer
        }

        function a(t) {
            var n = o(t);
            void 0 !== n && (e.deleteBuffer(n), l(t))
        }

        function s(e) {
            for (var t in e) a(e[t])
        }

        function l(e) {
            e instanceof THREE.InterleavedBufferAttribute ? t.delete(e.data) : t.delete(e)
        }
        var c = {};
        this.get = i
    }, THREE.WebGLObjects = function(e, t, n) {
        function i(t) {
            var n = u.get(t);
            t.geometry instanceof THREE.Geometry && n.updateFromObject(t);
            var i = n.index,
                o = n.attributes;
            null !== i && r(i, e.ELEMENT_ARRAY_BUFFER);
            for (var a in o) r(o[a], e.ARRAY_BUFFER);
            var s = n.morphAttributes;
            for (var a in s)
                for (var l = s[a], c = 0, h = l.length; c < h; c++) r(l[c], e.ARRAY_BUFFER);
            return n
        }

        function r(e, n) {
            var i = e instanceof THREE.InterleavedBufferAttribute ? e.data : e,
                r = t.get(i);
            void 0 === r.__webglBuffer ? o(r, i, n) : r.version !== i.version && a(r, i, n)
        }

        function o(t, n, i) {
            t.__webglBuffer = e.createBuffer(), e.bindBuffer(i, t.__webglBuffer);
            var r = n.dynamic ? e.DYNAMIC_DRAW : e.STATIC_DRAW;
            e.bufferData(i, n.array, r), t.version = n.version
        }

        function a(t, n, i) {
            e.bindBuffer(i, t.__webglBuffer), n.dynamic === !1 || n.updateRange.count === -1 ? e.bufferSubData(i, 0, n.array) : 0 === n.updateRange.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (e.bufferSubData(i, n.updateRange.offset * n.array.BYTES_PER_ELEMENT, n.array.subarray(n.updateRange.offset, n.updateRange.offset + n.updateRange.count)), n.updateRange.count = 0), t.version = n.version
        }

        function s(e) {
            return e instanceof THREE.InterleavedBufferAttribute ? t.get(e.data).__webglBuffer : t.get(e).__webglBuffer
        }

        function l(n) {
            var i = t.get(n);
            if (void 0 !== i.wireframe) return i.wireframe;
            var o = [],
                a = n.index,
                s = n.attributes,
                l = s.position;
            if (null !== a)
                for (var u = {}, h = a.array, d = 0, p = h.length; d < p; d += 3) {
                    var f = h[d + 0],
                        m = h[d + 1],
                        E = h[d + 2];
                    c(u, f, m) && o.push(f, m), c(u, m, E) && o.push(m, E), c(u, E, f) && o.push(E, f)
                } else
                    for (var h = s.position.array, d = 0, p = h.length / 3 - 1; d < p; d += 3) {
                        var f = d + 0,
                            m = d + 1,
                            E = d + 2;
                        o.push(f, m, m, E, E, f)
                    }
            var g = l.count > 65535 ? Uint32Array : Uint16Array,
                v = new THREE.BufferAttribute(new g(o), 1);
            return r(v, e.ELEMENT_ARRAY_BUFFER), i.wireframe = v, v
        }

        function c(e, t, n) {
            if (t > n) {
                var i = t;
                t = n, n = i
            }
            var r = e[t];
            return void 0 === r ? (e[t] = [n], !0) : r.indexOf(n) === -1 && (r.push(n), !0)
        }
        var u = new THREE.WebGLGeometries(e, t, n);
        this.getAttributeBuffer = s, this.getWireframeAttribute = l, this.update = i
    }, THREE.WebGLProgram = function() {
        function e(e) {
            var t = [];
            for (var n in e) {
                var i = e[n];
                i !== !1 && t.push("#define " + n + " " + i)
            }
            return t.join("\n")
        }

        function t(e, t, n) {
            for (var i = {}, r = e.getProgramParameter(t, e.ACTIVE_UNIFORMS), o = 0; o < r; o++) {
                var a = e.getActiveUniform(t, o),
                    s = a.name,
                    l = e.getUniformLocation(t, s),
                    c = s.lastIndexOf("[0]");
                c !== -1 && c === s.length - 3 && (i[s.substr(0, c)] = l), i[s] = l
            }
            return i
        }

        function n(e, t, n) {
            for (var i = {}, r = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES), o = 0; o < r; o++) {
                var a = e.getActiveAttrib(t, o),
                    s = a.name;
                i[s] = e.getAttribLocation(t, s)
            }
            return i
        }

        function i(e) {
            return "" !== e
        }
        var r = 0;
        return function o(a, s, l, c) {
            var u = a.context,
                h = l.defines,
                d = l.__webglShader.vertexShader,
                p = l.__webglShader.fragmentShader,
                f = "SHADOWMAP_TYPE_BASIC";
            c.shadowMapType === THREE.PCFShadowMap ? f = "SHADOWMAP_TYPE_PCF" : c.shadowMapType === THREE.PCFSoftShadowMap && (f = "SHADOWMAP_TYPE_PCF_SOFT");
            var m = "ENVMAP_TYPE_CUBE",
                E = "ENVMAP_MODE_REFLECTION",
                g = "ENVMAP_BLENDING_MULTIPLY";
            if (c.envMap) {
                switch (l.envMap.mapping) {
                    case THREE.CubeReflectionMapping:
                    case THREE.CubeRefractionMapping:
                        m = "ENVMAP_TYPE_CUBE";
                        break;
                    case THREE.EquirectangularReflectionMapping:
                    case THREE.EquirectangularRefractionMapping:
                        m = "ENVMAP_TYPE_EQUIREC";
                        break;
                    case THREE.SphericalReflectionMapping:
                        m = "ENVMAP_TYPE_SPHERE"
                }
                switch (l.envMap.mapping) {
                    case THREE.CubeRefractionMapping:
                    case THREE.EquirectangularRefractionMapping:
                        E = "ENVMAP_MODE_REFRACTION"
                }
                switch (l.combine) {
                    case THREE.MultiplyOperation:
                        g = "ENVMAP_BLENDING_MULTIPLY";
                        break;
                    case THREE.MixOperation:
                        g = "ENVMAP_BLENDING_MIX";
                        break;
                    case THREE.AddOperation:
                        g = "ENVMAP_BLENDING_ADD"
                }
            }
            var v = a.gammaFactor > 0 ? a.gammaFactor : 1,
                y = e(h),
                T = u.createProgram(),
                x, R;
            l instanceof THREE.RawShaderMaterial ? (x = "", R = "") : (x = ["precision " + c.precision + " float;", "precision " + c.precision + " int;", "#define SHADER_NAME " + l.__webglShader.name, y, c.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", a.gammaInput ? "#define GAMMA_INPUT" : "", a.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define GAMMA_FACTOR " + v, "#define MAX_DIR_LIGHTS " + c.maxDirLights, "#define MAX_POINT_LIGHTS " + c.maxPointLights, "#define MAX_SPOT_LIGHTS " + c.maxSpotLights, "#define MAX_HEMI_LIGHTS " + c.maxHemiLights, "#define MAX_SHADOWS " + c.maxShadows, "#define MAX_BONES " + c.maxBones, c.map ? "#define USE_MAP" : "", c.envMap ? "#define USE_ENVMAP" : "", c.envMap ? "#define " + E : "", c.lightMap ? "#define USE_LIGHTMAP" : "", c.aoMap ? "#define USE_AOMAP" : "", c.emissiveMap ? "#define USE_EMISSIVEMAP" : "", c.bumpMap ? "#define USE_BUMPMAP" : "", c.normalMap ? "#define USE_NORMALMAP" : "", c.displacementMap && c.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", c.specularMap ? "#define USE_SPECULARMAP" : "", c.alphaMap ? "#define USE_ALPHAMAP" : "", c.vertexColors ? "#define USE_COLOR" : "", c.flatShading ? "#define FLAT_SHADED" : "", c.skinning ? "#define USE_SKINNING" : "", c.useVertexTexture ? "#define BONE_TEXTURE" : "", c.morphTargets ? "#define USE_MORPHTARGETS" : "", c.morphNormals && c.flatShading === !1 ? "#define USE_MORPHNORMALS" : "", c.doubleSided ? "#define DOUBLE_SIDED" : "", c.flipSided ? "#define FLIP_SIDED" : "", c.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", c.shadowMapEnabled ? "#define " + f : "", c.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", c.pointLightShadows > 0 ? "#define POINT_LIGHT_SHADOWS" : "", c.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", c.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", c.logarithmicDepthBuffer && a.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(i).join("\n"), R = [c.bumpMap || c.normalMap || c.flatShading || l.derivatives ? "#extension GL_OES_standard_derivatives : enable" : "", c.logarithmicDepthBuffer && a.extensions.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", "precision " + c.precision + " float;", "precision " + c.precision + " int;", "#define SHADER_NAME " + l.__webglShader.name, y, "#define MAX_DIR_LIGHTS " + c.maxDirLights, "#define MAX_POINT_LIGHTS " + c.maxPointLights, "#define MAX_SPOT_LIGHTS " + c.maxSpotLights, "#define MAX_HEMI_LIGHTS " + c.maxHemiLights, "#define MAX_SHADOWS " + c.maxShadows, c.alphaTest ? "#define ALPHATEST " + c.alphaTest : "", a.gammaInput ? "#define GAMMA_INPUT" : "", a.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define GAMMA_FACTOR " + v, c.useFog && c.fog ? "#define USE_FOG" : "", c.useFog && c.fogExp ? "#define FOG_EXP2" : "", c.map ? "#define USE_MAP" : "", c.envMap ? "#define USE_ENVMAP" : "", c.envMap ? "#define " + m : "", c.envMap ? "#define " + E : "", c.envMap ? "#define " + g : "", c.lightMap ? "#define USE_LIGHTMAP" : "", c.aoMap ? "#define USE_AOMAP" : "", c.emissiveMap ? "#define USE_EMISSIVEMAP" : "", c.bumpMap ? "#define USE_BUMPMAP" : "", c.normalMap ? "#define USE_NORMALMAP" : "", c.specularMap ? "#define USE_SPECULARMAP" : "", c.alphaMap ? "#define USE_ALPHAMAP" : "", c.vertexColors ? "#define USE_COLOR" : "", c.flatShading ? "#define FLAT_SHADED" : "", c.metal ? "#define METAL" : "", c.doubleSided ? "#define DOUBLE_SIDED" : "", c.flipSided ? "#define FLIP_SIDED" : "", c.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", c.shadowMapEnabled ? "#define " + f : "", c.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", c.pointLightShadows > 0 ? "#define POINT_LIGHT_SHADOWS" : "", c.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", c.logarithmicDepthBuffer && a.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "\n"].filter(i).join("\n"));
            var w = x + d,
                b = R + p,
                H = THREE.WebGLShader(u, u.VERTEX_SHADER, w),
                S = THREE.WebGLShader(u, u.FRAGMENT_SHADER, b);
            u.attachShader(T, H), u.attachShader(T, S), void 0 !== l.index0AttributeName ? u.bindAttribLocation(T, 0, l.index0AttributeName) : c.morphTargets === !0 && u.bindAttribLocation(T, 0, "position"), u.linkProgram(T);
            var _ = u.getProgramInfoLog(T),
                M = u.getShaderInfoLog(H),
                C = u.getShaderInfoLog(S),
                A = !0,
                P = !0;
            u.getProgramParameter(T, u.LINK_STATUS) === !1 ? (A = !1, console.error("THREE.WebGLProgram: shader error: ", u.getError(), "gl.VALIDATE_STATUS", u.getProgramParameter(T, u.VALIDATE_STATUS), "gl.getProgramInfoLog", _, M, C)) : "" !== _ ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", _) : "" !== M && "" !== C || (P = !1), P && (this.diagnostics = {
                runnable: A,
                material: l,
                programLog: _,
                vertexShader: {
                    log: M,
                    prefix: x
                },
                fragmentShader: {
                    log: C,
                    prefix: R
                }
            }), u.deleteShader(H), u.deleteShader(S);
            var k;
            this.getUniforms = function() {
                return void 0 === k && (k = t(u, T)), k
            };
            var L;
            return this.getAttributes = function() {
                return void 0 === L && (L = n(u, T)), L
            }, this.destroy = function() {
                u.deleteProgram(T), this.program = void 0
            }, Object.defineProperties(this, {
                uniforms: {
                    get: function() {
                        return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."), this.getUniforms()
                    }
                },
                attributes: {
                    get: function() {
                        return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."), this.getAttributes()
                    }
                }
            }), this.id = r++, this.code = s, this.usedTimes = 1, this.program = T, this.vertexShader = H, this.fragmentShader = S, this
        }
    }(), THREE.WebGLPrograms = function(e, t) {
        function n(e) {
            if (t.floatVertexTextures && e && e.skeleton && e.skeleton.useVertexTexture) return 1024;
            var n = t.maxVertexUniforms,
                i = Math.floor((n - 20) / 4),
                r = i;
            return void 0 !== e && e instanceof THREE.SkinnedMesh && (r = Math.min(e.skeleton.bones.length, r), r < e.skeleton.bones.length && console.warn("WebGLRenderer: too many bones - " + e.skeleton.bones.length + ", this GPU supports just " + r + " (try OpenGL instead of ANGLE)")), r
        }

        function i(e) {
            for (var t = 0, n = 0, i = 0, r = 0, o = 0, a = e.length; o < a; o++) {
                var s = e[o];
                s.visible !== !1 && (s instanceof THREE.DirectionalLight && t++, s instanceof THREE.PointLight && n++, s instanceof THREE.SpotLight && i++, s instanceof THREE.HemisphereLight && r++)
            }
            return {
                directional: t,
                point: n,
                spot: i,
                hemi: r
            }
        }

        function r(e) {
            for (var t = 0, n = 0, i = 0, r = e.length; i < r; i++) {
                var o = e[i];
                o.castShadow && ((o instanceof THREE.SpotLight || o instanceof THREE.DirectionalLight) && t++, o instanceof THREE.PointLight && (t++, n++))
            }
            return {
                maxShadows: t,
                pointLightShadows: n
            }
        }
        var o = [],
            a = {
                MeshDepthMaterial: "depth",
                MeshNormalMaterial: "normal",
                MeshBasicMaterial: "basic",
                MeshLambertMaterial: "lambert",
                MeshPhongMaterial: "phong",
                LineBasicMaterial: "basic",
                LineDashedMaterial: "dashed",
                PointsMaterial: "points"
            },
            s = ["precision", "supportsVertexTextures", "map", "envMap", "envMapMode", "lightMap", "aoMap", "emissiveMap", "bumpMap", "normalMap", "displacementMap", "specularMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "maxDirLights", "maxPointLights", "maxSpotLights", "maxHemiLights", "maxShadows", "shadowMapEnabled", "pointLightShadows", "shadowMapType", "shadowMapDebug", "alphaTest", "metal", "doubleSided", "flipSided"];
        this.getParameters = function(o, s, l, c) {
            var u = a[o.type],
                h = i(s),
                d = r(s),
                p = n(c),
                f = e.getPrecision();
            null !== o.precision && (f = t.getMaxPrecision(o.precision), f !== o.precision && console.warn("THREE.WebGLRenderer.initMaterial:", o.precision, "not supported, using", f, "instead."));
            var m = {
                shaderID: u,
                precision: f,
                supportsVertexTextures: t.vertexTextures,
                map: !!o.map,
                envMap: !!o.envMap,
                envMapMode: o.envMap && o.envMap.mapping,
                lightMap: !!o.lightMap,
                aoMap: !!o.aoMap,
                emissiveMap: !!o.emissiveMap,
                bumpMap: !!o.bumpMap,
                normalMap: !!o.normalMap,
                displacementMap: !!o.displacementMap,
                specularMap: !!o.specularMap,
                alphaMap: !!o.alphaMap,
                combine: o.combine,
                vertexColors: o.vertexColors,
                fog: l,
                useFog: o.fog,
                fogExp: l instanceof THREE.FogExp2,
                flatShading: o.shading === THREE.FlatShading,
                sizeAttenuation: o.sizeAttenuation,
                logarithmicDepthBuffer: t.logarithmicDepthBuffer,
                skinning: o.skinning,
                maxBones: p,
                useVertexTexture: t.floatVertexTextures && c && c.skeleton && c.skeleton.useVertexTexture,
                morphTargets: o.morphTargets,
                morphNormals: o.morphNormals,
                maxMorphTargets: e.maxMorphTargets,
                maxMorphNormals: e.maxMorphNormals,
                maxDirLights: h.directional,
                maxPointLights: h.point,
                maxSpotLights: h.spot,
                maxHemiLights: h.hemi,
                maxShadows: d.maxShadows,
                pointLightShadows: d.pointLightShadows,
                shadowMapEnabled: e.shadowMap.enabled && c.receiveShadow && d.maxShadows > 0,
                shadowMapType: e.shadowMap.type,
                shadowMapDebug: e.shadowMap.debug,
                alphaTest: o.alphaTest,
                metal: o.metal,
                doubleSided: o.side === THREE.DoubleSide,
                flipSided: o.side === THREE.BackSide
            };
            return m
        }, this.getProgramCode = function(e, t) {
            var n = [];
            if (t.shaderID ? n.push(t.shaderID) : (n.push(e.fragmentShader), n.push(e.vertexShader)), void 0 !== e.defines)
                for (var i in e.defines) n.push(i), n.push(e.defines[i]);
            for (var r = 0; r < s.length; r++) {
                var o = s[r];
                n.push(o), n.push(t[o])
            }
            return n.join()
        }, this.acquireProgram = function(t, n, i) {
            for (var r, a = 0, s = o.length; a < s; a++) {
                var l = o[a];
                if (l.code === i) {
                    r = l, ++r.usedTimes;
                    break
                }
            }
            return void 0 === r && (r = new THREE.WebGLProgram(e, i, t, n), o.push(r)), r
        }, this.releaseProgram = function(e) {
            if (0 === --e.usedTimes) {
                var t = o.indexOf(e);
                o[t] = o[o.length - 1], o.pop(), e.destroy()
            }
        }, this.programs = o
    }, THREE.WebGLProperties = function() {
        var e = {};
        this.get = function(t) {
            var n = t.uuid,
                i = e[n];
            return void 0 === i && (i = {}, e[n] = i), i
        }, this.delete = function(t) {
            delete e[t.uuid]
        }, this.clear = function() {
            e = {}
        }
    }, THREE.WebGLShader = function() {
        function e(e) {
            for (var t = e.split("\n"), n = 0; n < t.length; n++) t[n] = n + 1 + ": " + t[n];
            return t.join("\n")
        }
        return function t(n, i, r) {
            var o = n.createShader(i);
            return n.shaderSource(o, r), n.compileShader(o), n.getShaderParameter(o, n.COMPILE_STATUS) === !1 && console.error("THREE.WebGLShader: Shader couldn't compile."), "" !== n.getShaderInfoLog(o) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", i === n.VERTEX_SHADER ? "vertex" : "fragment", n.getShaderInfoLog(o), e(r)), o
        }
    }(), THREE.WebGLShadowMap = function(e, t, n) {
        function i(e, t, n, i) {
            var r = e.geometry,
                o = null,
                a = g,
                s = e.customDepthMaterial;
            if (n && (a = v, s = e.customDistanceMaterial), s) o = s;
            else {
                var l = void 0 !== r.morphTargets && r.morphTargets.length > 0 && t.morphTargets,
                    c = e instanceof THREE.SkinnedMesh && t.skinning,
                    u = 0;
                l && (u |= f), c && (u |= m), o = a[u]
            }
            return o.visible = t.visible, o.wireframe = t.wireframe, o.wireframeLinewidth = t.wireframeLinewidth, n && void 0 !== o.uniforms.lightPos && o.uniforms.lightPos.value.copy(i), o
        }

        function r(e, t) {
            if (e.visible !== !1) {
                if ((e instanceof THREE.Mesh || e instanceof THREE.Line || e instanceof THREE.Points) && e.castShadow && (e.frustumCulled === !1 || s.intersectsObject(e) === !0)) {
                    var n = e.material;
                    n.visible === !0 && (e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse, e.matrixWorld), p.push(e))
                }
                for (var i = e.children, o = 0, a = i.length; o < a; o++) r(i[o], t)
            }
        }
        for (var o = e.context, a = e.state, s = new THREE.Frustum, l = new THREE.Matrix4, c = new THREE.Vector3, u = new THREE.Vector3, h = new THREE.Vector3, d = new THREE.Vector3, p = [], f = 1, m = 2, E = (f | m) + 1, g = new Array(E), v = new Array(E), y = [new THREE.Vector3(1, 0, 0), new THREE.Vector3(-1, 0, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, -1, 0)], T = [new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1)], x = [new THREE.Vector4, new THREE.Vector4, new THREE.Vector4, new THREE.Vector4, new THREE.Vector4, new THREE.Vector4], R = new THREE.Vector4, w = THREE.ShaderLib.depthRGBA, b = THREE.UniformsUtils.clone(w.uniforms), H = THREE.ShaderLib.distanceRGBA, S = THREE.UniformsUtils.clone(H.uniforms), _ = 0; _ !== E; ++_) {
            var M = 0 !== (_ & f),
                C = 0 !== (_ & m),
                A = new THREE.ShaderMaterial({
                    uniforms: b,
                    vertexShader: w.vertexShader,
                    fragmentShader: w.fragmentShader,
                    morphTargets: M,
                    skinning: C
                });
            A._shadowPass = !0, g[_] = A;
            var P = new THREE.ShaderMaterial({
                uniforms: S,
                vertexShader: H.vertexShader,
                fragmentShader: H.fragmentShader,
                morphTargets: M,
                skinning: C
            });
            P._shadowPass = !0, v[_] = P
        }
        var k = this;
        this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = THREE.PCFShadowMap, this.cullFace = THREE.CullFaceFront, this.render = function(c) {
            var u, f;
            if (k.enabled !== !1 && (k.autoUpdate !== !1 || k.needsUpdate !== !1)) {
                o.clearColor(1, 1, 1, 1), a.disable(o.BLEND), a.enable(o.CULL_FACE), o.frontFace(o.CCW), o.cullFace(k.cullFace === THREE.CullFaceFront ? o.FRONT : o.BACK), a.setDepthTest(!0), e.getViewport(R);
                for (var m = 0, E = t.length; m < E; m++) {
                    var g = t[m];
                    if (g.castShadow === !0) {
                        var v = g.shadow,
                            w = v.camera,
                            b = v.mapSize;
                        if (g instanceof THREE.PointLight) {
                            u = 6, f = !0;
                            var H = b.x / 4,
                                S = b.y / 2;
                            x[0].set(2 * H, S, H, S), x[1].set(0, S, H, S), x[2].set(3 * H, S, H, S), x[3].set(H, S, H, S), x[4].set(3 * H, 0, H, S), x[5].set(H, 0, H, S)
                        } else u = 1, f = !1;
                        if (null === v.map) {
                            var _ = THREE.LinearFilter;
                            k.type === THREE.PCFSoftShadowMap && (_ = THREE.NearestFilter);
                            var M = {
                                minFilter: _,
                                magFilter: _,
                                format: THREE.RGBAFormat
                            };
                            v.map = new THREE.WebGLRenderTarget(b.x, b.y, M), v.matrix = new THREE.Matrix4, g instanceof THREE.SpotLight && (w.aspect = b.x / b.y), w.updateProjectionMatrix()
                        }
                        var C = v.map,
                            A = v.matrix;
                        d.setFromMatrixPosition(g.matrixWorld), w.position.copy(d), e.setRenderTarget(C), e.clear();
                        for (var P = 0; P < u; P++) {
                            if (f) {
                                h.copy(w.position), h.add(y[P]), w.up.copy(T[P]), w.lookAt(h);
                                var L = x[P];
                                e.setViewport(L.x, L.y, L.z, L.w)
                            } else h.setFromMatrixPosition(g.target.matrixWorld), w.lookAt(h);
                            w.updateMatrixWorld(), w.matrixWorldInverse.getInverse(w.matrixWorld), A.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), A.multiply(w.projectionMatrix), A.multiply(w.matrixWorldInverse), l.multiplyMatrices(w.projectionMatrix, w.matrixWorldInverse), s.setFromMatrix(l), p.length = 0, r(c, w);
                            for (var D = 0, O = p.length; D < O; D++) {
                                var F = p[D],
                                    j = n.update(F),
                                    V = F.material;
                                if (V instanceof THREE.MeshFaceMaterial)
                                    for (var I = j.groups, N = V.materials, B = 0, z = I.length; B < z; B++) {
                                        var U = I[B],
                                            G = N[U.materialIndex];
                                        if (G.visible === !0) {
                                            var W = i(F, G, f, d);
                                            e.renderBufferDirect(w, t, null, j, W, F, U)
                                        }
                                    } else {
                                        var W = i(F, V, f, d);
                                        e.renderBufferDirect(w, t, null, j, W, F, null)
                                    }
                            }
                        }
                        e.resetGLState()
                    }
                }
                e.setViewport(R.x, R.y, R.z, R.w);
                var q = e.getClearColor(),
                    X = e.getClearAlpha();
                e.setClearColor(q, X), a.enable(o.BLEND), k.cullFace === THREE.CullFaceFront && o.cullFace(o.BACK), e.resetGLState(), k.needsUpdate = !1
            }
        }
    }, THREE.WebGLState = function(e, t, n) {
        var i = this,
            r = new Uint8Array(16),
            o = new Uint8Array(16),
            a = new Uint8Array(16),
            s = {},
            l = null,
            c = null,
            u = null,
            h = null,
            d = null,
            p = null,
            f = null,
            m = null,
            E = null,
            g = null,
            v = null,
            y = null,
            T = null,
            x = null,
            R = null,
            w = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),
            b = void 0,
            H = {};
        this.init = function() {
            e.clearColor(0, 0, 0, 1), e.clearDepth(1), e.clearStencil(0), this.enable(e.DEPTH_TEST), e.depthFunc(e.LEQUAL), e.frontFace(e.CCW), e.cullFace(e.BACK), this.enable(e.CULL_FACE), this.enable(e.BLEND), e.blendEquation(e.FUNC_ADD), e.blendFunc(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA)
        }, this.initAttributes = function() {
            for (var e = 0, t = r.length; e < t; e++) r[e] = 0
        }, this.enableAttribute = function(n) {
            if (r[n] = 1, 0 === o[n] && (e.enableVertexAttribArray(n), o[n] = 1), 0 !== a[n]) {
                var i = t.get("ANGLE_instanced_arrays");
                i.vertexAttribDivisorANGLE(n, 0), a[n] = 0
            }
        }, this.enableAttributeAndDivisor = function(t, n, i) {
            r[t] = 1, 0 === o[t] && (e.enableVertexAttribArray(t), o[t] = 1), a[t] !== n && (i.vertexAttribDivisorANGLE(t, n), a[t] = n)
        }, this.disableUnusedAttributes = function() {
            for (var t = 0, n = o.length; t < n; t++) o[t] !== r[t] && (e.disableVertexAttribArray(t), o[t] = 0)
        }, this.enable = function(t) {
            s[t] !== !0 && (e.enable(t), s[t] = !0)
        }, this.disable = function(t) {
            s[t] !== !1 && (e.disable(t), s[t] = !1)
        }, this.getCompressedTextureFormats = function() {
            if (null === l && (l = [], t.get("WEBGL_compressed_texture_pvrtc") || t.get("WEBGL_compressed_texture_s3tc")))
                for (var n = e.getParameter(e.COMPRESSED_TEXTURE_FORMATS), i = 0; i < n.length; i++) l.push(n[i]);
            return l
        }, this.setBlending = function(t, i, r, o, a, s, l) {
            t !== c && (t === THREE.NoBlending ? this.disable(e.BLEND) : t === THREE.AdditiveBlending ? (this.enable(e.BLEND), e.blendEquation(e.FUNC_ADD), e.blendFunc(e.SRC_ALPHA, e.ONE)) : t === THREE.SubtractiveBlending ? (this.enable(e.BLEND), e.blendEquation(e.FUNC_ADD), e.blendFunc(e.ZERO, e.ONE_MINUS_SRC_COLOR)) : t === THREE.MultiplyBlending ? (this.enable(e.BLEND), e.blendEquation(e.FUNC_ADD), e.blendFunc(e.ZERO, e.SRC_COLOR)) : t === THREE.CustomBlending ? this.enable(e.BLEND) : (this.enable(e.BLEND), e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA)), c = t), t === THREE.CustomBlending ? (a = a || i, s = s || r, l = l || o, i === u && a === p || (e.blendEquationSeparate(n(i), n(a)), u = i, p = a), r === h && o === d && s === f && l === m || (e.blendFuncSeparate(n(r), n(o), n(s), n(l)), h = r, d = o, f = s, m = l)) : (u = null, h = null, d = null, p = null, f = null, m = null)
        }, this.setDepthFunc = function(t) {
            if (E !== t) {
                if (t) switch (t) {
                    case THREE.NeverDepth:
                        e.depthFunc(e.NEVER);
                        break;
                    case THREE.AlwaysDepth:
                        e.depthFunc(e.ALWAYS);
                        break;
                    case THREE.LessDepth:
                        e.depthFunc(e.LESS);
                        break;
                    case THREE.LessEqualDepth:
                        e.depthFunc(e.LEQUAL);
                        break;
                    case THREE.EqualDepth:
                        e.depthFunc(e.EQUAL);
                        break;
                    case THREE.GreaterEqualDepth:
                        e.depthFunc(e.GEQUAL);
                        break;
                    case THREE.GreaterDepth:
                        e.depthFunc(e.GREATER);
                        break;
                    case THREE.NotEqualDepth:
                        e.depthFunc(e.NOTEQUAL);
                        break;
                    default:
                        e.depthFunc(e.LEQUAL)
                } else e.depthFunc(e.LEQUAL);
                E = t
            }
        }, this.setDepthTest = function(t) {
            t ? this.enable(e.DEPTH_TEST) : this.disable(e.DEPTH_TEST)
        }, this.setDepthWrite = function(t) {
            g !== t && (e.depthMask(t), g = t)
        }, this.setColorWrite = function(t) {
            v !== t && (e.colorMask(t, t, t, t), v = t)
        }, this.setFlipSided = function(t) {
            y !== t && (t ? e.frontFace(e.CW) : e.frontFace(e.CCW), y = t)
        }, this.setLineWidth = function(t) {
            t !== T && (e.lineWidth(t), T = t)
        }, this.setPolygonOffset = function(t, n, i) {
            t ? this.enable(e.POLYGON_OFFSET_FILL) : this.disable(e.POLYGON_OFFSET_FILL), !t || x === n && R === i || (e.polygonOffset(n, i), x = n, R = i)
        }, this.setScissorTest = function(t) {
            t ? this.enable(e.SCISSOR_TEST) : this.disable(e.SCISSOR_TEST)
        }, this.activeTexture = function(t) {
            void 0 === t && (t = e.TEXTURE0 + w - 1), b !== t && (e.activeTexture(t), b = t)
        }, this.bindTexture = function(t, n) {
            void 0 === b && i.activeTexture();
            var r = H[b];
            void 0 === r && (r = {
                type: void 0,
                texture: void 0
            }, H[b] = r), r.type === t && r.texture === n || (e.bindTexture(t, n), r.type = t, r.texture = n)
        }, this.compressedTexImage2D = function() {
            try {
                e.compressedTexImage2D.apply(e, arguments)
            } catch (e) {
                console.error(e)
            }
        }, this.texImage2D = function() {
            try {
                e.texImage2D.apply(e, arguments)
            } catch (e) {
                console.error(e)
            }
        }, this.reset = function() {
            for (var t = 0; t < o.length; t++) 1 === o[t] && (e.disableVertexAttribArray(t), o[t] = 0);
            s = {}, l = null, c = null, g = null, v = null, y = null
        }
    }, THREE.LensFlarePlugin = function(e, t) {
        function n() {
            var e = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]),
                t = new Uint16Array([0, 1, 2, 0, 2, 3]);
            a = r.createBuffer(), s = r.createBuffer(), r.bindBuffer(r.ARRAY_BUFFER, a), r.bufferData(r.ARRAY_BUFFER, e, r.STATIC_DRAW), r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, s), r.bufferData(r.ELEMENT_ARRAY_BUFFER, t, r.STATIC_DRAW), d = r.createTexture(), p = r.createTexture(), o.bindTexture(r.TEXTURE_2D, d), r.texImage2D(r.TEXTURE_2D, 0, r.RGB, 16, 16, 0, r.RGB, r.UNSIGNED_BYTE, null), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_WRAP_S, r.CLAMP_TO_EDGE), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_WRAP_T, r.CLAMP_TO_EDGE), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MAG_FILTER, r.NEAREST), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MIN_FILTER, r.NEAREST), o.bindTexture(r.TEXTURE_2D, p), r.texImage2D(r.TEXTURE_2D, 0, r.RGBA, 16, 16, 0, r.RGBA, r.UNSIGNED_BYTE, null), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_WRAP_S, r.CLAMP_TO_EDGE), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_WRAP_T, r.CLAMP_TO_EDGE), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MAG_FILTER, r.NEAREST), r.texParameteri(r.TEXTURE_2D, r.TEXTURE_MIN_FILTER, r.NEAREST), h = r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0;
            var n;
            n = h ? {
                vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
            } : {
                vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                fragmentShader: ["precision mediump float;", "uniform lowp int renderType;", "uniform sampler2D map;", "uniform sampler2D occlusionMap;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;", "visibility = ( 1.0 - visibility / 4.0 );", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * visibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
            }, l = i(n), c = {
                vertex: r.getAttribLocation(l, "position"),
                uv: r.getAttribLocation(l, "uv")
            }, u = {
                renderType: r.getUniformLocation(l, "renderType"),
                map: r.getUniformLocation(l, "map"),
                occlusionMap: r.getUniformLocation(l, "occlusionMap"),
                opacity: r.getUniformLocation(l, "opacity"),
                color: r.getUniformLocation(l, "color"),
                scale: r.getUniformLocation(l, "scale"),
                rotation: r.getUniformLocation(l, "rotation"),
                screenPosition: r.getUniformLocation(l, "screenPosition")
            }
        }

        function i(t) {
            var n = r.createProgram(),
                i = r.createShader(r.FRAGMENT_SHADER),
                o = r.createShader(r.VERTEX_SHADER),
                a = "precision " + e.getPrecision() + " float;\n";
            return r.shaderSource(i, a + t.fragmentShader), r.shaderSource(o, a + t.vertexShader), r.compileShader(i), r.compileShader(o), r.attachShader(n, i), r.attachShader(n, o), r.linkProgram(n), n
        }
        var r = e.context,
            o = e.state,
            a, s, l, c, u, h, d, p;
        this.render = function(i, f, m, E) {
            if (0 !== t.length) {
                var g = new THREE.Vector3,
                    v = E / m,
                    y = .5 * m,
                    T = .5 * E,
                    x = 16 / E,
                    R = new THREE.Vector2(x * v, x),
                    w = new THREE.Vector3(1, 1, 0),
                    b = new THREE.Vector2(1, 1);
                void 0 === l && n(), r.useProgram(l), o.initAttributes(), o.enableAttribute(c.vertex), o.enableAttribute(c.uv), o.disableUnusedAttributes(), r.uniform1i(u.occlusionMap, 0), r.uniform1i(u.map, 1), r.bindBuffer(r.ARRAY_BUFFER, a), r.vertexAttribPointer(c.vertex, 2, r.FLOAT, !1, 16, 0), r.vertexAttribPointer(c.uv, 2, r.FLOAT, !1, 16, 8), r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, s), o.disable(r.CULL_FACE), r.depthMask(!1);
                for (var H = 0, S = t.length; H < S; H++) {
                    x = 16 / E, R.set(x * v, x);
                    var _ = t[H];
                    if (g.set(_.matrixWorld.elements[12], _.matrixWorld.elements[13], _.matrixWorld.elements[14]), g.applyMatrix4(f.matrixWorldInverse), g.applyProjection(f.projectionMatrix), w.copy(g), b.x = w.x * y + y, b.y = w.y * T + T, h || b.x > 0 && b.x < m && b.y > 0 && b.y < E) {
                        o.activeTexture(r.TEXTURE0), o.bindTexture(r.TEXTURE_2D, null), o.activeTexture(r.TEXTURE1), o.bindTexture(r.TEXTURE_2D, d), r.copyTexImage2D(r.TEXTURE_2D, 0, r.RGB, b.x - 8, b.y - 8, 16, 16, 0), r.uniform1i(u.renderType, 0), r.uniform2f(u.scale, R.x, R.y), r.uniform3f(u.screenPosition, w.x, w.y, w.z), o.disable(r.BLEND), o.enable(r.DEPTH_TEST), r.drawElements(r.TRIANGLES, 6, r.UNSIGNED_SHORT, 0), o.activeTexture(r.TEXTURE0), o.bindTexture(r.TEXTURE_2D, p), r.copyTexImage2D(r.TEXTURE_2D, 0, r.RGBA, b.x - 8, b.y - 8, 16, 16, 0), r.uniform1i(u.renderType, 1), o.disable(r.DEPTH_TEST), o.activeTexture(r.TEXTURE1), o.bindTexture(r.TEXTURE_2D, d), r.drawElements(r.TRIANGLES, 6, r.UNSIGNED_SHORT, 0), _.positionScreen.copy(w), _.customUpdateCallback ? _.customUpdateCallback(_) : _.updateLensFlares(), r.uniform1i(u.renderType, 2), o.enable(r.BLEND);
                        for (var M = 0, C = _.lensFlares.length; M < C; M++) {
                            var A = _.lensFlares[M];
                            A.opacity > .001 && A.scale > .001 && (w.x = A.x, w.y = A.y, w.z = A.z, x = A.size * A.scale / E, R.x = x * v, R.y = x, r.uniform3f(u.screenPosition, w.x, w.y, w.z), r.uniform2f(u.scale, R.x, R.y), r.uniform1f(u.rotation, A.rotation), r.uniform1f(u.opacity, A.opacity), r.uniform3f(u.color, A.color.r, A.color.g, A.color.b), o.setBlending(A.blending, A.blendEquation, A.blendSrc, A.blendDst), e.setTexture(A.texture, 1), r.drawElements(r.TRIANGLES, 6, r.UNSIGNED_SHORT, 0))
                        }
                    }
                }
                o.enable(r.CULL_FACE), o.enable(r.DEPTH_TEST), r.depthMask(!0), e.resetGLState()
            }
        }
    }, THREE.SpritePlugin = function(e, t) {
        function n() {
            var e = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1]),
                t = new Uint16Array([0, 1, 2, 0, 2, 3]);
            s = o.createBuffer(), l = o.createBuffer(), o.bindBuffer(o.ARRAY_BUFFER, s), o.bufferData(o.ARRAY_BUFFER, e, o.STATIC_DRAW), o.bindBuffer(o.ELEMENT_ARRAY_BUFFER, l), o.bufferData(o.ELEMENT_ARRAY_BUFFER, t, o.STATIC_DRAW), c = i(), u = {
                position: o.getAttribLocation(c, "position"),
                uv: o.getAttribLocation(c, "uv")
            }, h = {
                uvOffset: o.getUniformLocation(c, "uvOffset"),
                uvScale: o.getUniformLocation(c, "uvScale"),
                rotation: o.getUniformLocation(c, "rotation"),
                scale: o.getUniformLocation(c, "scale"),
                color: o.getUniformLocation(c, "color"),
                map: o.getUniformLocation(c, "map"),
                opacity: o.getUniformLocation(c, "opacity"),
                modelViewMatrix: o.getUniformLocation(c, "modelViewMatrix"),
                projectionMatrix: o.getUniformLocation(c, "projectionMatrix"),
                fogType: o.getUniformLocation(c, "fogType"),
                fogDensity: o.getUniformLocation(c, "fogDensity"),
                fogNear: o.getUniformLocation(c, "fogNear"),
                fogFar: o.getUniformLocation(c, "fogFar"),
                fogColor: o.getUniformLocation(c, "fogColor"),
                alphaTest: o.getUniformLocation(c, "alphaTest")
            };
            var n = document.createElement("canvas");
            n.width = 8, n.height = 8;
            var r = n.getContext("2d");
            r.fillStyle = "white", r.fillRect(0, 0, 8, 8), d = new THREE.Texture(n), d.needsUpdate = !0
        }

        function i() {
            var t = o.createProgram(),
                n = o.createShader(o.VERTEX_SHADER),
                i = o.createShader(o.FRAGMENT_SHADER);
            return o.shaderSource(n, ["precision " + e.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")), o.shaderSource(i, ["precision " + e.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")), o.compileShader(n), o.compileShader(i), o.attachShader(t, n), o.attachShader(t, i), o.linkProgram(t), t
        }

        function r(e, t) {
            return e.z !== t.z ? t.z - e.z : t.id - e.id
        }
        var o = e.context,
            a = e.state,
            s, l, c, u, h, d, p = new THREE.Vector3,
            f = new THREE.Quaternion,
            m = new THREE.Vector3;
        this.render = function(i, E) {
            if (0 !== t.length) {
                void 0 === c && n(), o.useProgram(c), a.initAttributes(), a.enableAttribute(u.position), a.enableAttribute(u.uv), a.disableUnusedAttributes(), a.disable(o.CULL_FACE), a.enable(o.BLEND), o.bindBuffer(o.ARRAY_BUFFER, s), o.vertexAttribPointer(u.position, 2, o.FLOAT, !1, 16, 0), o.vertexAttribPointer(u.uv, 2, o.FLOAT, !1, 16, 8), o.bindBuffer(o.ELEMENT_ARRAY_BUFFER, l), o.uniformMatrix4fv(h.projectionMatrix, !1, E.projectionMatrix.elements), a.activeTexture(o.TEXTURE0), o.uniform1i(h.map, 0);
                var g = 0,
                    v = 0,
                    y = i.fog;
                y ? (o.uniform3f(h.fogColor, y.color.r, y.color.g, y.color.b), y instanceof THREE.Fog ? (o.uniform1f(h.fogNear, y.near), o.uniform1f(h.fogFar, y.far), o.uniform1i(h.fogType, 1), g = 1, v = 1) : y instanceof THREE.FogExp2 && (o.uniform1f(h.fogDensity, y.density), o.uniform1i(h.fogType, 2), g = 2, v = 2)) : (o.uniform1i(h.fogType, 0), g = 0, v = 0);
                for (var T = 0, x = t.length; T < x; T++) {
                    var R = t[T];
                    R.modelViewMatrix.multiplyMatrices(E.matrixWorldInverse, R.matrixWorld), R.z = -R.modelViewMatrix.elements[14]
                }
                t.sort(r);
                for (var w = [], T = 0, x = t.length; T < x; T++) {
                    var R = t[T],
                        b = R.material;
                    o.uniform1f(h.alphaTest, b.alphaTest), o.uniformMatrix4fv(h.modelViewMatrix, !1, R.modelViewMatrix.elements), R.matrixWorld.decompose(p, f, m), w[0] = m.x, w[1] = m.y;
                    var H = 0;
                    i.fog && b.fog && (H = v), g !== H && (o.uniform1i(h.fogType, H), g = H), null !== b.map ? (o.uniform2f(h.uvOffset, b.map.offset.x, b.map.offset.y), o.uniform2f(h.uvScale, b.map.repeat.x, b.map.repeat.y)) : (o.uniform2f(h.uvOffset, 0, 0), o.uniform2f(h.uvScale, 1, 1)), o.uniform1f(h.opacity, b.opacity), o.uniform3f(h.color, b.color.r, b.color.g, b.color.b), o.uniform1f(h.rotation, b.rotation), o.uniform2fv(h.scale, w), a.setBlending(b.blending, b.blendEquation, b.blendSrc, b.blendDst), a.setDepthTest(b.depthTest), a.setDepthWrite(b.depthWrite), b.map && b.map.image && b.map.image.width ? e.setTexture(b.map, 0) : e.setTexture(d, 0), o.drawElements(o.TRIANGLES, 6, o.UNSIGNED_SHORT, 0)
                }
                a.enable(o.CULL_FACE), e.resetGLState()
            }
        }
    }, THREE.CurveUtils = {
        tangentQuadraticBezier: function(e, t, n, i) {
            return 2 * (1 - e) * (n - t) + 2 * e * (i - n)
        },
        tangentCubicBezier: function(e, t, n, i, r) {
            return -3 * t * (1 - e) * (1 - e) + 3 * n * (1 - e) * (1 - e) - 6 * e * n * (1 - e) + 6 * e * i * (1 - e) - 3 * e * e * i + 3 * e * e * r
        },
        tangentSpline: function(e, t, n, i, r) {
            var o = 6 * e * e - 6 * e,
                a = 3 * e * e - 4 * e + 1,
                s = -6 * e * e + 6 * e,
                l = 3 * e * e - 2 * e;
            return o + a + s + l
        },
        interpolate: function(e, t, n, i, r) {
            var o = .5 * (n - e),
                a = .5 * (i - t),
                s = r * r,
                l = r * s;
            return (2 * t - 2 * n + o + a) * l + (-3 * t + 3 * n - 2 * o - a) * s + o * r + t
        }
    }, THREE.GeometryUtils = {
        merge: function(e, t, n) {
            console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
            var i;
            t instanceof THREE.Mesh && (t.matrixAutoUpdate && t.updateMatrix(), i = t.matrix, t = t.geometry), e.merge(t, i, n)
        },
        center: function(e) {
            return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), e.center()
        }
    }, THREE.ImageUtils = {
        crossOrigin: void 0,
        loadTexture: function(e, t, n, i) {
            console.warn("THREE.ImageUtils.loadTexture is being deprecated. Use THREE.TextureLoader() instead.");
            var r = new THREE.TextureLoader;
            r.setCrossOrigin(this.crossOrigin);
            var o = r.load(e, n, void 0, i);
            return t && (o.mapping = t), o
        },
        loadTextureCube: function(e, t, n, i) {
            console.warn("THREE.ImageUtils.loadTextureCube is being deprecated. Use THREE.CubeTextureLoader() instead.");
            var r = new THREE.CubeTextureLoader;
            r.setCrossOrigin(this.crossOrigin);
            var o = r.load(e, n, void 0, i);
            return t && (o.mapping = t), o
        },
        loadCompressedTexture: function() {
            console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
        },
        loadCompressedTextureCube: function() {
            console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
        }
    }, THREE.SceneUtils = {
        createMultiMaterialObject: function(e, t) {
            for (var n = new THREE.Group, i = 0, r = t.length; i < r; i++) n.add(new THREE.Mesh(e, t[i]));
            return n
        },
        detach: function(e, t, n) {
            e.applyMatrix(t.matrixWorld), t.remove(e), n.add(e)
        },
        attach: function(e, t, n) {
            var i = new THREE.Matrix4;
            i.getInverse(n.matrixWorld), e.applyMatrix(i), t.remove(e), n.add(e)
        }
    }, THREE.ShapeUtils = {
        area: function(e) {
            for (var t = e.length, n = 0, i = t - 1, r = 0; r < t; i = r++) n += e[i].x * e[r].y - e[r].x * e[i].y;
            return .5 * n
        },
        triangulate: function() {
            function e(e, t, n, i, r, o) {
                var a, s, l, c, u, h, d, p, f;
                if (s = e[o[t]].x, l = e[o[t]].y, c = e[o[n]].x, u = e[o[n]].y, h = e[o[i]].x, d = e[o[i]].y, Number.EPSILON > (c - s) * (d - l) - (u - l) * (h - s)) return !1;
                var m, E, g, v, y, T, x, R, w, b, H, S, _, M, C;
                for (m = h - c, E = d - u, g = s - h, v = l - d, y = c - s, T = u - l, a = 0; a < r; a++)
                    if (p = e[o[a]].x, f = e[o[a]].y, !(p === s && f === l || p === c && f === u || p === h && f === d) && (x = p - s, R = f - l, w = p - c, b = f - u, H = p - h, S = f - d, C = m * b - E * w, _ = y * R - T * x, M = g * S - v * H, C >= -Number.EPSILON && M >= -Number.EPSILON && _ >= -Number.EPSILON)) return !1;
                return !0
            }
            return function(t, n) {
                var i = t.length;
                if (i < 3) return null;
                var r = [],
                    o = [],
                    a = [],
                    s, l, c;
                if (THREE.ShapeUtils.area(t) > 0)
                    for (l = 0; l < i; l++) o[l] = l;
                else
                    for (l = 0; l < i; l++) o[l] = i - 1 - l;
                var u = i,
                    h = 2 * u;
                for (l = u - 1; u > 2;) {
                    if (h-- <= 0) return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"), n ? a : r;
                    if (s = l, u <= s && (s = 0), l = s + 1, u <= l && (l = 0), c = l + 1, u <= c && (c = 0), e(t, s, l, c, u, o)) {
                        var d, p, f, m, E;
                        for (d = o[s], p = o[l], f = o[c], r.push([t[d], t[p], t[f]]), a.push([o[s], o[l], o[c]]), m = l, E = l + 1; E < u; m++, E++) o[m] = o[E];
                        u--, h = 2 * u
                    }
                }
                return n ? a : r
            }
        }(),
        triangulateShape: function(e, t) {
            function n(e, t, n) {
                return e.x !== t.x ? e.x < t.x ? e.x <= n.x && n.x <= t.x : t.x <= n.x && n.x <= e.x : e.y < t.y ? e.y <= n.y && n.y <= t.y : t.y <= n.y && n.y <= e.y
            }

            function i(e, t, i, r, o) {
                var a = t.x - e.x,
                    s = t.y - e.y,
                    l = r.x - i.x,
                    c = r.y - i.y,
                    u = e.x - i.x,
                    h = e.y - i.y,
                    d = s * l - a * c,
                    p = s * u - a * h;
                if (Math.abs(d) > Number.EPSILON) {
                    var f;
                    if (d > 0) {
                        if (p < 0 || p > d) return [];
                        if (f = c * u - l * h, f < 0 || f > d) return []
                    } else {
                        if (p > 0 || p < d) return [];
                        if (f = c * u - l * h, f > 0 || f < d) return []
                    }
                    if (0 === f) return !o || 0 !== p && p !== d ? [e] : [];
                    if (f === d) return !o || 0 !== p && p !== d ? [t] : [];
                    if (0 === p) return [i];
                    if (p === d) return [r];
                    var m = f / d;
                    return [{
                        x: e.x + m * a,
                        y: e.y + m * s
                    }]
                }
                if (0 !== p || c * u !== l * h) return [];
                var E = 0 === a && 0 === s,
                    g = 0 === l && 0 === c;
                if (E && g) return e.x !== i.x || e.y !== i.y ? [] : [e];
                if (E) return n(i, r, e) ? [e] : [];
                if (g) return n(e, t, i) ? [i] : [];
                var v, y, T, x, R, w, b, H;
                return 0 !== a ? (e.x < t.x ? (v = e, T = e.x, y = t, x = t.x) : (v = t, T = t.x, y = e, x = e.x), i.x < r.x ? (R = i, b = i.x, w = r, H = r.x) : (R = r, b = r.x, w = i, H = i.x)) : (e.y < t.y ? (v = e, T = e.y, y = t, x = t.y) : (v = t, T = t.y, y = e, x = e.y), i.y < r.y ? (R = i, b = i.y, w = r, H = r.y) : (R = r, b = r.y, w = i, H = i.y)), T <= b ? x < b ? [] : x === b ? o ? [] : [R] : x <= H ? [R, y] : [R, w] : T > H ? [] : T === H ? o ? [] : [v] : x <= H ? [v, y] : [v, w]
            }

            function r(e, t, n, i) {
                var r = t.x - e.x,
                    o = t.y - e.y,
                    a = n.x - e.x,
                    s = n.y - e.y,
                    l = i.x - e.x,
                    c = i.y - e.y,
                    u = r * s - o * a,
                    h = r * c - o * l;
                if (Math.abs(u) > Number.EPSILON) {
                    var d = l * s - c * a;
                    return u > 0 ? h >= 0 && d >= 0 : h >= 0 || d >= 0
                }
                return h > 0
            }

            function o(e, t) {
                function n(e, t) {
                    var n = s.length - 1,
                        i = e - 1;
                    i < 0 && (i = n);
                    var o = e + 1;
                    o > n && (o = 0);
                    var a = r(s[e], s[i], s[o], l[t]);
                    if (!a) return !1;
                    var c = l.length - 1,
                        u = t - 1;
                    u < 0 && (u = c);
                    var h = t + 1;
                    return h > c && (h = 0), a = r(l[t], l[u], l[h], s[e]), !!a
                }

                function o(e, t) {
                    var n, r, o;
                    for (n = 0; n < s.length; n++)
                        if (r = n + 1, r %= s.length, o = i(e, t, s[n], s[r], !0), o.length > 0) return !0;
                    return !1
                }

                function a(e, n) {
                    var r, o, a, s, l;
                    for (r = 0; r < c.length; r++)
                        for (o = t[c[r]], a = 0; a < o.length; a++)
                            if (s = a + 1, s %= o.length, l = i(e, n, o[a], o[s], !0), l.length > 0) return !0;
                    return !1
                }
                for (var s = e.concat(), l, c = [], u, h, d, p, f, m, E = [], g, v, y, T, x = 0, R = t.length; x < R; x++) c.push(x);
                for (var w = 0, b = 2 * c.length; c.length > 0;) {
                    if (b--, b < 0) {
                        console.log("Infinite Loop! Holes left:" + c.length + ", Probably Hole outside Shape!");
                        break
                    }
                    for (h = w; h < s.length; h++) {
                        d = s[h], u = -1;
                        for (var x = 0; x < c.length; x++)
                            if (f = c[x], m = d.x + ":" + d.y + ":" + f, void 0 === E[m]) {
                                l = t[f];
                                for (var H = 0; H < l.length; H++)
                                    if (p = l[H], n(h, H) && !o(d, p) && !a(d, p)) {
                                        u = H, c.splice(x, 1), g = s.slice(0, h + 1), v = s.slice(h), y = l.slice(u), T = l.slice(0, u + 1), s = g.concat(y).concat(T).concat(v), w = h;
                                        break
                                    }
                                if (u >= 0) break;
                                E[m] = !0
                            }
                        if (u >= 0) break
                    }
                }
                return s
            }
            for (var a, s, l, c, u, h, d = {}, p = e.concat(), f = 0, m = t.length; f < m; f++) Array.prototype.push.apply(p, t[f]);
            for (a = 0, s = p.length; a < s; a++) u = p[a].x + ":" + p[a].y, void 0 !== d[u] && console.warn("THREE.Shape: Duplicate point", u), d[u] = a;
            var E = o(e, t),
                g = THREE.ShapeUtils.triangulate(E, !1);
            for (a = 0, s = g.length; a < s; a++)
                for (c = g[a], l = 0; l < 3; l++) u = c[l].x + ":" + c[l].y, h = d[u], void 0 !== h && (c[l] = h);
            return g.concat()
        },
        isClockWise: function(e) {
            return THREE.ShapeUtils.area(e) < 0
        },
        b2: function() {
            function e(e, t) {
                var n = 1 - e;
                return n * n * t
            }

            function t(e, t) {
                return 2 * (1 - e) * e * t
            }

            function n(e, t) {
                return e * e * t
            }
            return function(i, r, o, a) {
                return e(i, r) + t(i, o) + n(i, a)
            }
        }(),
        b3: function() {
            function e(e, t) {
                var n = 1 - e;
                return n * n * n * t
            }

            function t(e, t) {
                var n = 1 - e;
                return 3 * n * n * e * t
            }

            function n(e, t) {
                var n = 1 - e;
                return 3 * n * e * e * t
            }

            function i(e, t) {
                return e * e * e * t
            }
            return function(r, o, a, s, l) {
                return e(r, o) + t(r, a) + n(r, s) + i(r, l)
            }
        }()
    }, THREE.Audio = function(e) {
        THREE.Object3D.call(this), this.type = "Audio", this.context = e.context, this.source = this.context.createBufferSource(), this.source.onended = this.onEnded.bind(this), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.panner = this.context.createPanner(), this.panner.connect(this.gain), this.autoplay = !1, this.startTime = 0, this.playbackRate = 1, this.isPlaying = !1
    }, THREE.Audio.prototype = Object.create(THREE.Object3D.prototype), THREE.Audio.prototype.constructor = THREE.Audio, THREE.Audio.prototype.load = function(e) {
        var t = this,
            n = new XMLHttpRequest;
        return n.open("GET", e, !0), n.responseType = "arraybuffer", n.onload = function(e) {
            t.context.decodeAudioData(this.response, function(e) {
                t.source.buffer = e, t.autoplay && t.play()
            })
        }, n.send(), this
    }, THREE.Audio.prototype.play = function() {
        if (this.isPlaying === !0) return void console.warn("THREE.Audio: Audio is already playing.");
        var e = this.context.createBufferSource();
        e.buffer = this.source.buffer, e.loop = this.source.loop, e.onended = this.source.onended, e.start(0, this.startTime), e.playbackRate.value = this.playbackRate, this.isPlaying = !0, this.source = e, this.connect()
    }, THREE.Audio.prototype.pause = function() {
        this.source.stop(), this.startTime = this.context.currentTime
    }, THREE.Audio.prototype.stop = function() {
        this.source.stop(), this.startTime = 0
    }, THREE.Audio.prototype.connect = function() {
        void 0 !== this.filter ? (this.source.connect(this.filter), this.filter.connect(this.panner)) : this.source.connect(this.panner)
    }, THREE.Audio.prototype.disconnect = function() {
        void 0 !== this.filter ? (this.source.disconnect(this.filter), this.filter.disconnect(this.panner)) : this.source.disconnect(this.panner)
    }, THREE.Audio.prototype.setFilter = function(e) {
        this.isPlaying === !0 ? (this.disconnect(), this.filter = e, this.connect()) : this.filter = e
    }, THREE.Audio.prototype.getFilter = function() {
        return this.filter
    }, THREE.Audio.prototype.setPlaybackRate = function(e) {
        this.playbackRate = e, this.isPlaying === !0 && (this.source.playbackRate.value = this.playbackRate)
    }, THREE.Audio.prototype.getPlaybackRate = function() {
        return this.playbackRate
    }, THREE.Audio.prototype.onEnded = function() {
        this.isPlaying = !1
    }, THREE.Audio.prototype.setLoop = function(e) {
        this.source.loop = e
    }, THREE.Audio.prototype.getLoop = function() {
        return this.source.loop
    }, THREE.Audio.prototype.setRefDistance = function(e) {
        this.panner.refDistance = e
    };
THREE.Audio.prototype.getRefDistance = function() {
    return this.panner.refDistance
};
THREE.Audio.prototype.setRolloffFactor = function(e) {
    this.panner.rolloffFactor = e
}, THREE.Audio.prototype.getRolloffFactor = function() {
    return this.panner.rolloffFactor
}, THREE.Audio.prototype.setVolume = function(e) {
    this.gain.gain.value = e
}, THREE.Audio.prototype.getVolume = function() {
    return this.gain.gain.value
}, THREE.Audio.prototype.updateMatrixWorld = function() {
    var e = new THREE.Vector3;
    return function t(n) {
        THREE.Object3D.prototype.updateMatrixWorld.call(this, n), e.setFromMatrixPosition(this.matrixWorld), this.panner.setPosition(e.x, e.y, e.z)
    }
}(), THREE.AudioListener = function() {
    THREE.Object3D.call(this), this.type = "AudioListener", this.context = new(window.AudioContext || window.webkitAudioContext)
}, THREE.AudioListener.prototype = Object.create(THREE.Object3D.prototype), THREE.AudioListener.prototype.constructor = THREE.AudioListener, THREE.AudioListener.prototype.updateMatrixWorld = function() {
    var e = new THREE.Vector3,
        t = new THREE.Quaternion,
        n = new THREE.Vector3,
        i = new THREE.Vector3;
    return function r(o) {
        THREE.Object3D.prototype.updateMatrixWorld.call(this, o);
        var a = this.context.listener,
            s = this.up;
        this.matrixWorld.decompose(e, t, n), i.set(0, 0, -1).applyQuaternion(t), a.setPosition(e.x, e.y, e.z), a.setOrientation(i.x, i.y, i.z, s.x, s.y, s.z)
    }
}(), THREE.Curve = function() {}, THREE.Curve.prototype = {
    constructor: THREE.Curve,
    getPoint: function(e) {
        return console.warn("THREE.Curve: Warning, getPoint() not implemented!"), null
    },
    getPointAt: function(e) {
        var t = this.getUtoTmapping(e);
        return this.getPoint(t)
    },
    getPoints: function(e) {
        e || (e = 5);
        var t, n = [];
        for (t = 0; t <= e; t++) n.push(this.getPoint(t / e));
        return n
    },
    getSpacedPoints: function(e) {
        e || (e = 5);
        var t, n = [];
        for (t = 0; t <= e; t++) n.push(this.getPointAt(t / e));
        return n
    },
    getLength: function() {
        var e = this.getLengths();
        return e[e.length - 1]
    },
    getLengths: function(e) {
        if (e || (e = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200), this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = !1;
        var t = [],
            n, i = this.getPoint(0),
            r, o = 0;
        for (t.push(0), r = 1; r <= e; r++) n = this.getPoint(r / e), o += n.distanceTo(i), t.push(o), i = n;
        return this.cacheArcLengths = t, t
    },
    updateArcLengths: function() {
        this.needsUpdate = !0, this.getLengths()
    },
    getUtoTmapping: function(e, t) {
        var n = this.getLengths(),
            i = 0,
            r = n.length,
            o;
        o = t ? t : e * n[r - 1];
        for (var a = 0, s = r - 1, l; a <= s;)
            if (i = Math.floor(a + (s - a) / 2), l = n[i] - o, l < 0) a = i + 1;
            else {
                if (!(l > 0)) {
                    s = i;
                    break
                }
                s = i - 1
            }
        if (i = s, n[i] === o) {
            var c = i / (r - 1);
            return c
        }
        var u = n[i],
            h = n[i + 1],
            d = h - u,
            p = (o - u) / d,
            c = (i + p) / (r - 1);
        return c
    },
    getTangent: function(e) {
        var t = 1e-4,
            n = e - t,
            i = e + t;
        n < 0 && (n = 0), i > 1 && (i = 1);
        var r = this.getPoint(n),
            o = this.getPoint(i),
            a = o.clone().sub(r);
        return a.normalize()
    },
    getTangentAt: function(e) {
        var t = this.getUtoTmapping(e);
        return this.getTangent(t)
    }
}, THREE.Curve.Utils = THREE.CurveUtils, THREE.Curve.create = function(e, t) {
    return e.prototype = Object.create(THREE.Curve.prototype), e.prototype.constructor = e, e.prototype.getPoint = t, e
}, THREE.CurvePath = function() {
    this.curves = [], this.autoClose = !1
}, THREE.CurvePath.prototype = Object.create(THREE.Curve.prototype), THREE.CurvePath.prototype.constructor = THREE.CurvePath, THREE.CurvePath.prototype.add = function(e) {
    this.curves.push(e)
}, THREE.CurvePath.prototype.closePath = function() {
    var e = this.curves[0].getPoint(0),
        t = this.curves[this.curves.length - 1].getPoint(1);
    e.equals(t) || this.curves.push(new THREE.LineCurve(t, e))
}, THREE.CurvePath.prototype.getPoint = function(e) {
    for (var t = e * this.getLength(), n = this.getCurveLengths(), i = 0; i < n.length;) {
        if (n[i] >= t) {
            var r = n[i] - t,
                o = this.curves[i],
                a = 1 - r / o.getLength();
            return o.getPointAt(a)
        }
        i++
    }
    return null
}, THREE.CurvePath.prototype.getLength = function() {
    var e = this.getCurveLengths();
    return e[e.length - 1]
}, THREE.CurvePath.prototype.getCurveLengths = function() {
    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
    for (var e = [], t = 0, n = 0, i = this.curves.length; n < i; n++) t += this.curves[n].getLength(), e.push(t);
    return this.cacheLengths = e, e
}, THREE.CurvePath.prototype.createPointsGeometry = function(e) {
    var t = this.getPoints(e, !0);
    return this.createGeometry(t)
}, THREE.CurvePath.prototype.createSpacedPointsGeometry = function(e) {
    var t = this.getSpacedPoints(e, !0);
    return this.createGeometry(t)
}, THREE.CurvePath.prototype.createGeometry = function(e) {
    for (var t = new THREE.Geometry, n = 0, i = e.length; n < i; n++) {
        var r = e[n];
        t.vertices.push(new THREE.Vector3(r.x, r.y, r.z || 0))
    }
    return t
}, THREE.Path = function(e) {
    THREE.CurvePath.call(this), this.actions = [], e && this.fromPoints(e)
}, THREE.Path.prototype = Object.create(THREE.CurvePath.prototype), THREE.Path.prototype.constructor = THREE.Path, THREE.Path.prototype.fromPoints = function(e) {
    this.moveTo(e[0].x, e[0].y);
    for (var t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y)
}, THREE.Path.prototype.moveTo = function(e, t) {
    this.actions.push({
        action: "moveTo",
        args: [e, t]
    })
}, THREE.Path.prototype.lineTo = function(e, t) {
    var n = this.actions[this.actions.length - 1].args,
        i = n[n.length - 2],
        r = n[n.length - 1],
        o = new THREE.LineCurve(new THREE.Vector2(i, r), new THREE.Vector2(e, t));
    this.curves.push(o), this.actions.push({
        action: "lineTo",
        args: [e, t]
    })
}, THREE.Path.prototype.quadraticCurveTo = function(e, t, n, i) {
    var r = this.actions[this.actions.length - 1].args,
        o = r[r.length - 2],
        a = r[r.length - 1],
        s = new THREE.QuadraticBezierCurve(new THREE.Vector2(o, a), new THREE.Vector2(e, t), new THREE.Vector2(n, i));
    this.curves.push(s), this.actions.push({
        action: "quadraticCurveTo",
        args: [e, t, n, i]
    })
}, THREE.Path.prototype.bezierCurveTo = function(e, t, n, i, r, o) {
    var a = this.actions[this.actions.length - 1].args,
        s = a[a.length - 2],
        l = a[a.length - 1],
        c = new THREE.CubicBezierCurve(new THREE.Vector2(s, l), new THREE.Vector2(e, t), new THREE.Vector2(n, i), new THREE.Vector2(r, o));
    this.curves.push(c), this.actions.push({
        action: "bezierCurveTo",
        args: [e, t, n, i, r, o]
    })
}, THREE.Path.prototype.splineThru = function(e) {
    var t = Array.prototype.slice.call(arguments),
        n = this.actions[this.actions.length - 1].args,
        i = n[n.length - 2],
        r = n[n.length - 1],
        o = [new THREE.Vector2(i, r)];
    Array.prototype.push.apply(o, e);
    var a = new THREE.SplineCurve(o);
    this.curves.push(a), this.actions.push({
        action: "splineThru",
        args: t
    })
}, THREE.Path.prototype.arc = function(e, t, n, i, r, o) {
    var a = this.actions[this.actions.length - 1].args,
        s = a[a.length - 2],
        l = a[a.length - 1];
    this.absarc(e + s, t + l, n, i, r, o)
}, THREE.Path.prototype.absarc = function(e, t, n, i, r, o) {
    this.absellipse(e, t, n, n, i, r, o)
}, THREE.Path.prototype.ellipse = function(e, t, n, i, r, o, a, s) {
    var l = this.actions[this.actions.length - 1].args,
        c = l[l.length - 2],
        u = l[l.length - 1];
    this.absellipse(e + c, t + u, n, i, r, o, a, s)
}, THREE.Path.prototype.absellipse = function(e, t, n, i, r, o, a, s) {
    var l = [e, t, n, i, r, o, a, s || 0],
        c = new THREE.EllipseCurve(e, t, n, i, r, o, a, s);
    this.curves.push(c);
    var u = c.getPoint(1);
    l.push(u.x), l.push(u.y), this.actions.push({
        action: "ellipse",
        args: l
    })
}, THREE.Path.prototype.getSpacedPoints = function(e, t) {
    e || (e = 40);
    for (var n = [], i = 0; i < e; i++) n.push(this.getPoint(i / e));
    return n
}, THREE.Path.prototype.getPoints = function(e, t) {
    e = e || 12;
    for (var n = THREE.ShapeUtils.b2, i = THREE.ShapeUtils.b3, r = [], o, a, s, l, c, u, h, d, p, f, m, E = 0, g = this.actions.length; E < g; E++) {
        var v = this.actions[E],
            y = v.action,
            T = v.args;
        switch (y) {
            case "moveTo":
                r.push(new THREE.Vector2(T[0], T[1]));
                break;
            case "lineTo":
                r.push(new THREE.Vector2(T[0], T[1]));
                break;
            case "quadraticCurveTo":
                o = T[2], a = T[3], c = T[0], u = T[1], r.length > 0 ? (p = r[r.length - 1], h = p.x, d = p.y) : (p = this.actions[E - 1].args, h = p[p.length - 2], d = p[p.length - 1]);
                for (var x = 1; x <= e; x++) {
                    var R = x / e;
                    f = n(R, h, c, o), m = n(R, d, u, a), r.push(new THREE.Vector2(f, m))
                }
                break;
            case "bezierCurveTo":
                o = T[4], a = T[5], c = T[0], u = T[1], s = T[2], l = T[3], r.length > 0 ? (p = r[r.length - 1], h = p.x, d = p.y) : (p = this.actions[E - 1].args, h = p[p.length - 2], d = p[p.length - 1]);
                for (var x = 1; x <= e; x++) {
                    var R = x / e;
                    f = i(R, h, c, s, o), m = i(R, d, u, l, a), r.push(new THREE.Vector2(f, m))
                }
                break;
            case "splineThru":
                p = this.actions[E - 1].args;
                var w = new THREE.Vector2(p[p.length - 2], p[p.length - 1]),
                    b = [w],
                    H = e * T[0].length;
                b = b.concat(T[0]);
                for (var S = new THREE.SplineCurve(b), x = 1; x <= H; x++) r.push(S.getPointAt(x / H));
                break;
            case "arc":
                for (var _ = T[0], M = T[1], C = T[2], A = T[3], P = T[4], k = !!T[5], L = P - A, D, O = 2 * e, x = 1; x <= O; x++) {
                    var R = x / O;
                    k || (R = 1 - R), D = A + R * L, f = _ + C * Math.cos(D), m = M + C * Math.sin(D), r.push(new THREE.Vector2(f, m))
                }
                break;
            case "ellipse":
                var _ = T[0],
                    M = T[1],
                    F = T[2],
                    j = T[3],
                    A = T[4],
                    P = T[5],
                    k = !!T[6],
                    V = T[7],
                    L = P - A,
                    D, O = 2 * e,
                    I, N;
                0 !== V && (I = Math.cos(V), N = Math.sin(V));
                for (var x = 1; x <= O; x++) {
                    var R = x / O;
                    if (k || (R = 1 - R), D = A + R * L, f = _ + F * Math.cos(D), m = M + j * Math.sin(D), 0 !== V) {
                        var B = f,
                            z = m;
                        f = (B - _) * I - (z - M) * N + _, m = (B - _) * N + (z - M) * I + M
                    }
                    r.push(new THREE.Vector2(f, m))
                }
        }
    }
    var U = r[r.length - 1];
    return Math.abs(U.x - r[0].x) < Number.EPSILON && Math.abs(U.y - r[0].y) < Number.EPSILON && r.splice(r.length - 1, 1), t && r.push(r[0]), r
}, THREE.Path.prototype.toShapes = function(e, t) {
    function n(e) {
        for (var t = [], n = new THREE.Path, i = 0, r = e.length; i < r; i++) {
            var o = e[i],
                a = o.args,
                s = o.action;
            "moveTo" === s && 0 !== n.actions.length && (t.push(n), n = new THREE.Path), n[s].apply(n, a)
        }
        return 0 !== n.actions.length && t.push(n), t
    }

    function i(e) {
        for (var t = [], n = 0, i = e.length; n < i; n++) {
            var r = e[n],
                o = new THREE.Shape;
            o.actions = r.actions, o.curves = r.curves, t.push(o)
        }
        return t
    }

    function r(e, t) {
        for (var n = t.length, i = !1, r = n - 1, o = 0; o < n; r = o++) {
            var a = t[r],
                s = t[o],
                l = s.x - a.x,
                c = s.y - a.y;
            if (Math.abs(c) > Number.EPSILON) {
                if (c < 0 && (a = t[o], l = -l, s = t[r], c = -c), e.y < a.y || e.y > s.y) continue;
                if (e.y === a.y) {
                    if (e.x === a.x) return !0
                } else {
                    var u = c * (e.x - a.x) - l * (e.y - a.y);
                    if (0 === u) return !0;
                    if (u < 0) continue;
                    i = !i
                }
            } else {
                if (e.y !== a.y) continue;
                if (s.x <= e.x && e.x <= a.x || a.x <= e.x && e.x <= s.x) return !0
            }
        }
        return i
    }
    var o = THREE.ShapeUtils.isClockWise,
        a = n(this.actions);
    if (0 === a.length) return [];
    if (t === !0) return i(a);
    var s, l, c, u = [];
    if (1 === a.length) return l = a[0], c = new THREE.Shape, c.actions = l.actions, c.curves = l.curves, u.push(c), u;
    var h = !o(a[0].getPoints());
    h = e ? !h : h;
    var d = [],
        p = [],
        f = [],
        m = 0,
        E;
    p[m] = void 0, f[m] = [];
    for (var g = 0, v = a.length; g < v; g++) l = a[g], E = l.getPoints(), s = o(E), s = e ? !s : s, s ? (!h && p[m] && m++, p[m] = {
        s: new THREE.Shape,
        p: E
    }, p[m].s.actions = l.actions, p[m].s.curves = l.curves, h && m++, f[m] = []) : f[m].push({
        h: l,
        p: E[0]
    });
    if (!p[0]) return i(a);
    if (p.length > 1) {
        for (var y = !1, T = [], x = 0, R = p.length; x < R; x++) d[x] = [];
        for (var x = 0, R = p.length; x < R; x++)
            for (var w = f[x], b = 0; b < w.length; b++) {
                for (var H = w[b], S = !0, _ = 0; _ < p.length; _++) r(H.p, p[_].p) && (x !== _ && T.push({
                    froms: x,
                    tos: _,
                    hole: b
                }), S ? (S = !1, d[_].push(H)) : y = !0);
                S && d[x].push(H)
            }
        T.length > 0 && (y || (f = d))
    }
    for (var M, g = 0, C = p.length; g < C; g++) {
        c = p[g].s, u.push(c), M = f[g];
        for (var A = 0, P = M.length; A < P; A++) c.holes.push(M[A].h)
    }
    return u
}, THREE.Shape = function() {
    THREE.Path.apply(this, arguments), this.holes = []
}, THREE.Shape.prototype = Object.create(THREE.Path.prototype), THREE.Shape.prototype.constructor = THREE.Shape, THREE.Shape.prototype.extrude = function(e) {
    return new THREE.ExtrudeGeometry(this, e)
}, THREE.Shape.prototype.makeGeometry = function(e) {
    return new THREE.ShapeGeometry(this, e)
}, THREE.Shape.prototype.getPointsHoles = function(e) {
    for (var t = [], n = 0, i = this.holes.length; n < i; n++) t[n] = this.holes[n].getPoints(e);
    return t
}, THREE.Shape.prototype.extractAllPoints = function(e) {
    return {
        shape: this.getPoints(e),
        holes: this.getPointsHoles(e)
    }
}, THREE.Shape.prototype.extractPoints = function(e) {
    return this.extractAllPoints(e)
}, THREE.Shape.Utils = THREE.ShapeUtils, THREE.LineCurve = function(e, t) {
    this.v1 = e, this.v2 = t
}, THREE.LineCurve.prototype = Object.create(THREE.Curve.prototype), THREE.LineCurve.prototype.constructor = THREE.LineCurve, THREE.LineCurve.prototype.getPoint = function(e) {
    var t = this.v2.clone().sub(this.v1);
    return t.multiplyScalar(e).add(this.v1), t
}, THREE.LineCurve.prototype.getPointAt = function(e) {
    return this.getPoint(e)
}, THREE.LineCurve.prototype.getTangent = function(e) {
    var t = this.v2.clone().sub(this.v1);
    return t.normalize()
}, THREE.QuadraticBezierCurve = function(e, t, n) {
    this.v0 = e, this.v1 = t, this.v2 = n
}, THREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype), THREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve, THREE.QuadraticBezierCurve.prototype.getPoint = function(e) {
    var t = THREE.ShapeUtils.b2;
    return new THREE.Vector2(t(e, this.v0.x, this.v1.x, this.v2.x), t(e, this.v0.y, this.v1.y, this.v2.y))
}, THREE.QuadraticBezierCurve.prototype.getTangent = function(e) {
    var t = THREE.CurveUtils.tangentQuadraticBezier;
    return new THREE.Vector2(t(e, this.v0.x, this.v1.x, this.v2.x), t(e, this.v0.y, this.v1.y, this.v2.y)).normalize()
}, THREE.CubicBezierCurve = function(e, t, n, i) {
    this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i
}, THREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype), THREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve, THREE.CubicBezierCurve.prototype.getPoint = function(e) {
    var t = THREE.ShapeUtils.b3;
    return new THREE.Vector2(t(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x), t(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y))
}, THREE.CubicBezierCurve.prototype.getTangent = function(e) {
    var t = THREE.CurveUtils.tangentCubicBezier;
    return new THREE.Vector2(t(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x), t(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y)).normalize()
}, THREE.SplineCurve = function(e) {
    this.points = void 0 == e ? [] : e
}, THREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype), THREE.SplineCurve.prototype.constructor = THREE.SplineCurve, THREE.SplineCurve.prototype.getPoint = function(e) {
    var t = this.points,
        n = (t.length - 1) * e,
        i = Math.floor(n),
        r = n - i,
        o = t[0 === i ? i : i - 1],
        a = t[i],
        s = t[i > t.length - 2 ? t.length - 1 : i + 1],
        l = t[i > t.length - 3 ? t.length - 1 : i + 2],
        c = THREE.CurveUtils.interpolate;
    return new THREE.Vector2(c(o.x, a.x, s.x, l.x, r), c(o.y, a.y, s.y, l.y, r))
}, THREE.EllipseCurve = function(e, t, n, i, r, o, a, s) {
    this.aX = e, this.aY = t, this.xRadius = n, this.yRadius = i, this.aStartAngle = r, this.aEndAngle = o, this.aClockwise = a, this.aRotation = s || 0
}, THREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype), THREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve, THREE.EllipseCurve.prototype.getPoint = function(e) {
    var t = this.aEndAngle - this.aStartAngle;
    t < 0 && (t += 2 * Math.PI), t > 2 * Math.PI && (t -= 2 * Math.PI);
    var n;
    n = this.aClockwise === !0 ? this.aEndAngle + (1 - e) * (2 * Math.PI - t) : this.aStartAngle + e * t;
    var i = this.aX + this.xRadius * Math.cos(n),
        r = this.aY + this.yRadius * Math.sin(n);
    if (0 !== this.aRotation) {
        var o = Math.cos(this.aRotation),
            a = Math.sin(this.aRotation),
            s = i,
            l = r;
        i = (s - this.aX) * o - (l - this.aY) * a + this.aX, r = (s - this.aX) * a + (l - this.aY) * o + this.aY
    }
    return new THREE.Vector2(i, r)
}, THREE.ArcCurve = function(e, t, n, i, r, o) {
    THREE.EllipseCurve.call(this, e, t, n, n, i, r, o)
}, THREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype), THREE.ArcCurve.prototype.constructor = THREE.ArcCurve, THREE.LineCurve3 = THREE.Curve.create(function(e, t) {
    this.v1 = e, this.v2 = t
}, function(e) {
    var t = new THREE.Vector3;
    return t.subVectors(this.v2, this.v1), t.multiplyScalar(e), t.add(this.v1), t
}), THREE.QuadraticBezierCurve3 = THREE.Curve.create(function(e, t, n) {
    this.v0 = e, this.v1 = t, this.v2 = n
}, function(e) {
    var t = THREE.ShapeUtils.b2;
    return new THREE.Vector3(t(e, this.v0.x, this.v1.x, this.v2.x), t(e, this.v0.y, this.v1.y, this.v2.y), t(e, this.v0.z, this.v1.z, this.v2.z))
}), THREE.CubicBezierCurve3 = THREE.Curve.create(function(e, t, n, i) {
    this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i
}, function(e) {
    var t = THREE.ShapeUtils.b3;
    return new THREE.Vector3(t(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x), t(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y), t(e, this.v0.z, this.v1.z, this.v2.z, this.v3.z))
}), THREE.SplineCurve3 = THREE.Curve.create(function(e) {
    console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"), this.points = void 0 == e ? [] : e
}, function(e) {
    var t = this.points,
        n = (t.length - 1) * e,
        i = Math.floor(n),
        r = n - i,
        o = t[0 == i ? i : i - 1],
        a = t[i],
        s = t[i > t.length - 2 ? t.length - 1 : i + 1],
        l = t[i > t.length - 3 ? t.length - 1 : i + 2],
        c = THREE.CurveUtils.interpolate;
    return new THREE.Vector3(c(o.x, a.x, s.x, l.x, r), c(o.y, a.y, s.y, l.y, r), c(o.z, a.z, s.z, l.z, r))
}), THREE.CatmullRomCurve3 = function() {
    function e() {}
    var t = new THREE.Vector3,
        n = new e,
        i = new e,
        r = new e;
    return e.prototype.init = function(e, t, n, i) {
        this.c0 = e, this.c1 = n, this.c2 = -3 * e + 3 * t - 2 * n - i, this.c3 = 2 * e - 2 * t + n + i
    }, e.prototype.initNonuniformCatmullRom = function(e, t, n, i, r, o, a) {
        var s = (t - e) / r - (n - e) / (r + o) + (n - t) / o,
            l = (n - t) / o - (i - t) / (o + a) + (i - n) / a;
        s *= o, l *= o, this.init(t, n, s, l)
    }, e.prototype.initCatmullRom = function(e, t, n, i, r) {
        this.init(t, n, r * (n - e), r * (i - t))
    }, e.prototype.calc = function(e) {
        var t = e * e,
            n = t * e;
        return this.c0 + this.c1 * e + this.c2 * t + this.c3 * n
    }, THREE.Curve.create(function(e) {
        this.points = e || []
    }, function(e) {
        var o = this.points,
            a, s, l, c;
        c = o.length, c < 2 && console.log("duh, you need at least 2 points"), a = (c - 1) * e, s = Math.floor(a), l = a - s, 0 === l && s === c - 1 && (s = c - 2, l = 1);
        var u, h, d, p;
        if (0 === s ? (t.subVectors(o[0], o[1]).add(o[0]), u = t) : u = o[s - 1], h = o[s], d = o[s + 1], s + 2 < c ? p = o[s + 2] : (t.subVectors(o[c - 1], o[c - 2]).add(o[c - 2]), p = t), void 0 === this.type || "centripetal" === this.type || "chordal" === this.type) {
            var f = "chordal" === this.type ? .5 : .25,
                m = Math.pow(u.distanceToSquared(h), f),
                E = Math.pow(h.distanceToSquared(d), f),
                g = Math.pow(d.distanceToSquared(p), f);
            E < 1e-4 && (E = 1), m < 1e-4 && (m = E), g < 1e-4 && (g = E), n.initNonuniformCatmullRom(u.x, h.x, d.x, p.x, m, E, g), i.initNonuniformCatmullRom(u.y, h.y, d.y, p.y, m, E, g), r.initNonuniformCatmullRom(u.z, h.z, d.z, p.z, m, E, g)
        } else if ("catmullrom" === this.type) {
            var v = void 0 !== this.tension ? this.tension : .5;
            n.initCatmullRom(u.x, h.x, d.x, p.x, v), i.initCatmullRom(u.y, h.y, d.y, p.y, v), r.initCatmullRom(u.z, h.z, d.z, p.z, v)
        }
        var y = new THREE.Vector3(n.calc(l), i.calc(l), r.calc(l));
        return y
    })
}(), THREE.ClosedSplineCurve3 = THREE.Curve.create(function(e) {
    this.points = void 0 == e ? [] : e
}, function(e) {
    var t = this.points,
        n = (t.length - 0) * e,
        i = Math.floor(n),
        r = n - i;
    i += i > 0 ? 0 : (Math.floor(Math.abs(i) / t.length) + 1) * t.length;
    var o = t[(i - 1) % t.length],
        a = t[i % t.length],
        s = t[(i + 1) % t.length],
        l = t[(i + 2) % t.length],
        c = THREE.CurveUtils.interpolate;
    return new THREE.Vector3(c(o.x, a.x, s.x, l.x, r), c(o.y, a.y, s.y, l.y, r), c(o.z, a.z, s.z, l.z, r))
}), THREE.BoxGeometry = function(e, t, n, i, r, o) {
    function a(e, t, n, i, r, o, a, l) {
        var c, u, h, d = s.widthSegments,
            p = s.heightSegments,
            f = r / 2,
            m = o / 2,
            E = s.vertices.length;
        "x" === e && "y" === t || "y" === e && "x" === t ? c = "z" : "x" === e && "z" === t || "z" === e && "x" === t ? (c = "y", p = s.depthSegments) : ("z" === e && "y" === t || "y" === e && "z" === t) && (c = "x", d = s.depthSegments);
        var g = d + 1,
            v = p + 1,
            y = r / d,
            T = o / p,
            x = new THREE.Vector3;
        for (x[c] = a > 0 ? 1 : -1, h = 0; h < v; h++)
            for (u = 0; u < g; u++) {
                var R = new THREE.Vector3;
                R[e] = (u * y - f) * n, R[t] = (h * T - m) * i, R[c] = a, s.vertices.push(R)
            }
        for (h = 0; h < p; h++)
            for (u = 0; u < d; u++) {
                var w = u + g * h,
                    b = u + g * (h + 1),
                    H = u + 1 + g * (h + 1),
                    S = u + 1 + g * h,
                    _ = new THREE.Vector2(u / d, 1 - h / p),
                    M = new THREE.Vector2(u / d, 1 - (h + 1) / p),
                    C = new THREE.Vector2((u + 1) / d, 1 - (h + 1) / p),
                    A = new THREE.Vector2((u + 1) / d, 1 - h / p),
                    P = new THREE.Face3(w + E, b + E, S + E);
                P.normal.copy(x), P.vertexNormals.push(x.clone(), x.clone(), x.clone()), P.materialIndex = l, s.faces.push(P), s.faceVertexUvs[0].push([_, M, A]), P = new THREE.Face3(b + E, H + E, S + E), P.normal.copy(x), P.vertexNormals.push(x.clone(), x.clone(), x.clone()), P.materialIndex = l, s.faces.push(P), s.faceVertexUvs[0].push([M.clone(), C, A.clone()])
            }
    }
    THREE.Geometry.call(this), this.type = "BoxGeometry", this.parameters = {
        width: e,
        height: t,
        depth: n,
        widthSegments: i,
        heightSegments: r,
        depthSegments: o
    }, this.widthSegments = i || 1, this.heightSegments = r || 1, this.depthSegments = o || 1;
    var s = this,
        l = e / 2,
        c = t / 2,
        u = n / 2;
    a("z", "y", -1, -1, n, t, l, 0), a("z", "y", 1, -1, n, t, -l, 1), a("x", "z", 1, 1, e, n, c, 2), a("x", "z", 1, -1, e, n, -c, 3), a("x", "y", 1, -1, e, t, u, 4), a("x", "y", -1, -1, e, t, -u, 5), this.mergeVertices()
}, THREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry, THREE.BoxGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.BoxGeometry(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments)
}, THREE.CubeGeometry = THREE.BoxGeometry, THREE.CircleGeometry = function(e, t, n, i) {
    THREE.Geometry.call(this), this.type = "CircleGeometry", this.parameters = {
        radius: e,
        segments: t,
        thetaStart: n,
        thetaLength: i
    }, this.fromBufferGeometry(new THREE.CircleBufferGeometry(e, t, n, i))
}, THREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry, THREE.CircleGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.CircleGeometry(e.radius, e.segments, e.thetaStart, e.thetaLength)
}, THREE.CircleBufferGeometry = function(e, t, n, i) {
    THREE.BufferGeometry.call(this), this.type = "CircleBufferGeometry", this.parameters = {
        radius: e,
        segments: t,
        thetaStart: n,
        thetaLength: i
    }, e = e || 50, t = void 0 !== t ? Math.max(3, t) : 8, n = void 0 !== n ? n : 0, i = void 0 !== i ? i : 2 * Math.PI;
    var r = t + 2,
        o = new Float32Array(3 * r),
        a = new Float32Array(3 * r),
        s = new Float32Array(2 * r);
    a[2] = 1, s[0] = .5, s[1] = .5;
    for (var l = 0, c = 3, u = 2; l <= t; l++, c += 3, u += 2) {
        var h = n + l / t * i;
        o[c] = e * Math.cos(h), o[c + 1] = e * Math.sin(h), a[c + 2] = 1, s[u] = (o[c] / e + 1) / 2, s[u + 1] = (o[c + 1] / e + 1) / 2
    }
    for (var d = [], c = 1; c <= t; c++) d.push(c, c + 1, 0);
    this.setIndex(new THREE.BufferAttribute(new Uint16Array(d), 1)), this.addAttribute("position", new THREE.BufferAttribute(o, 3)), this.addAttribute("normal", new THREE.BufferAttribute(a, 3)), this.addAttribute("uv", new THREE.BufferAttribute(s, 2)), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, e)
}, THREE.CircleBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype), THREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry, THREE.CircleBufferGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.CircleBufferGeometry(e.radius, e.segments, e.thetaStart, e.thetaLength)
}, THREE.CylinderGeometry = function(e, t, n, i, r, o, a, s) {
    THREE.Geometry.call(this), this.type = "CylinderGeometry", this.parameters = {
        radiusTop: e,
        radiusBottom: t,
        height: n,
        radialSegments: i,
        heightSegments: r,
        openEnded: o,
        thetaStart: a,
        thetaLength: s
    }, e = void 0 !== e ? e : 20, t = void 0 !== t ? t : 20, n = void 0 !== n ? n : 100, i = i || 8, r = r || 1, o = void 0 !== o && o, a = void 0 !== a ? a : 0, s = void 0 !== s ? s : 2 * Math.PI;
    var l = n / 2,
        c, u, h = [],
        d = [];
    for (u = 0; u <= r; u++) {
        var p = [],
            f = [],
            m = u / r,
            E = m * (t - e) + e;
        for (c = 0; c <= i; c++) {
            var g = c / i,
                v = new THREE.Vector3;
            v.x = E * Math.sin(g * s + a), v.y = -m * n + l, v.z = E * Math.cos(g * s + a), this.vertices.push(v), p.push(this.vertices.length - 1), f.push(new THREE.Vector2(g, 1 - m))
        }
        h.push(p), d.push(f)
    }
    var y = (t - e) / n,
        T, x;
    for (c = 0; c < i; c++)
        for (0 !== e ? (T = this.vertices[h[0][c]].clone(), x = this.vertices[h[0][c + 1]].clone()) : (T = this.vertices[h[1][c]].clone(), x = this.vertices[h[1][c + 1]].clone()), T.setY(Math.sqrt(T.x * T.x + T.z * T.z) * y).normalize(), x.setY(Math.sqrt(x.x * x.x + x.z * x.z) * y).normalize(), u = 0; u < r; u++) {
            var R = h[u][c],
                w = h[u + 1][c],
                b = h[u + 1][c + 1],
                H = h[u][c + 1],
                S = T.clone(),
                _ = T.clone(),
                M = x.clone(),
                C = x.clone(),
                A = d[u][c].clone(),
                P = d[u + 1][c].clone(),
                k = d[u + 1][c + 1].clone(),
                L = d[u][c + 1].clone();
            this.faces.push(new THREE.Face3(R, w, H, [S, _, C])), this.faceVertexUvs[0].push([A, P, L]), this.faces.push(new THREE.Face3(w, b, H, [_.clone(), M, C.clone()])), this.faceVertexUvs[0].push([P.clone(), k, L.clone()])
        }
    if (o === !1 && e > 0)
        for (this.vertices.push(new THREE.Vector3(0, l, 0)), c = 0; c < i; c++) {
            var R = h[0][c],
                w = h[0][c + 1],
                b = this.vertices.length - 1,
                S = new THREE.Vector3(0, 1, 0),
                _ = new THREE.Vector3(0, 1, 0),
                M = new THREE.Vector3(0, 1, 0),
                A = d[0][c].clone(),
                P = d[0][c + 1].clone(),
                k = new THREE.Vector2(P.x, 0);
            this.faces.push(new THREE.Face3(R, w, b, [S, _, M], void 0, 1)), this.faceVertexUvs[0].push([A, P, k])
        }
    if (o === !1 && t > 0)
        for (this.vertices.push(new THREE.Vector3(0, -l, 0)), c = 0; c < i; c++) {
            var R = h[r][c + 1],
                w = h[r][c],
                b = this.vertices.length - 1,
                S = new THREE.Vector3(0, -1, 0),
                _ = new THREE.Vector3(0, -1, 0),
                M = new THREE.Vector3(0, -1, 0),
                A = d[r][c + 1].clone(),
                P = d[r][c].clone(),
                k = new THREE.Vector2(P.x, 1);
            this.faces.push(new THREE.Face3(R, w, b, [S, _, M], void 0, 2)), this.faceVertexUvs[0].push([A, P, k])
        }
    this.computeFaceNormals()
}, THREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry, THREE.CylinderGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.CylinderGeometry(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength)
}, THREE.EdgesGeometry = function(e, t) {
    function n(e, t) {
        return e - t
    }
    THREE.BufferGeometry.call(this), t = void 0 !== t ? t : 1;
    var i = Math.cos(THREE.Math.degToRad(t)),
        r = [0, 0],
        o = {},
        a = ["a", "b", "c"],
        s;
    e instanceof THREE.BufferGeometry ? (s = new THREE.Geometry, s.fromBufferGeometry(e)) : s = e.clone(), s.mergeVertices(), s.computeFaceNormals();
    for (var l = s.vertices, c = s.faces, u = 0, h = c.length; u < h; u++)
        for (var d = c[u], p = 0; p < 3; p++) {
            r[0] = d[a[p]], r[1] = d[a[(p + 1) % 3]], r.sort(n);
            var f = r.toString();
            void 0 === o[f] ? o[f] = {
                vert1: r[0],
                vert2: r[1],
                face1: u,
                face2: void 0
            } : o[f].face2 = u
        }
    var m = [];
    for (var f in o) {
        var E = o[f];
        if (void 0 === E.face2 || c[E.face1].normal.dot(c[E.face2].normal) <= i) {
            var g = l[E.vert1];
            m.push(g.x), m.push(g.y), m.push(g.z), g = l[E.vert2], m.push(g.x), m.push(g.y), m.push(g.z)
        }
    }
    this.addAttribute("position", new THREE.BufferAttribute(new Float32Array(m), 3))
}, THREE.EdgesGeometry.prototype = Object.create(THREE.BufferGeometry.prototype), THREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry, THREE.ExtrudeGeometry = function(e, t) {
    return "undefined" == typeof e ? void(e = []) : (THREE.Geometry.call(this), this.type = "ExtrudeGeometry", e = Array.isArray(e) ? e : [e], this.addShapeList(e, t), void this.computeFaceNormals())
}, THREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry, THREE.ExtrudeGeometry.prototype.addShapeList = function(e, t) {
    for (var n = e.length, i = 0; i < n; i++) {
        var r = e[i];
        this.addShape(r, t)
    }
}, THREE.ExtrudeGeometry.prototype.addShape = function(e, t) {
    function n(e, t, n) {
        return t || console.error("THREE.ExtrudeGeometry: vec does not exist"), t.clone().multiplyScalar(n).add(e)
    }

    function i(e, t, n) {
        var i, r, o = 1,
            a = e.x - t.x,
            s = e.y - t.y,
            l = n.x - e.x,
            c = n.y - e.y,
            u = a * a + s * s,
            h = a * c - s * l;
        if (Math.abs(h) > Number.EPSILON) {
            var d = Math.sqrt(u),
                p = Math.sqrt(l * l + c * c),
                f = t.x - s / d,
                m = t.y + a / d,
                E = n.x - c / p,
                g = n.y + l / p,
                v = ((E - f) * c - (g - m) * l) / (a * c - s * l);
            i = f + a * v - e.x, r = m + s * v - e.y;
            var y = i * i + r * r;
            if (y <= 2) return new THREE.Vector2(i, r);
            o = Math.sqrt(y / 2)
        } else {
            var T = !1;
            a > Number.EPSILON ? l > Number.EPSILON && (T = !0) : a < -Number.EPSILON ? l < -Number.EPSILON && (T = !0) : Math.sign(s) === Math.sign(c) && (T = !0), T ? (i = -s, r = a, o = Math.sqrt(u)) : (i = a, r = s, o = Math.sqrt(u / 2))
        }
        return new THREE.Vector2(i / o, r / o)
    }

    function r() {
        if (f) {
            var e = 0,
                t = B * e;
            for (W = 0; W < U; W++) z = D[W], l(z[2] + t, z[1] + t, z[0] + t);
            for (e = E + 2 * p, t = B * e, W = 0; W < U; W++) z = D[W], l(z[0] + t, z[1] + t, z[2] + t)
        } else {
            for (W = 0; W < U; W++) z = D[W], l(z[2], z[1], z[0]);
            for (W = 0; W < U; W++) z = D[W], l(z[0] + B * E, z[1] + B * E, z[2] + B * E)
        }
    }

    function o() {
        var e = 0;
        for (a(O, e), e += O.length, S = 0, _ = k.length; S < _; S++) H = k[S], a(H, e), e += H.length
    }

    function a(e, t) {
        var n, i;
        for (W = e.length; --W >= 0;) {
            n = W, i = W - 1, i < 0 && (i = e.length - 1);
            var r = 0,
                o = E + 2 * p;
            for (r = 0; r < o; r++) {
                var a = B * r,
                    s = B * (r + 1),
                    l = t + n + a,
                    u = t + i + a,
                    h = t + i + s,
                    d = t + n + s;
                c(l, u, h, d, e, r, o, n, i)
            }
        }
    }

    function s(e, t, n) {
        M.vertices.push(new THREE.Vector3(e, t, n))
    }

    function l(e, t, n) {
        e += C, t += C, n += C, M.faces.push(new THREE.Face3(e, t, n, null, null, 0));
        var i = T.generateTopUV(M, e, t, n);
        M.faceVertexUvs[0].push(i)
    }

    function c(e, t, n, i, r, o, a, s, l) {
        e += C, t += C, n += C, i += C, M.faces.push(new THREE.Face3(e, t, i, null, null, 1)), M.faces.push(new THREE.Face3(t, n, i, null, null, 1));
        var c = T.generateSideWallUV(M, e, t, n, i);
        M.faceVertexUvs[0].push([c[0], c[1], c[3]]), M.faceVertexUvs[0].push([c[1], c[2], c[3]])
    }
    var u = void 0 !== t.amount ? t.amount : 100,
        h = void 0 !== t.bevelThickness ? t.bevelThickness : 6,
        d = void 0 !== t.bevelSize ? t.bevelSize : h - 2,
        p = void 0 !== t.bevelSegments ? t.bevelSegments : 3,
        f = void 0 === t.bevelEnabled || t.bevelEnabled,
        m = void 0 !== t.curveSegments ? t.curveSegments : 12,
        E = void 0 !== t.steps ? t.steps : 1,
        g = t.extrudePath,
        v, y = !1,
        T = void 0 !== t.UVGenerator ? t.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator,
        x, R, w, b;
    g && (v = g.getSpacedPoints(E), y = !0, f = !1, x = void 0 !== t.frames ? t.frames : new THREE.TubeGeometry.FrenetFrames(g, E, !1), R = new THREE.Vector3, w = new THREE.Vector3, b = new THREE.Vector3), f || (p = 0, h = 0, d = 0);
    var H, S, _, M = this,
        C = this.vertices.length,
        A = e.extractPoints(m),
        P = A.shape,
        k = A.holes,
        L = !THREE.ShapeUtils.isClockWise(P);
    if (L) {
        for (P = P.reverse(), S = 0, _ = k.length; S < _; S++) H = k[S], THREE.ShapeUtils.isClockWise(H) && (k[S] = H.reverse());
        L = !1
    }
    var D = THREE.ShapeUtils.triangulateShape(P, k),
        O = P;
    for (S = 0, _ = k.length; S < _; S++) H = k[S], P = P.concat(H);
    for (var F, j, V, I, N, B = P.length, z, U = D.length, G = [], W = 0, q = O.length, X = q - 1, Y = W + 1; W < q; W++, X++, Y++) X === q && (X = 0), Y === q && (Y = 0), G[W] = i(O[W], O[X], O[Y]);
    var Z = [],
        K, Q = G.concat();
    for (S = 0, _ = k.length; S < _; S++) {
        for (H = k[S], K = [], W = 0, q = H.length, X = q - 1, Y = W + 1; W < q; W++, X++, Y++) X === q && (X = 0), Y === q && (Y = 0), K[W] = i(H[W], H[X], H[Y]);
        Z.push(K), Q = Q.concat(K)
    }
    for (F = 0; F < p; F++) {
        for (V = F / p, I = h * (1 - V), j = d * Math.sin(V * Math.PI / 2), W = 0, q = O.length; W < q; W++) N = n(O[W], G[W], j), s(N.x, N.y, -I);
        for (S = 0, _ = k.length; S < _; S++)
            for (H = k[S], K = Z[S], W = 0, q = H.length; W < q; W++) N = n(H[W], K[W], j), s(N.x, N.y, -I)
    }
    for (j = d, W = 0; W < B; W++) N = f ? n(P[W], Q[W], j) : P[W], y ? (w.copy(x.normals[0]).multiplyScalar(N.x), R.copy(x.binormals[0]).multiplyScalar(N.y), b.copy(v[0]).add(w).add(R), s(b.x, b.y, b.z)) : s(N.x, N.y, 0);
    var J;
    for (J = 1; J <= E; J++)
        for (W = 0; W < B; W++) N = f ? n(P[W], Q[W], j) : P[W], y ? (w.copy(x.normals[J]).multiplyScalar(N.x), R.copy(x.binormals[J]).multiplyScalar(N.y), b.copy(v[J]).add(w).add(R), s(b.x, b.y, b.z)) : s(N.x, N.y, u / E * J);
    for (F = p - 1; F >= 0; F--) {
        for (V = F / p, I = h * (1 - V), j = d * Math.sin(V * Math.PI / 2), W = 0, q = O.length; W < q; W++) N = n(O[W], G[W], j), s(N.x, N.y, u + I);
        for (S = 0, _ = k.length; S < _; S++)
            for (H = k[S], K = Z[S], W = 0, q = H.length; W < q; W++) N = n(H[W], K[W], j), y ? s(N.x, N.y + v[E - 1].y, v[E - 1].x + I) : s(N.x, N.y, u + I)
    }
    r(), o()
}, THREE.ExtrudeGeometry.WorldUVGenerator = {
    generateTopUV: function(e, t, n, i) {
        var r = e.vertices,
            o = r[t],
            a = r[n],
            s = r[i];
        return [new THREE.Vector2(o.x, o.y), new THREE.Vector2(a.x, a.y), new THREE.Vector2(s.x, s.y)]
    },
    generateSideWallUV: function(e, t, n, i, r) {
        var o = e.vertices,
            a = o[t],
            s = o[n],
            l = o[i],
            c = o[r];
        return Math.abs(a.y - s.y) < .01 ? [new THREE.Vector2(a.x, 1 - a.z), new THREE.Vector2(s.x, 1 - s.z), new THREE.Vector2(l.x, 1 - l.z), new THREE.Vector2(c.x, 1 - c.z)] : [new THREE.Vector2(a.y, 1 - a.z), new THREE.Vector2(s.y, 1 - s.z), new THREE.Vector2(l.y, 1 - l.z), new THREE.Vector2(c.y, 1 - c.z)]
    }
}, THREE.ShapeGeometry = function(e, t) {
    THREE.Geometry.call(this), this.type = "ShapeGeometry", Array.isArray(e) === !1 && (e = [e]), this.addShapeList(e, t), this.computeFaceNormals()
}, THREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry, THREE.ShapeGeometry.prototype.addShapeList = function(e, t) {
    for (var n = 0, i = e.length; n < i; n++) this.addShape(e[n], t);
    return this
}, THREE.ShapeGeometry.prototype.addShape = function(e, t) {
    void 0 === t && (t = {});
    var n = void 0 !== t.curveSegments ? t.curveSegments : 12,
        i = t.material,
        r = void 0 === t.UVGenerator ? THREE.ExtrudeGeometry.WorldUVGenerator : t.UVGenerator,
        o, a, s, l = this.vertices.length,
        c = e.extractPoints(n),
        u = c.shape,
        h = c.holes,
        d = !THREE.ShapeUtils.isClockWise(u);
    if (d) {
        for (u = u.reverse(), o = 0, a = h.length; o < a; o++) s = h[o], THREE.ShapeUtils.isClockWise(s) && (h[o] = s.reverse());
        d = !1
    }
    var p = THREE.ShapeUtils.triangulateShape(u, h);
    for (o = 0, a = h.length; o < a; o++) s = h[o], u = u.concat(s);
    var f, m = u.length,
        E, g = p.length;
    for (o = 0; o < m; o++) f = u[o], this.vertices.push(new THREE.Vector3(f.x, f.y, 0));
    for (o = 0; o < g; o++) {
        E = p[o];
        var v = E[0] + l,
            y = E[1] + l,
            T = E[2] + l;
        this.faces.push(new THREE.Face3(v, y, T, null, null, i)), this.faceVertexUvs[0].push(r.generateTopUV(this, v, y, T))
    }
}, THREE.LatheGeometry = function(e, t, n, i) {
    THREE.Geometry.call(this), this.type = "LatheGeometry", this.parameters = {
        points: e,
        segments: t,
        phiStart: n,
        phiLength: i
    }, t = t || 12, n = n || 0, i = i || 2 * Math.PI;
    for (var r = 1 / (e.length - 1), o = 1 / t, a = 0, s = t; a <= s; a++)
        for (var l = n + a * o * i, c = Math.cos(l), u = Math.sin(l), h = 0, d = e.length; h < d; h++) {
            var p = e[h],
                f = new THREE.Vector3;
            f.x = c * p.x - u * p.y, f.y = u * p.x + c * p.y, f.z = p.z, this.vertices.push(f)
        }
    for (var m = e.length, a = 0, s = t; a < s; a++)
        for (var h = 0, d = e.length - 1; h < d; h++) {
            var E = h + m * a,
                g = E,
                v = E + m,
                c = E + 1 + m,
                y = E + 1,
                T = a * o,
                x = h * r,
                R = T + o,
                w = x + r;
            this.faces.push(new THREE.Face3(g, v, y)), this.faceVertexUvs[0].push([new THREE.Vector2(T, x), new THREE.Vector2(R, x), new THREE.Vector2(T, w)]), this.faces.push(new THREE.Face3(v, c, y)), this.faceVertexUvs[0].push([new THREE.Vector2(R, x), new THREE.Vector2(R, w), new THREE.Vector2(T, w)])
        }
    this.mergeVertices(), this.computeFaceNormals(), this.computeVertexNormals()
}, THREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry, THREE.PlaneGeometry = function(e, t, n, i) {
    THREE.Geometry.call(this), this.type = "PlaneGeometry", this.parameters = {
        width: e,
        height: t,
        widthSegments: n,
        heightSegments: i
    }, this.fromBufferGeometry(new THREE.PlaneBufferGeometry(e, t, n, i))
}, THREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry, THREE.PlaneGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.PlaneGeometry(e.width, e.height, e.widthSegments, e.heightSegments)
}, THREE.PlaneBufferGeometry = function(e, t, n, i) {
    THREE.BufferGeometry.call(this), this.type = "PlaneBufferGeometry", this.parameters = {
        width: e,
        height: t,
        widthSegments: n,
        heightSegments: i
    };
    for (var r = e / 2, o = t / 2, a = Math.floor(n) || 1, s = Math.floor(i) || 1, l = a + 1, c = s + 1, u = e / a, h = t / s, d = new Float32Array(l * c * 3), p = new Float32Array(l * c * 3), f = new Float32Array(l * c * 2), m = 0, E = 0, g = 0; g < c; g++)
        for (var v = g * h - o, y = 0; y < l; y++) {
            var T = y * u - r;
            d[m] = T, d[m + 1] = -v, p[m + 2] = 1, f[E] = y / a, f[E + 1] = 1 - g / s, m += 3, E += 2
        }
    m = 0;
    for (var x = new(d.length / 3 > 65535 ? Uint32Array : Uint16Array)(a * s * 6), g = 0; g < s; g++)
        for (var y = 0; y < a; y++) {
            var R = y + l * g,
                w = y + l * (g + 1),
                b = y + 1 + l * (g + 1),
                H = y + 1 + l * g;
            x[m] = R, x[m + 1] = w, x[m + 2] = H, x[m + 3] = w, x[m + 4] = b, x[m + 5] = H, m += 6
        }
    this.setIndex(new THREE.BufferAttribute(x, 1)), this.addAttribute("position", new THREE.BufferAttribute(d, 3)), this.addAttribute("normal", new THREE.BufferAttribute(p, 3)), this.addAttribute("uv", new THREE.BufferAttribute(f, 2))
}, THREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype), THREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry, THREE.PlaneBufferGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.PlaneBufferGeometry(e.width, e.height, e.widthSegments, e.heightSegments)
}, THREE.RingGeometry = function(e, t, n, i, r, o) {
    THREE.Geometry.call(this), this.type = "RingGeometry", this.parameters = {
        innerRadius: e,
        outerRadius: t,
        thetaSegments: n,
        phiSegments: i,
        thetaStart: r,
        thetaLength: o
    }, e = e || 0, t = t || 50, r = void 0 !== r ? r : 0, o = void 0 !== o ? o : 2 * Math.PI, n = void 0 !== n ? Math.max(3, n) : 8, i = void 0 !== i ? Math.max(1, i) : 8;
    var a, s, l = [],
        c = e,
        u = (t - e) / i;
    for (a = 0; a < i + 1; a++) {
        for (s = 0; s < n + 1; s++) {
            var h = new THREE.Vector3,
                d = r + s / n * o;
            h.x = c * Math.cos(d), h.y = c * Math.sin(d), this.vertices.push(h), l.push(new THREE.Vector2((h.x / t + 1) / 2, (h.y / t + 1) / 2))
        }
        c += u
    }
    var p = new THREE.Vector3(0, 0, 1);
    for (a = 0; a < i; a++) {
        var f = a * (n + 1);
        for (s = 0; s < n; s++) {
            var d = s + f,
                m = d,
                E = d + n + 1,
                g = d + n + 2;
            this.faces.push(new THREE.Face3(m, E, g, [p.clone(), p.clone(), p.clone()])), this.faceVertexUvs[0].push([l[m].clone(), l[E].clone(), l[g].clone()]), m = d, E = d + n + 2, g = d + 1, this.faces.push(new THREE.Face3(m, E, g, [p.clone(), p.clone(), p.clone()])), this.faceVertexUvs[0].push([l[m].clone(), l[E].clone(), l[g].clone()])
        }
    }
    this.computeFaceNormals(), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, c)
}, THREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.RingGeometry.prototype.constructor = THREE.RingGeometry, THREE.RingGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.RingGeometry(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength)
}, THREE.SphereGeometry = function(e, t, n, i, r, o, a) {
    THREE.Geometry.call(this), this.type = "SphereGeometry", this.parameters = {
        radius: e,
        widthSegments: t,
        heightSegments: n,
        phiStart: i,
        phiLength: r,
        thetaStart: o,
        thetaLength: a
    }, this.fromBufferGeometry(new THREE.SphereBufferGeometry(e, t, n, i, r, o, a))
}, THREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry, THREE.SphereGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.SphereGeometry(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength)
}, THREE.SphereBufferGeometry = function(e, t, n, i, r, o, a) {
    THREE.BufferGeometry.call(this), this.type = "SphereBufferGeometry", this.parameters = {
        radius: e,
        widthSegments: t,
        heightSegments: n,
        phiStart: i,
        phiLength: r,
        thetaStart: o,
        thetaLength: a
    }, e = e || 50, t = Math.max(3, Math.floor(t) || 8), n = Math.max(2, Math.floor(n) || 6), i = void 0 !== i ? i : 0, r = void 0 !== r ? r : 2 * Math.PI, o = void 0 !== o ? o : 0, a = void 0 !== a ? a : Math.PI;
    for (var s = o + a, l = (t + 1) * (n + 1), c = new THREE.BufferAttribute(new Float32Array(3 * l), 3), u = new THREE.BufferAttribute(new Float32Array(3 * l), 3), h = new THREE.BufferAttribute(new Float32Array(2 * l), 2), d = 0, p = [], f = new THREE.Vector3, m = 0; m <= n; m++) {
        for (var E = [], g = m / n, v = 0; v <= t; v++) {
            var y = v / t,
                T = -e * Math.cos(i + y * r) * Math.sin(o + g * a),
                x = e * Math.cos(o + g * a),
                R = e * Math.sin(i + y * r) * Math.sin(o + g * a);
            f.set(T, x, R).normalize(), c.setXYZ(d, T, x, R), u.setXYZ(d, f.x, f.y, f.z), h.setXY(d, y, 1 - g), E.push(d), d++
        }
        p.push(E)
    }
    for (var w = [], m = 0; m < n; m++)
        for (var v = 0; v < t; v++) {
            var b = p[m][v + 1],
                H = p[m][v],
                S = p[m + 1][v],
                _ = p[m + 1][v + 1];
            (0 !== m || o > 0) && w.push(b, H, _), (m !== n - 1 || s < Math.PI) && w.push(H, S, _)
        }
    this.setIndex(new(c.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute)(w, 1)), this.addAttribute("position", c), this.addAttribute("normal", u), this.addAttribute("uv", h), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, e)
}, THREE.SphereBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype), THREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry, THREE.SphereBufferGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.SphereBufferGeometry(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength)
}, THREE.TorusGeometry = function(e, t, n, i, r) {
    THREE.Geometry.call(this), this.type = "TorusGeometry", this.parameters = {
        radius: e,
        tube: t,
        radialSegments: n,
        tubularSegments: i,
        arc: r
    }, e = e || 100, t = t || 40, n = n || 8, i = i || 6, r = r || 2 * Math.PI;
    for (var o = new THREE.Vector3, a = [], s = [], l = 0; l <= n; l++)
        for (var c = 0; c <= i; c++) {
            var u = c / i * r,
                h = l / n * Math.PI * 2;
            o.x = e * Math.cos(u), o.y = e * Math.sin(u);
            var d = new THREE.Vector3;
            d.x = (e + t * Math.cos(h)) * Math.cos(u), d.y = (e + t * Math.cos(h)) * Math.sin(u), d.z = t * Math.sin(h), this.vertices.push(d), a.push(new THREE.Vector2(c / i, l / n)), s.push(d.clone().sub(o).normalize())
        }
    for (var l = 1; l <= n; l++)
        for (var c = 1; c <= i; c++) {
            var p = (i + 1) * l + c - 1,
                f = (i + 1) * (l - 1) + c - 1,
                m = (i + 1) * (l - 1) + c,
                E = (i + 1) * l + c,
                g = new THREE.Face3(p, f, E, [s[p].clone(), s[f].clone(), s[E].clone()]);
            this.faces.push(g), this.faceVertexUvs[0].push([a[p].clone(), a[f].clone(), a[E].clone()]), g = new THREE.Face3(f, m, E, [s[f].clone(), s[m].clone(), s[E].clone()]), this.faces.push(g), this.faceVertexUvs[0].push([a[f].clone(), a[m].clone(), a[E].clone()])
        }
    this.computeFaceNormals()
}, THREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry, THREE.TorusGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.TorusGeometry(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc)
}, THREE.TorusKnotGeometry = function(e, t, n, i, r, o, a) {
    function s(e, t, n, i, r) {
        var o = Math.cos(e),
            a = Math.sin(e),
            s = t / n * e,
            l = Math.cos(s),
            c = i * (2 + l) * .5 * o,
            u = i * (2 + l) * a * .5,
            h = r * i * Math.sin(s) * .5;
        return new THREE.Vector3(c, u, h)
    }
    THREE.Geometry.call(this), this.type = "TorusKnotGeometry", this.parameters = {
        radius: e,
        tube: t,
        radialSegments: n,
        tubularSegments: i,
        p: r,
        q: o,
        heightScale: a
    }, e = e || 100, t = t || 40, n = n || 64, i = i || 8, r = r || 2, o = o || 3, a = a || 1;
    for (var l = new Array(n), c = new THREE.Vector3, u = new THREE.Vector3, h = new THREE.Vector3, d = 0; d < n; ++d) {
        l[d] = new Array(i);
        var p = d / n * 2 * r * Math.PI,
            f = s(p, o, r, e, a),
            m = s(p + .01, o, r, e, a);
        c.subVectors(m, f), u.addVectors(m, f), h.crossVectors(c, u), u.crossVectors(h, c), h.normalize(), u.normalize();
        for (var E = 0; E < i; ++E) {
            var g = E / i * 2 * Math.PI,
                v = -t * Math.cos(g),
                y = t * Math.sin(g),
                T = new THREE.Vector3;
            T.x = f.x + v * u.x + y * h.x, T.y = f.y + v * u.y + y * h.y, T.z = f.z + v * u.z + y * h.z, l[d][E] = this.vertices.push(T) - 1
        }
    }
    for (var d = 0; d < n; ++d)
        for (var E = 0; E < i; ++E) {
            var x = (d + 1) % n,
                R = (E + 1) % i,
                w = l[d][E],
                b = l[x][E],
                H = l[x][R],
                S = l[d][R],
                _ = new THREE.Vector2(d / n, E / i),
                M = new THREE.Vector2((d + 1) / n, E / i),
                C = new THREE.Vector2((d + 1) / n, (E + 1) / i),
                A = new THREE.Vector2(d / n, (E + 1) / i);
            this.faces.push(new THREE.Face3(w, b, S)), this.faceVertexUvs[0].push([_, M, A]), this.faces.push(new THREE.Face3(b, H, S)), this.faceVertexUvs[0].push([M.clone(), C, A.clone()])
        }
    this.computeFaceNormals(), this.computeVertexNormals()
}, THREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry, THREE.TorusKnotGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.TorusKnotGeometry(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.p, e.q, e.heightScale)
}, THREE.TubeGeometry = function(e, t, n, i, r, o) {
    function a(e, t, n) {
        return l.vertices.push(new THREE.Vector3(e, t, n)) - 1
    }
    THREE.Geometry.call(this), this.type = "TubeGeometry", this.parameters = {
        path: e,
        segments: t,
        radius: n,
        radialSegments: i,
        closed: r,
        taper: o
    }, t = t || 64, n = n || 1, i = i || 8, r = r || !1, o = o || THREE.TubeGeometry.NoTaper;
    var s = [],
        l = this,
        c, u, h, d = t + 1,
        p, f, m, E, g, v, y = new THREE.Vector3,
        T, x, R, w, b, H, S, _, M, C, A, P, k = new THREE.TubeGeometry.FrenetFrames(e, t, r),
        L = k.tangents,
        D = k.normals,
        O = k.binormals;
    for (this.tangents = L, this.normals = D, this.binormals = O, T = 0; T < d; T++)
        for (s[T] = [], p = T / (d - 1), v = e.getPointAt(p), c = L[T], u = D[T], h = O[T], m = n * o(p), x = 0; x < i; x++) f = x / i * 2 * Math.PI, E = -m * Math.cos(f), g = m * Math.sin(f), y.copy(v), y.x += E * u.x + g * h.x, y.y += E * u.y + g * h.y, y.z += E * u.z + g * h.z, s[T][x] = a(y.x, y.y, y.z);
    for (T = 0; T < t; T++)
        for (x = 0; x < i; x++) R = r ? (T + 1) % t : T + 1, w = (x + 1) % i, b = s[T][x], H = s[R][x], S = s[R][w], _ = s[T][w], M = new THREE.Vector2(T / t, x / i), C = new THREE.Vector2((T + 1) / t, x / i), A = new THREE.Vector2((T + 1) / t, (x + 1) / i), P = new THREE.Vector2(T / t, (x + 1) / i), this.faces.push(new THREE.Face3(b, H, _)), this.faceVertexUvs[0].push([M, C, P]), this.faces.push(new THREE.Face3(H, S, _)), this.faceVertexUvs[0].push([C.clone(), A, P.clone()]);
    this.computeFaceNormals(), this.computeVertexNormals()
}, THREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry, THREE.TubeGeometry.prototype.clone = function() {
    return new this.constructor(this.parameters.path, this.parameters.segments, this.parameters.radius, this.parameters.radialSegments, this.parameters.closed, this.parameters.taper)
}, THREE.TubeGeometry.NoTaper = function(e) {
    return 1
}, THREE.TubeGeometry.SinusoidalTaper = function(e) {
    return Math.sin(Math.PI * e)
}, THREE.TubeGeometry.FrenetFrames = function(e, t, n) {
    function i() {
        a[0] = new THREE.Vector3, s[0] = new THREE.Vector3, d = Number.MAX_VALUE, p = Math.abs(o[0].x), f = Math.abs(o[0].y), m = Math.abs(o[0].z), p <= d && (d = p, r.set(1, 0, 0)), f <= d && (d = f, r.set(0, 1, 0)), m <= d && r.set(0, 0, 1), l.crossVectors(o[0], r).normalize(), a[0].crossVectors(o[0], l), s[0].crossVectors(o[0], a[0])
    }
    var r = new THREE.Vector3,
        o = [],
        a = [],
        s = [],
        l = new THREE.Vector3,
        c = new THREE.Matrix4,
        u = t + 1,
        h, d, p, f, m, E, g;
    for (this.tangents = o, this.normals = a, this.binormals = s, E = 0; E < u; E++) g = E / (u - 1), o[E] = e.getTangentAt(g), o[E].normalize();
    for (i(), E = 1; E < u; E++) a[E] = a[E - 1].clone(), s[E] = s[E - 1].clone(), l.crossVectors(o[E - 1], o[E]), l.length() > Number.EPSILON && (l.normalize(), h = Math.acos(THREE.Math.clamp(o[E - 1].dot(o[E]), -1, 1)), a[E].applyMatrix4(c.makeRotationAxis(l, h))), s[E].crossVectors(o[E], a[E]);
    if (n)
        for (h = Math.acos(THREE.Math.clamp(a[0].dot(a[u - 1]), -1, 1)), h /= u - 1, o[0].dot(l.crossVectors(a[0], a[u - 1])) > 0 && (h = -h), E = 1; E < u; E++) a[E].applyMatrix4(c.makeRotationAxis(o[E], h * E)), s[E].crossVectors(o[E], a[E])
}, THREE.PolyhedronGeometry = function(e, t, n, i) {
    function r(e) {
        var t = e.normalize().clone();
        t.index = u.vertices.push(t) - 1;
        var n = s(e) / 2 / Math.PI + .5,
            i = l(e) / Math.PI + .5;
        return t.uv = new THREE.Vector2(n, 1 - i), t
    }

    function o(e, t, n, i) {
        var r = new THREE.Face3(e.index, t.index, n.index, [e.clone(), t.clone(), n.clone()], void 0, i);
        u.faces.push(r), y.copy(e).add(t).add(n).divideScalar(3);
        var o = s(y);
        u.faceVertexUvs[0].push([c(e.uv, e, o), c(t.uv, t, o), c(n.uv, n, o)])
    }

    function a(e, t) {
        for (var n = Math.pow(2, t), i = r(u.vertices[e.a]), a = r(u.vertices[e.b]), s = r(u.vertices[e.c]), l = [], c = e.materialIndex, h = 0; h <= n; h++) {
            l[h] = [];
            for (var d = r(i.clone().lerp(s, h / n)), p = r(a.clone().lerp(s, h / n)), f = n - h, m = 0; m <= f; m++) 0 === m && h === n ? l[h][m] = d : l[h][m] = r(d.clone().lerp(p, m / f))
        }
        for (var h = 0; h < n; h++)
            for (var m = 0; m < 2 * (n - h) - 1; m++) {
                var E = Math.floor(m / 2);
                m % 2 === 0 ? o(l[h][E + 1], l[h + 1][E], l[h][E], c) : o(l[h][E + 1], l[h + 1][E + 1], l[h + 1][E], c)
            }
    }

    function s(e) {
        return Math.atan2(e.z, -e.x)
    }

    function l(e) {
        return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z))
    }

    function c(e, t, n) {
        return n < 0 && 1 === e.x && (e = new THREE.Vector2(e.x - 1, e.y)), 0 === t.x && 0 === t.z && (e = new THREE.Vector2(n / 2 / Math.PI + .5, e.y)), e.clone()
    }
    THREE.Geometry.call(this), this.type = "PolyhedronGeometry", this.parameters = {
        vertices: e,
        indices: t,
        radius: n,
        detail: i
    }, n = n || 1, i = i || 0;
    for (var u = this, h = 0, d = e.length; h < d; h += 3) r(new THREE.Vector3(e[h], e[h + 1], e[h + 2]));
    for (var p = this.vertices, f = [], h = 0, m = 0, d = t.length; h < d; h += 3, m++) {
        var E = p[t[h]],
            g = p[t[h + 1]],
            v = p[t[h + 2]];
        f[m] = new THREE.Face3(E.index, g.index, v.index, [E.clone(), g.clone(), v.clone()], void 0, m)
    }
    for (var y = new THREE.Vector3, h = 0, d = f.length; h < d; h++) a(f[h], i);
    for (var h = 0, d = this.faceVertexUvs[0].length; h < d; h++) {
        var T = this.faceVertexUvs[0][h],
            x = T[0].x,
            R = T[1].x,
            w = T[2].x,
            b = Math.max(x, R, w),
            H = Math.min(x, R, w);
        b > .9 && H < .1 && (x < .2 && (T[0].x += 1), R < .2 && (T[1].x += 1), w < .2 && (T[2].x += 1))
    }
    for (var h = 0, d = this.vertices.length; h < d; h++) this.vertices[h].multiplyScalar(n);
    this.mergeVertices(), this.computeFaceNormals(), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, n)
}, THREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry, THREE.PolyhedronGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.PolyhedronGeometry(e.vertices, e.indices, e.radius, e.detail)
}, THREE.DodecahedronGeometry = function(e, t) {
    var n = (1 + Math.sqrt(5)) / 2,
        i = 1 / n,
        r = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, 0, -n, 0, -i, n, 0, -i, -n, 0, i, n, 0, i],
        o = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
    THREE.PolyhedronGeometry.call(this, r, o, e, t), this.type = "DodecahedronGeometry", this.parameters = {
        radius: e,
        detail: t
    }
}, THREE.DodecahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype), THREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry, THREE.DodecahedronGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.DodecahedronGeometry(e.radius, e.detail)
}, THREE.IcosahedronGeometry = function(e, t) {
    var n = (1 + Math.sqrt(5)) / 2,
        i = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1],
        r = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
    THREE.PolyhedronGeometry.call(this, i, r, e, t), this.type = "IcosahedronGeometry", this.parameters = {
        radius: e,
        detail: t
    }
}, THREE.IcosahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype), THREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry, THREE.IcosahedronGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.IcosahedronGeometry(e.radius, e.detail)
}, THREE.OctahedronGeometry = function(e, t) {
    var n = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
        i = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
    THREE.PolyhedronGeometry.call(this, n, i, e, t), this.type = "OctahedronGeometry", this.parameters = {
        radius: e,
        detail: t
    }
}, THREE.OctahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype), THREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry, THREE.OctahedronGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.OctahedronGeometry(e.radius, e.detail)
}, THREE.TetrahedronGeometry = function(e, t) {
    var n = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
        i = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
    THREE.PolyhedronGeometry.call(this, n, i, e, t), this.type = "TetrahedronGeometry", this.parameters = {
        radius: e,
        detail: t
    }
}, THREE.TetrahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype), THREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry, THREE.TetrahedronGeometry.prototype.clone = function() {
    var e = this.parameters;
    return new THREE.TetrahedronGeometry(e.radius, e.detail)
}, THREE.ParametricGeometry = function(e, t, n) {
    THREE.Geometry.call(this), this.type = "ParametricGeometry", this.parameters = {
        func: e,
        slices: t,
        stacks: n
    };
    var i = this.vertices,
        r = this.faces,
        o = this.faceVertexUvs[0],
        a, s, l, c, u, h = t + 1;
    for (a = 0; a <= n; a++)
        for (u = a / n, s = 0; s <= t; s++) c = s / t, l = e(c, u), i.push(l);
    var d, p, f, m, E, g, v, y;
    for (a = 0; a < n; a++)
        for (s = 0; s < t; s++) d = a * h + s, p = a * h + s + 1, f = (a + 1) * h + s + 1, m = (a + 1) * h + s, E = new THREE.Vector2(s / t, a / n), g = new THREE.Vector2((s + 1) / t, a / n), v = new THREE.Vector2((s + 1) / t, (a + 1) / n), y = new THREE.Vector2(s / t, (a + 1) / n), r.push(new THREE.Face3(d, p, m)), o.push([E, g, y]), r.push(new THREE.Face3(p, f, m)), o.push([g.clone(), v, y.clone()]);
    this.computeFaceNormals(), this.computeVertexNormals()
}, THREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype), THREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry, THREE.WireframeGeometry = function(e) {
    function t(e, t) {
        return e - t
    }
    THREE.BufferGeometry.call(this);
    var n = [0, 0],
        i = {},
        r = ["a", "b", "c"];
    if (e instanceof THREE.Geometry) {
        for (var o = e.vertices, a = e.faces, s = 0, l = new Uint32Array(6 * a.length), c = 0, u = a.length; c < u; c++)
            for (var h = a[c], d = 0; d < 3; d++) {
                n[0] = h[r[d]], n[1] = h[r[(d + 1) % 3]], n.sort(t);
                var p = n.toString();
                void 0 === i[p] && (l[2 * s] = n[0], l[2 * s + 1] = n[1], i[p] = !0, s++)
            }
        for (var f = new Float32Array(2 * s * 3), c = 0, u = s; c < u; c++)
            for (var d = 0; d < 2; d++) {
                var m = o[l[2 * c + d]],
                    E = 6 * c + 3 * d;
                f[E + 0] = m.x, f[E + 1] = m.y, f[E + 2] = m.z
            }
        this.addAttribute("position", new THREE.BufferAttribute(f, 3))
    } else if (e instanceof THREE.BufferGeometry)
        if (null !== e.index) {
            var g = e.index.array,
                o = e.attributes.position,
                v = e.drawcalls,
                s = 0;
            0 === v.length && e.addGroup(0, g.length);
            for (var l = new Uint32Array(2 * g.length), y = 0, T = v.length; y < T; ++y)
                for (var x = v[y], R = x.start, w = x.count, c = R, b = R + w; c < b; c += 3)
                    for (var d = 0; d < 3; d++) {
                        n[0] = g[c + d], n[1] = g[c + (d + 1) % 3], n.sort(t);
                        var p = n.toString();
                        void 0 === i[p] && (l[2 * s] = n[0], l[2 * s + 1] = n[1], i[p] = !0, s++)
                    }
            for (var f = new Float32Array(2 * s * 3), c = 0, u = s; c < u; c++)
                for (var d = 0; d < 2; d++) {
                    var E = 6 * c + 3 * d,
                        H = l[2 * c + d];
                    f[E + 0] = o.getX(H), f[E + 1] = o.getY(H), f[E + 2] = o.getZ(H)
                }
            this.addAttribute("position", new THREE.BufferAttribute(f, 3))
        } else {
            for (var o = e.attributes.position.array, s = o.length / 3, S = s / 3, f = new Float32Array(2 * s * 3), c = 0, u = S; c < u; c++)
                for (var d = 0; d < 3; d++) {
                    var E = 18 * c + 6 * d,
                        _ = 9 * c + 3 * d;
                    f[E + 0] = o[_], f[E + 1] = o[_ + 1], f[E + 2] = o[_ + 2];
                    var H = 9 * c + 3 * ((d + 1) % 3);
                    f[E + 3] = o[H], f[E + 4] = o[H + 1], f[E + 5] = o[H + 2]
                }
            this.addAttribute("position", new THREE.BufferAttribute(f, 3))
        }
}, THREE.WireframeGeometry.prototype = Object.create(THREE.BufferGeometry.prototype), THREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry, THREE.AxisHelper = function(e) {
    e = e || 1;
    var t = new Float32Array([0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e]),
        n = new Float32Array([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1]),
        i = new THREE.BufferGeometry;
    i.addAttribute("position", new THREE.BufferAttribute(t, 3)), i.addAttribute("color", new THREE.BufferAttribute(n, 3));
    var r = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    });
    THREE.LineSegments.call(this, i, r)
}, THREE.AxisHelper.prototype = Object.create(THREE.LineSegments.prototype), THREE.AxisHelper.prototype.constructor = THREE.AxisHelper, THREE.ArrowHelper = function() {
    var e = new THREE.Geometry;
    e.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0));
    var t = new THREE.CylinderGeometry(0, .5, 1, 5, 1);
    return t.translate(0, -.5, 0),
        function n(i, r, o, a, s, l) {
            THREE.Object3D.call(this), void 0 === a && (a = 16776960), void 0 === o && (o = 1), void 0 === s && (s = .2 * o), void 0 === l && (l = .2 * s), this.position.copy(r), s < o && (this.line = new THREE.Line(e, new THREE.LineBasicMaterial({
                color: a
            })), this.line.matrixAutoUpdate = !1, this.add(this.line)), this.cone = new THREE.Mesh(t, new THREE.MeshBasicMaterial({
                color: a
            })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(i), this.setLength(o, s, l)
        }
}(), THREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype), THREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper, THREE.ArrowHelper.prototype.setDirection = function() {
    var e = new THREE.Vector3,
        t;
    return function n(i) {
        i.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : i.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (e.set(i.z, 0, -i.x).normalize(), t = Math.acos(i.y), this.quaternion.setFromAxisAngle(e, t))
    }
}(), THREE.ArrowHelper.prototype.setLength = function(e, t, n) {
    void 0 === t && (t = .2 * e), void 0 === n && (n = .2 * t), t < e && (this.line.scale.set(1, e - t, 1), this.line.updateMatrix()), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix()
}, THREE.ArrowHelper.prototype.setColor = function(e) {
    void 0 !== this.line && this.line.material.color.set(e), this.cone.material.color.set(e)
}, THREE.BoxHelper = function(e) {
    var t = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
        n = new Float32Array(24),
        i = new THREE.BufferGeometry;
    i.setIndex(new THREE.BufferAttribute(t, 1)), i.addAttribute("position", new THREE.BufferAttribute(n, 3)), THREE.LineSegments.call(this, i, new THREE.LineBasicMaterial({
        color: 16776960
    })), void 0 !== e && this.update(e)
}, THREE.BoxHelper.prototype = Object.create(THREE.LineSegments.prototype), THREE.BoxHelper.prototype.constructor = THREE.BoxHelper, THREE.BoxHelper.prototype.update = function() {
    var e = new THREE.Box3;
    return function(t) {
        if (e.setFromObject(t), !e.empty()) {
            var n = e.min,
                i = e.max,
                r = this.geometry.attributes.position,
                o = r.array;
            o[0] = i.x, o[1] = i.y, o[2] = i.z, o[3] = n.x, o[4] = i.y, o[5] = i.z, o[6] = n.x, o[7] = n.y, o[8] = i.z, o[9] = i.x, o[10] = n.y, o[11] = i.z, o[12] = i.x, o[13] = i.y, o[14] = n.z, o[15] = n.x, o[16] = i.y, o[17] = n.z, o[18] = n.x, o[19] = n.y, o[20] = n.z, o[21] = i.x, o[22] = n.y, o[23] = n.z, r.needsUpdate = !0, this.geometry.computeBoundingSphere()
        }
    }
}(), THREE.BoundingBoxHelper = function(e, t) {
    var n = void 0 !== t ? t : 8947848;
    this.object = e, this.box = new THREE.Box3, THREE.Mesh.call(this, new THREE.BoxGeometry(1, 1, 1), new THREE.MeshBasicMaterial({
        color: n,
        wireframe: !0
    }))
}, THREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype), THREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper, THREE.BoundingBoxHelper.prototype.update = function() {
    this.box.setFromObject(this.object), this.box.size(this.scale), this.box.center(this.position)
}, THREE.CameraHelper = function(e) {
    function t(e, t, i) {
        n(e, i), n(t, i)
    }

    function n(e, t) {
        i.vertices.push(new THREE.Vector3), i.colors.push(new THREE.Color(t)), void 0 === o[e] && (o[e] = []), o[e].push(i.vertices.length - 1)
    }
    var i = new THREE.Geometry,
        r = new THREE.LineBasicMaterial({
            color: 16777215,
            vertexColors: THREE.FaceColors
        }),
        o = {},
        a = 16755200,
        s = 16711680,
        l = 43775,
        c = 16777215,
        u = 3355443;
    t("n1", "n2", a), t("n2", "n4", a), t("n4", "n3", a), t("n3", "n1", a), t("f1", "f2", a), t("f2", "f4", a), t("f4", "f3", a), t("f3", "f1", a), t("n1", "f1", a), t("n2", "f2", a), t("n3", "f3", a), t("n4", "f4", a), t("p", "n1", s), t("p", "n2", s), t("p", "n3", s), t("p", "n4", s), t("u1", "u2", l), t("u2", "u3", l), t("u3", "u1", l), t("c", "t", c), t("p", "c", u), t("cn1", "cn2", u), t("cn3", "cn4", u), t("cf1", "cf2", u), t("cf3", "cf4", u), THREE.LineSegments.call(this, i, r), this.camera = e, this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update()
}, THREE.CameraHelper.prototype = Object.create(THREE.LineSegments.prototype), THREE.CameraHelper.prototype.constructor = THREE.CameraHelper, THREE.CameraHelper.prototype.update = function() {
    function e(e, o, a, s) {
        i.set(o, a, s).unproject(r);
        var l = n[e];
        if (void 0 !== l)
            for (var c = 0, u = l.length; c < u; c++) t.vertices[l[c]].copy(i)
    }
    var t, n, i = new THREE.Vector3,
        r = new THREE.Camera;
    return function() {
        t = this.geometry, n = this.pointMap;
        var i = 1,
            o = 1;
        r.projectionMatrix.copy(this.camera.projectionMatrix), e("c", 0, 0, -1), e("t", 0, 0, 1), e("n1", -i, -o, -1), e("n2", i, -o, -1), e("n3", -i, o, -1), e("n4", i, o, -1), e("f1", -i, -o, 1), e("f2", i, -o, 1), e("f3", -i, o, 1), e("f4", i, o, 1), e("u1", .7 * i, 1.1 * o, -1), e("u2", .7 * -i, 1.1 * o, -1), e("u3", 0, 2 * o, -1), e("cf1", -i, 0, 1), e("cf2", i, 0, 1), e("cf3", 0, -o, 1), e("cf4", 0, o, 1), e("cn1", -i, 0, -1), e("cn2", i, 0, -1), e("cn3", 0, -o, -1), e("cn4", 0, o, -1), t.verticesNeedUpdate = !0
    }
}(), THREE.DirectionalLightHelper = function(e, t) {
    THREE.Object3D.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, t = t || 1;
    var n = new THREE.Geometry;
    n.vertices.push(new THREE.Vector3(-t, t, 0), new THREE.Vector3(t, t, 0), new THREE.Vector3(t, -t, 0), new THREE.Vector3(-t, -t, 0), new THREE.Vector3(-t, t, 0));
    var i = new THREE.LineBasicMaterial({
        fog: !1
    });
    i.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.lightPlane = new THREE.Line(n, i), this.add(this.lightPlane), n = new THREE.Geometry, n.vertices.push(new THREE.Vector3, new THREE.Vector3), i = new THREE.LineBasicMaterial({
        fog: !1
    }), i.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.targetLine = new THREE.Line(n, i), this.add(this.targetLine), this.update()
}, THREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype);
THREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;
THREE.DirectionalLightHelper.prototype.dispose = function() {
    this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose()
}, THREE.DirectionalLightHelper.prototype.update = function() {
    var e = new THREE.Vector3,
        t = new THREE.Vector3,
        n = new THREE.Vector3;
    return function() {
        e.setFromMatrixPosition(this.light.matrixWorld), t.setFromMatrixPosition(this.light.target.matrixWorld), n.subVectors(t, e), this.lightPlane.lookAt(n), this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.targetLine.geometry.vertices[1].copy(n), this.targetLine.geometry.verticesNeedUpdate = !0, this.targetLine.material.color.copy(this.lightPlane.material.color)
    }
}(), THREE.EdgesHelper = function(e, t, n) {
    var i = void 0 !== t ? t : 16777215;
    THREE.LineSegments.call(this, new THREE.EdgesGeometry(e.geometry, n), new THREE.LineBasicMaterial({
        color: i
    })), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1
}, THREE.EdgesHelper.prototype = Object.create(THREE.LineSegments.prototype), THREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper, THREE.FaceNormalsHelper = function(e, t, n, i) {
    this.object = e, this.size = void 0 !== t ? t : 1;
    var r = void 0 !== n ? n : 16776960,
        o = void 0 !== i ? i : 1,
        a = 0,
        s = this.object.geometry;
    s instanceof THREE.Geometry ? a = s.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
    var l = new THREE.BufferGeometry,
        c = new THREE.Float32Attribute(2 * a * 3, 3);
    l.addAttribute("position", c), THREE.LineSegments.call(this, l, new THREE.LineBasicMaterial({
        color: r,
        linewidth: o
    })), this.matrixAutoUpdate = !1, this.update()
}, THREE.FaceNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype), THREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper, THREE.FaceNormalsHelper.prototype.update = function() {
    var e = new THREE.Vector3,
        t = new THREE.Vector3,
        n = new THREE.Matrix3;
    return function i() {
        this.object.updateMatrixWorld(!0), n.getNormalMatrix(this.object.matrixWorld);
        for (var r = this.object.matrixWorld, o = this.geometry.attributes.position, a = this.object.geometry, s = a.vertices, l = a.faces, c = 0, u = 0, h = l.length; u < h; u++) {
            var d = l[u],
                p = d.normal;
            e.copy(s[d.a]).add(s[d.b]).add(s[d.c]).divideScalar(3).applyMatrix4(r), t.copy(p).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e), o.setXYZ(c, e.x, e.y, e.z), c += 1, o.setXYZ(c, t.x, t.y, t.z), c += 1
        }
        return o.needsUpdate = !0, this
    }
}(), THREE.GridHelper = function(e, t) {
    var n = new THREE.Geometry,
        i = new THREE.LineBasicMaterial({
            vertexColors: THREE.VertexColors
        });
    this.color1 = new THREE.Color(4473924), this.color2 = new THREE.Color(8947848);
    for (var r = -e; r <= e; r += t) {
        n.vertices.push(new THREE.Vector3(-e, 0, r), new THREE.Vector3(e, 0, r), new THREE.Vector3(r, 0, -e), new THREE.Vector3(r, 0, e));
        var o = 0 === r ? this.color1 : this.color2;
        n.colors.push(o, o, o, o)
    }
    THREE.LineSegments.call(this, n, i)
}, THREE.GridHelper.prototype = Object.create(THREE.LineSegments.prototype), THREE.GridHelper.prototype.constructor = THREE.GridHelper, THREE.GridHelper.prototype.setColors = function(e, t) {
    this.color1.set(e), this.color2.set(t), this.geometry.colorsNeedUpdate = !0
}, THREE.HemisphereLightHelper = function(e, t) {
    THREE.Object3D.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.colors = [new THREE.Color, new THREE.Color];
    var n = new THREE.SphereGeometry(t, 4, 2);
    n.rotateX(-Math.PI / 2);
    for (var i = 0, r = 8; i < r; i++) n.faces[i].color = this.colors[i < 4 ? 0 : 1];
    var o = new THREE.MeshBasicMaterial({
        vertexColors: THREE.FaceColors,
        wireframe: !0
    });
    this.lightSphere = new THREE.Mesh(n, o), this.add(this.lightSphere), this.update()
}, THREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype), THREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper, THREE.HemisphereLightHelper.prototype.dispose = function() {
    this.lightSphere.geometry.dispose(), this.lightSphere.material.dispose()
}, THREE.HemisphereLightHelper.prototype.update = function() {
    var e = new THREE.Vector3;
    return function() {
        this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity), this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity), this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()), this.lightSphere.geometry.colorsNeedUpdate = !0
    }
}(), THREE.PointLightHelper = function(e, t) {
    this.light = e, this.light.updateMatrixWorld();
    var n = new THREE.SphereGeometry(t, 4, 2),
        i = new THREE.MeshBasicMaterial({
            wireframe: !0,
            fog: !1
        });
    i.color.copy(this.light.color).multiplyScalar(this.light.intensity), THREE.Mesh.call(this, n, i), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1
}, THREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype), THREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper, THREE.PointLightHelper.prototype.dispose = function() {
    this.geometry.dispose(), this.material.dispose()
}, THREE.PointLightHelper.prototype.update = function() {
    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
}, THREE.SkeletonHelper = function(e) {
    this.bones = this.getBoneList(e);
    for (var t = new THREE.Geometry, n = 0; n < this.bones.length; n++) {
        var i = this.bones[n];
        i.parent instanceof THREE.Bone && (t.vertices.push(new THREE.Vector3), t.vertices.push(new THREE.Vector3), t.colors.push(new THREE.Color(0, 0, 1)), t.colors.push(new THREE.Color(0, 1, 0)))
    }
    t.dynamic = !0;
    var r = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors,
        depthTest: !1,
        depthWrite: !1,
        transparent: !0
    });
    THREE.LineSegments.call(this, t, r), this.root = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.update()
}, THREE.SkeletonHelper.prototype = Object.create(THREE.LineSegments.prototype), THREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper, THREE.SkeletonHelper.prototype.getBoneList = function(e) {
    var t = [];
    e instanceof THREE.Bone && t.push(e);
    for (var n = 0; n < e.children.length; n++) t.push.apply(t, this.getBoneList(e.children[n]));
    return t
}, THREE.SkeletonHelper.prototype.update = function() {
    for (var e = this.geometry, t = (new THREE.Matrix4).getInverse(this.root.matrixWorld), n = new THREE.Matrix4, i = 0, r = 0; r < this.bones.length; r++) {
        var o = this.bones[r];
        o.parent instanceof THREE.Bone && (n.multiplyMatrices(t, o.matrixWorld), e.vertices[i].setFromMatrixPosition(n), n.multiplyMatrices(t, o.parent.matrixWorld), e.vertices[i + 1].setFromMatrixPosition(n), i += 2)
    }
    e.verticesNeedUpdate = !0, e.computeBoundingSphere()
}, THREE.SpotLightHelper = function(e) {
    THREE.Object3D.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;
    var t = new THREE.CylinderGeometry(0, 1, 1, 8, 1, !0);
    t.translate(0, -.5, 0), t.rotateX(-Math.PI / 2);
    var n = new THREE.MeshBasicMaterial({
        wireframe: !0,
        fog: !1
    });
    this.cone = new THREE.Mesh(t, n), this.add(this.cone), this.update()
}, THREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype), THREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper, THREE.SpotLightHelper.prototype.dispose = function() {
    this.cone.geometry.dispose(), this.cone.material.dispose()
}, THREE.SpotLightHelper.prototype.update = function() {
    var e = new THREE.Vector3,
        t = new THREE.Vector3;
    return function() {
        var n = this.light.distance ? this.light.distance : 1e4,
            i = n * Math.tan(this.light.angle);
        this.cone.scale.set(i, i, n), e.setFromMatrixPosition(this.light.matrixWorld), t.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(t.sub(e)), this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
    }
}(), THREE.VertexNormalsHelper = function(e, t, n, i) {
    this.object = e, this.size = void 0 !== t ? t : 1;
    var r = void 0 !== n ? n : 16711680,
        o = void 0 !== i ? i : 1,
        a = 0,
        s = this.object.geometry;
    s instanceof THREE.Geometry ? a = 3 * s.faces.length : s instanceof THREE.BufferGeometry && (a = s.attributes.normal.count);
    var l = new THREE.BufferGeometry,
        c = new THREE.Float32Attribute(2 * a * 3, 3);
    l.addAttribute("position", c), THREE.LineSegments.call(this, l, new THREE.LineBasicMaterial({
        color: r,
        linewidth: o
    })), this.matrixAutoUpdate = !1, this.update()
}, THREE.VertexNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype), THREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper, THREE.VertexNormalsHelper.prototype.update = function() {
    var e = new THREE.Vector3,
        t = new THREE.Vector3,
        n = new THREE.Matrix3;
    return function i() {
        var r = ["a", "b", "c"];
        this.object.updateMatrixWorld(!0), n.getNormalMatrix(this.object.matrixWorld);
        var o = this.object.matrixWorld,
            a = this.geometry.attributes.position,
            s = this.object.geometry;
        if (s instanceof THREE.Geometry)
            for (var l = s.vertices, c = s.faces, u = 0, h = 0, d = c.length; h < d; h++)
                for (var p = c[h], f = 0, m = p.vertexNormals.length; f < m; f++) {
                    var E = l[p[r[f]]],
                        g = p.vertexNormals[f];
                    e.copy(E).applyMatrix4(o), t.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e), a.setXYZ(u, e.x, e.y, e.z), u += 1, a.setXYZ(u, t.x, t.y, t.z), u += 1
                } else if (s instanceof THREE.BufferGeometry)
                    for (var v = s.attributes.position, y = s.attributes.normal, u = 0, f = 0, m = v.count; f < m; f++) e.set(v.getX(f), v.getY(f), v.getZ(f)).applyMatrix4(o), t.set(y.getX(f), y.getY(f), y.getZ(f)), t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e), a.setXYZ(u, e.x, e.y, e.z), u += 1, a.setXYZ(u, t.x, t.y, t.z), u += 1;
        return a.needsUpdate = !0, this
    }
}(), THREE.WireframeHelper = function(e, t) {
    var n = void 0 !== t ? t : 16777215;
    THREE.LineSegments.call(this, new THREE.WireframeGeometry(e.geometry), new THREE.LineBasicMaterial({
        color: n
    })), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1
}, THREE.WireframeHelper.prototype = Object.create(THREE.LineSegments.prototype), THREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper, THREE.ImmediateRenderObject = function(e) {
    THREE.Object3D.call(this), this.material = e, this.render = function(e) {}
}, THREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype), THREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject, THREE.MorphBlendMesh = function(e, t) {
    THREE.Mesh.call(this, e, t), this.animationsMap = {}, this.animationsList = [];
    var n = this.geometry.morphTargets.length,
        i = "__default",
        r = 0,
        o = n - 1,
        a = n / 1;
    this.createAnimation(i, r, o, a), this.setAnimationWeight(i, 1)
}, THREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype), THREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh, THREE.MorphBlendMesh.prototype.createAnimation = function(e, t, n, i) {
    var r = {
        start: t,
        end: n,
        length: n - t + 1,
        fps: i,
        duration: (n - t) / i,
        lastFrame: 0,
        currentFrame: 0,
        active: !1,
        time: 0,
        direction: 1,
        weight: 1,
        directionBackwards: !1,
        mirroredLoop: !1
    };
    this.animationsMap[e] = r, this.animationsList.push(r)
}, THREE.MorphBlendMesh.prototype.autoCreateAnimations = function(e) {
    for (var t = /([a-z]+)_?(\d+)/, n, i = {}, r = this.geometry, o = 0, a = r.morphTargets.length; o < a; o++) {
        var s = r.morphTargets[o],
            l = s.name.match(t);
        if (l && l.length > 1) {
            var c = l[1];
            i[c] || (i[c] = {
                start: 1 / 0,
                end: -(1 / 0)
            });
            var u = i[c];
            o < u.start && (u.start = o), o > u.end && (u.end = o), n || (n = c)
        }
    }
    for (var c in i) {
        var u = i[c];
        this.createAnimation(c, u.start, u.end, e)
    }
    this.firstAnimation = n
}, THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function(e) {
    var t = this.animationsMap[e];
    t && (t.direction = 1, t.directionBackwards = !1)
}, THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(e) {
    var t = this.animationsMap[e];
    t && (t.direction = -1, t.directionBackwards = !0)
}, THREE.MorphBlendMesh.prototype.setAnimationFPS = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.fps = t, n.duration = (n.end - n.start) / n.fps)
}, THREE.MorphBlendMesh.prototype.setAnimationDuration = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.duration = t, n.fps = (n.end - n.start) / n.duration)
}, THREE.MorphBlendMesh.prototype.setAnimationWeight = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.weight = t)
}, THREE.MorphBlendMesh.prototype.setAnimationTime = function(e, t) {
    var n = this.animationsMap[e];
    n && (n.time = t)
}, THREE.MorphBlendMesh.prototype.getAnimationTime = function(e) {
    var t = 0,
        n = this.animationsMap[e];
    return n && (t = n.time), t
}, THREE.MorphBlendMesh.prototype.getAnimationDuration = function(e) {
    var t = -1,
        n = this.animationsMap[e];
    return n && (t = n.duration), t
}, THREE.MorphBlendMesh.prototype.playAnimation = function(e) {
    var t = this.animationsMap[e];
    t ? (t.time = 0, t.active = !0) : console.warn("THREE.MorphBlendMesh: animation[" + e + "] undefined in .playAnimation()")
}, THREE.MorphBlendMesh.prototype.stopAnimation = function(e) {
    var t = this.animationsMap[e];
    t && (t.active = !1)
}, THREE.MorphBlendMesh.prototype.update = function(e) {
    for (var t = 0, n = this.animationsList.length; t < n; t++) {
        var i = this.animationsList[t];
        if (i.active) {
            var r = i.duration / i.length;
            i.time += i.direction * e, i.mirroredLoop ? (i.time > i.duration || i.time < 0) && (i.direction *= -1, i.time > i.duration && (i.time = i.duration, i.directionBackwards = !0), i.time < 0 && (i.time = 0, i.directionBackwards = !1)) : (i.time = i.time % i.duration, i.time < 0 && (i.time += i.duration));
            var o = i.start + THREE.Math.clamp(Math.floor(i.time / r), 0, i.length - 1),
                a = i.weight;
            o !== i.currentFrame && (this.morphTargetInfluences[i.lastFrame] = 0, this.morphTargetInfluences[i.currentFrame] = 1 * a, this.morphTargetInfluences[o] = 0, i.lastFrame = i.currentFrame, i.currentFrame = o);
            var s = i.time % r / r;
            i.directionBackwards && (s = 1 - s), i.currentFrame !== i.lastFrame ? (this.morphTargetInfluences[i.currentFrame] = s * a, this.morphTargetInfluences[i.lastFrame] = (1 - s) * a) : this.morphTargetInfluences[i.currentFrame] = a
        }
    }
}, THREE.TrackballControls = function(e, t) {
    function n(e) {
        d.enabled !== !1 && (window.removeEventListener("keydown", n), g = E, E === p.NONE && (e.keyCode !== d.keys[p.ROTATE] || d.noRotate ? e.keyCode !== d.keys[p.ZOOM] || d.noZoom ? e.keyCode !== d.keys[p.PAN] || d.noPan || (E = p.PAN) : E = p.ZOOM : E = p.ROTATE))
    }

    function i(e) {
        d.enabled !== !1 && (E = g, window.addEventListener("keydown", n, !1))
    }

    function r(e) {
        d.enabled !== !1 && (e.preventDefault(), e.stopPropagation(), E === p.NONE && (E = e.button), E !== p.ROTATE || d.noRotate ? E !== p.ZOOM || d.noZoom ? E !== p.PAN || d.noPan || (_.copy(k(e.pageX, e.pageY)), M.copy(_)) : (w.copy(k(e.pageX, e.pageY)), b.copy(w)) : (T.copy(L(e.pageX, e.pageY)), y.copy(T)), document.addEventListener("mousemove", o, !1), document.addEventListener("mouseup", a, !1), d.dispatchEvent(A))
    }

    function o(e) {
        d.enabled !== !1 && (e.preventDefault(), e.stopPropagation(), E !== p.ROTATE || d.noRotate ? E !== p.ZOOM || d.noZoom ? E !== p.PAN || d.noPan || M.copy(k(e.pageX, e.pageY)) : b.copy(k(e.pageX, e.pageY)) : (y.copy(T), T.copy(L(e.pageX, e.pageY))))
    }

    function a(e) {
        d.enabled !== !1 && (e.preventDefault(), e.stopPropagation(), E = p.NONE, document.removeEventListener("mousemove", o), document.removeEventListener("mouseup", a), d.dispatchEvent(P))
    }

    function s(e) {
        if (d.enabled !== !1) {
            e.preventDefault(), e.stopPropagation();
            var t = 0;
            e.wheelDelta ? t = e.wheelDelta / 40 : e.detail && (t = -e.detail / 3), w.y += .01 * t, d.dispatchEvent(A), d.dispatchEvent(P)
        }
    }

    function l(e) {
        if (d.enabled !== !1) {
            switch (e.touches.length) {
                case 1:
                    E = p.TOUCH_ROTATE, T.copy(L(e.touches[0].pageX, e.touches[0].pageY)), y.copy(T);
                    break;
                case 2:
                    E = p.TOUCH_ZOOM_PAN;
                    var t = e.touches[0].pageX - e.touches[1].pageX,
                        n = e.touches[0].pageY - e.touches[1].pageY;
                    S = H = Math.sqrt(t * t + n * n);
                    var i = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                        r = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                    _.copy(k(i, r)), M.copy(_);
                    break;
                default:
                    E = p.NONE
            }
            d.dispatchEvent(A)
        }
    }

    function c(e) {
        if (d.enabled !== !1) switch (e.preventDefault(), e.stopPropagation(), e.touches.length) {
            case 1:
                y.copy(T), T.copy(L(e.touches[0].pageX, e.touches[0].pageY));
                break;
            case 2:
                var t = e.touches[0].pageX - e.touches[1].pageX,
                    n = e.touches[0].pageY - e.touches[1].pageY;
                S = Math.sqrt(t * t + n * n);
                var i = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                    r = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                M.copy(k(i, r));
                break;
            default:
                E = p.NONE
        }
    }

    function u(e) {
        if (d.enabled !== !1) {
            switch (e.touches.length) {
                case 1:
                    y.copy(T), T.copy(L(e.touches[0].pageX, e.touches[0].pageY));
                    break;
                case 2:
                    H = S = 0;
                    var t = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                        n = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                    M.copy(k(t, n)), _.copy(M)
            }
            E = p.NONE, d.dispatchEvent(P)
        }
    }

    function h(e) {
        e.preventDefault()
    }
    var d = this,
        p = {
            NONE: -1,
            ROTATE: 0,
            ZOOM: 1,
            PAN: 2,
            TOUCH_ROTATE: 3,
            TOUCH_ZOOM_PAN: 4
        };
    this.object = e, this.domElement = void 0 !== t ? t : document, this.enabled = !0, this.screen = {
        left: 0,
        top: 0,
        width: 0,
        height: 0
    }, this.rotateSpeed = 1, this.zoomSpeed = 1.2, this.panSpeed = .3, this.noRotate = !1, this.noZoom = !1, this.noPan = !1, this.staticMoving = !1, this.dynamicDampingFactor = .2, this.minDistance = 0, this.maxDistance = 1 / 0, this.keys = [65, 83, 68], this.target = new THREE.Vector3;
    var f = 1e-6,
        m = new THREE.Vector3,
        E = p.NONE,
        g = p.NONE,
        v = new THREE.Vector3,
        y = new THREE.Vector2,
        T = new THREE.Vector2,
        x = new THREE.Vector3,
        R = 0,
        w = new THREE.Vector2,
        b = new THREE.Vector2,
        H = 0,
        S = 0,
        _ = new THREE.Vector2,
        M = new THREE.Vector2;
    this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.up0 = this.object.up.clone();
    var C = {
            type: "change"
        },
        A = {
            type: "start"
        },
        P = {
            type: "end"
        };
    this.handleResize = function() {
        if (this.domElement === document) this.screen.left = 0, this.screen.top = 0, this.screen.width = window.innerWidth, this.screen.height = window.innerHeight;
        else {
            var e = this.domElement.getBoundingClientRect(),
                t = this.domElement.ownerDocument.documentElement;
            this.screen.left = e.left + window.pageXOffset - t.clientLeft, this.screen.top = e.top + window.pageYOffset - t.clientTop, this.screen.width = e.width, this.screen.height = e.height
        }
    }, this.handleEvent = function(e) {
        "function" == typeof this[e.type] && this[e.type](e)
    };
    var k = function() {
            var e = new THREE.Vector2;
            return function t(n, i) {
                return e.set((n - d.screen.left) / d.screen.width, (i - d.screen.top) / d.screen.height), e
            }
        }(),
        L = function() {
            var e = new THREE.Vector2;
            return function t(n, i) {
                return e.set((n - .5 * d.screen.width - d.screen.left) / (.5 * d.screen.width), (d.screen.height + 2 * (d.screen.top - i)) / d.screen.width), e
            }
        }();
    this.rotateCamera = function() {
        var e = new THREE.Vector3,
            t = new THREE.Quaternion,
            n = new THREE.Vector3,
            i = new THREE.Vector3,
            r = new THREE.Vector3,
            o = new THREE.Vector3,
            a;
        return function s() {
            o.set(T.x - y.x, T.y - y.y, 0), a = o.length(), a ? (v.copy(d.object.position).sub(d.target), n.copy(v).normalize(), i.copy(d.object.up).normalize(), r.crossVectors(i, n).normalize(), i.setLength(T.y - y.y), r.setLength(T.x - y.x), o.copy(i.add(r)), e.crossVectors(o, v).normalize(), a *= d.rotateSpeed, t.setFromAxisAngle(e, a), v.applyQuaternion(t), d.object.up.applyQuaternion(t), x.copy(e), R = a) : !d.staticMoving && R && (R *= Math.sqrt(1 - d.dynamicDampingFactor), v.copy(d.object.position).sub(d.target), t.setFromAxisAngle(x, R), v.applyQuaternion(t), d.object.up.applyQuaternion(t)), y.copy(T)
        }
    }(), this.zoomCamera = function() {
        var e;
        E === p.TOUCH_ZOOM_PAN ? (e = H / S, H = S, v.multiplyScalar(e)) : (e = 1 + (b.y - w.y) * d.zoomSpeed, 1 !== e && e > 0 && (v.multiplyScalar(e), d.staticMoving ? w.copy(b) : w.y += (b.y - w.y) * this.dynamicDampingFactor))
    }, this.panCamera = function() {
        var e = new THREE.Vector2,
            t = new THREE.Vector3,
            n = new THREE.Vector3;
        return function i() {
            e.copy(M).sub(_), e.lengthSq() && (e.multiplyScalar(v.length() * d.panSpeed), n.copy(v).cross(d.object.up).setLength(e.x), n.add(t.copy(d.object.up).setLength(e.y)), d.object.position.add(n), d.target.add(n), d.staticMoving ? _.copy(M) : _.add(e.subVectors(M, _).multiplyScalar(d.dynamicDampingFactor)))
        }
    }(), this.checkDistances = function() {
        d.noZoom && d.noPan || (v.lengthSq() > d.maxDistance * d.maxDistance && (d.object.position.addVectors(d.target, v.setLength(d.maxDistance)), w.copy(b)), v.lengthSq() < d.minDistance * d.minDistance && (d.object.position.addVectors(d.target, v.setLength(d.minDistance)), w.copy(b)))
    }, this.update = function() {
        v.subVectors(d.object.position, d.target), d.noRotate || d.rotateCamera(), d.noZoom || d.zoomCamera(), d.noPan || d.panCamera(), d.object.position.addVectors(d.target, v), d.checkDistances(), d.object.lookAt(d.target), m.distanceToSquared(d.object.position) > f && (d.dispatchEvent(C), m.copy(d.object.position))
    }, this.reset = function() {
        E = p.NONE, g = p.NONE, d.target.copy(d.target0), d.object.position.copy(d.position0), d.object.up.copy(d.up0), v.subVectors(d.object.position, d.target), d.object.lookAt(d.target), d.dispatchEvent(C), m.copy(d.object.position)
    }, this.dispose = function() {
        this.domElement.removeEventListener("contextmenu", h, !1), this.domElement.removeEventListener("mousedown", r, !1), this.domElement.removeEventListener("mousewheel", s, !1), this.domElement.removeEventListener("MozMousePixelScroll", s, !1), this.domElement.removeEventListener("touchstart", l, !1), this.domElement.removeEventListener("touchend", u, !1), this.domElement.removeEventListener("touchmove", c, !1), document.removeEventListener("mousemove", o, !1), document.removeEventListener("mouseup", a, !1), window.removeEventListener("keydown", n, !1), window.removeEventListener("keyup", i, !1)
    }, this.domElement.addEventListener("contextmenu", h, !1), this.domElement.addEventListener("mousedown", r, !1), this.domElement.addEventListener("mousewheel", s, !1), this.domElement.addEventListener("MozMousePixelScroll", s, !1), this.domElement.addEventListener("touchstart", l, !1), this.domElement.addEventListener("touchend", u, !1), this.domElement.addEventListener("touchmove", c, !1), window.addEventListener("keydown", n, !1), window.addEventListener("keyup", i, !1), this.handleResize(), this.update()
}, THREE.TrackballControls.prototype = Object.create(THREE.EventDispatcher.prototype), THREE.TrackballControls.prototype.constructor = THREE.TrackballControls, THREE.SpriteCanvasMaterial = function(e) {
    THREE.Material.call(this), this.type = "SpriteCanvasMaterial", this.color = new THREE.Color(16777215), this.program = function(e, t) {}, this.setValues(e)
}, THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype), THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial, THREE.SpriteCanvasMaterial.prototype.clone = function() {
    var e = new THREE.SpriteCanvasMaterial;
    return e.copy(this), e.color.copy(this.color), e.program = this.program, e
}, THREE.CanvasRenderer = function(e) {
    function t() {
        Le.setRGB(0, 0, 0), De.setRGB(0, 0, 0), Oe.setRGB(0, 0, 0);
        for (var e = 0, t = b.length; e < t; e++) {
            var n = b[e],
                i = n.color;
            n instanceof THREE.AmbientLight ? Le.add(i) : n instanceof THREE.DirectionalLight ? De.add(i) : n instanceof THREE.PointLight && Oe.add(i)
        }
    }

    function n(e, t, n) {
        for (var i = 0, r = b.length; i < r; i++) {
            var o = b[i];
            if (Te.copy(o.color), o instanceof THREE.DirectionalLight) {
                var a = Fe.setFromMatrixPosition(o.matrixWorld).normalize(),
                    s = t.dot(a);
                if (s <= 0) continue;
                s *= o.intensity, n.add(Te.multiplyScalar(s))
            } else if (o instanceof THREE.PointLight) {
                var a = Fe.setFromMatrixPosition(o.matrixWorld),
                    s = t.dot(Fe.subVectors(a, e).normalize());
                if (s <= 0) continue;
                if (s *= 0 == o.distance ? 1 : 1 - Math.min(e.distanceTo(a) / o.distance, 1), 0 == s) continue;
                s *= o.intensity, n.add(Te.multiplyScalar(s))
            }
        }
    }

    function i(e, t, n) {
        p(n.opacity), f(n.blending);
        var i = t.scale.x * C,
            r = t.scale.y * A,
            o = .5 * Math.sqrt(i * i + r * r);
        if (ke.min.set(e.x - o, e.y - o), ke.max.set(e.x + o, e.y + o), n instanceof THREE.SpriteMaterial) {
            var a = n.map;
            if (null !== a) {
                var s = xe[a.id];
                if (void 0 !== s && s.version === a.version || (s = c(a), xe[a.id] = s), void 0 !== s.canvas) {
                    y(s.canvas);
                    var l = a.image,
                        u = l.width * a.offset.x,
                        h = l.height * a.offset.y,
                        d = l.width * a.repeat.x,
                        m = l.height * a.repeat.y,
                        E = i / d,
                        g = r / m;
                    F.save(), F.translate(e.x, e.y), 0 !== n.rotation && F.rotate(n.rotation), F.translate(-i / 2, -r / 2), F.scale(E, g), F.translate(-u, -h), F.fillRect(u, h, d, m), F.restore()
                }
            } else y(n.color.getStyle()), F.save(), F.translate(e.x, e.y), 0 !== n.rotation && F.rotate(n.rotation), F.scale(i, -r), F.fillRect(-.5, -.5, 1, 1), F.restore()
        } else n instanceof THREE.SpriteCanvasMaterial && (v(n.color.getStyle()), y(n.color.getStyle()), F.save(), F.translate(e.x, e.y), 0 !== n.rotation && F.rotate(n.rotation), F.scale(i, r), n.program(F), F.restore())
    }

    function r(e, t, n, i) {
        if (p(i.opacity), f(i.blending), F.beginPath(), F.moveTo(e.positionScreen.x, e.positionScreen.y), F.lineTo(t.positionScreen.x, t.positionScreen.y), i instanceof THREE.LineBasicMaterial) {
            if (m(i.linewidth), E(i.linecap), g(i.linejoin), i.vertexColors !== THREE.VertexColors) v(i.color.getStyle());
            else {
                var r = n.vertexColors[0].getStyle(),
                    o = n.vertexColors[1].getStyle();
                if (r === o) v(r);
                else {
                    try {
                        var a = F.createLinearGradient(e.positionScreen.x, e.positionScreen.y, t.positionScreen.x, t.positionScreen.y);
                        a.addColorStop(0, r), a.addColorStop(1, o)
                    } catch (e) {
                        a = r
                    }
                    v(a)
                }
            }
            F.stroke(), ke.expandByScalar(2 * i.linewidth)
        } else i instanceof THREE.LineDashedMaterial && (m(i.linewidth), E(i.linecap), g(i.linejoin), v(i.color.getStyle()), T([i.dashSize, i.gapSize]), F.stroke(), ke.expandByScalar(2 * i.linewidth), T([]))
    }

    function o(e, t, i, r, o, c, h, d) {
        if (x.info.render.vertices += 3, x.info.render.faces++, p(d.opacity), f(d.blending), te = e.positionScreen.x, ne = e.positionScreen.y, ie = t.positionScreen.x, re = t.positionScreen.y, oe = i.positionScreen.x, ae = i.positionScreen.y, a(te, ne, ie, re, oe, ae), (d instanceof THREE.MeshLambertMaterial || d instanceof THREE.MeshPhongMaterial) && null === d.map) ve.copy(d.color), ye.copy(d.emissive), d.vertexColors === THREE.FaceColors && ve.multiply(h.color), pe.copy(Le), je.copy(e.positionWorld).add(t.positionWorld).add(i.positionWorld).divideScalar(3), n(je, h.normalModel, pe), pe.multiply(ve).add(ye), d.wireframe === !0 ? s(pe, d.wireframeLinewidth, d.wireframeLinecap, d.wireframeLinejoin) : l(pe);
        else if (d instanceof THREE.MeshBasicMaterial || d instanceof THREE.MeshLambertMaterial || d instanceof THREE.MeshPhongMaterial)
            if (null !== d.map) {
                var m = d.map.mapping;
                m === THREE.UVMapping && (we = h.uvs, u(te, ne, ie, re, oe, ae, we[r].x, we[r].y, we[o].x, we[o].y, we[c].x, we[c].y, d.map))
            } else null !== d.envMap ? d.envMap.mapping === THREE.SphericalReflectionMapping && (Ve.copy(h.vertexNormalsModel[r]).applyMatrix3(Ie), be = .5 * Ve.x + .5, He = .5 * Ve.y + .5, Ve.copy(h.vertexNormalsModel[o]).applyMatrix3(Ie), Se = .5 * Ve.x + .5, _e = .5 * Ve.y + .5, Ve.copy(h.vertexNormalsModel[c]).applyMatrix3(Ie), Me = .5 * Ve.x + .5, Ce = .5 * Ve.y + .5, u(te, ne, ie, re, oe, ae, be, He, Se, _e, Me, Ce, d.envMap)) : (pe.copy(d.color), d.vertexColors === THREE.FaceColors && pe.multiply(h.color), d.wireframe === !0 ? s(pe, d.wireframeLinewidth, d.wireframeLinecap, d.wireframeLinejoin) : l(pe));
        else d instanceof THREE.MeshNormalMaterial ? (Ve.copy(h.normalModel).applyMatrix3(Ie), pe.setRGB(Ve.x, Ve.y, Ve.z).multiplyScalar(.5).addScalar(.5), d.wireframe === !0 ? s(pe, d.wireframeLinewidth, d.wireframeLinecap, d.wireframeLinejoin) : l(pe)) : (pe.setRGB(1, 1, 1), d.wireframe === !0 ? s(pe, d.wireframeLinewidth, d.wireframeLinecap, d.wireframeLinejoin) : l(pe))
    }

    function a(e, t, n, i, r, o) {
        F.beginPath(), F.moveTo(e, t), F.lineTo(n, i), F.lineTo(r, o), F.closePath()
    }

    function s(e, t, n, i) {
        m(t), E(n), g(i), v(e.getStyle()), F.stroke(), ke.expandByScalar(2 * t)
    }

    function l(e) {
        y(e.getStyle()), F.fill()
    }

    function c(e) {
        if (0 === e.version || e instanceof THREE.CompressedTexture || e instanceof THREE.DataTexture) return {
            canvas: void 0,
            version: e.version
        };
        var t = e.image,
            n = document.createElement("canvas");
        n.width = t.width, n.height = t.height;
        var i = n.getContext("2d");
        i.setTransform(1, 0, 0, -1, 0, t.height), i.drawImage(t, 0, 0);
        var r = e.wrapS === THREE.RepeatWrapping,
            o = e.wrapT === THREE.RepeatWrapping,
            a = "no-repeat";
        return r === !0 && o === !0 ? a = "repeat" : r === !0 ? a = "repeat-x" : o === !0 && (a = "repeat-y"), {
            canvas: F.createPattern(n, a),
            version: e.version
        }
    }

    function u(e, t, n, i, r, o, a, s, l, u, h, d, p) {
        var f = xe[p.id];
        if (void 0 !== f && f.version === p.version || (f = c(p), xe[p.id] = f), void 0 === f.canvas) return y("rgba( 0, 0, 0, 1)"), void F.fill();
        y(f.canvas);
        var m, E, g, v, T, x, R, w, b = p.offset.x / p.repeat.x,
            H = p.offset.y / p.repeat.y,
            S = p.image.width * p.repeat.x,
            _ = p.image.height * p.repeat.y;
        a = (a + b) * S, s = (s + H) * _, l = (l + b) * S, u = (u + H) * _, h = (h + b) * S, d = (d + H) * _, n -= e, i -= t, r -= e, o -= t, l -= a, u -= s, h -= a, d -= s, R = l * d - h * u, 0 !== R && (w = 1 / R, m = (d * n - u * r) * w, E = (d * i - u * o) * w, g = (l * r - h * n) * w, v = (l * o - h * i) * w, T = e - m * a - g * s, x = t - E * a - v * s, F.save(), F.transform(m, E, g, v, T, x), F.fill(), F.restore())
    }

    function h(e, t, n, i, r, o, a, s, l, c, u, h, d) {
        var p, f, m, E, g, v, y, T, x = d.width - 1,
            R = d.height - 1;
        a *= x, s *= R, l *= x, c *= R, u *= x, h *= R, n -= e, i -= t, r -= e, o -= t, l -= a, c -= s, u -= a, h -= s, y = l * h - u * c, T = 1 / y, p = (h * n - c * r) * T, f = (h * i - c * o) * T, m = (l * r - u * n) * T, E = (l * o - u * i) * T, g = e - p * a - m * s, v = t - f * a - E * s, F.save(), F.transform(p, f, m, E, g, v), F.clip(), F.drawImage(d, 0, 0), F.restore()
    }

    function d(e, t, n) {
        var i = t.x - e.x,
            r = t.y - e.y,
            o = i * i + r * r,
            a;
        0 !== o && (a = n / Math.sqrt(o), i *= a, r *= a, t.x += i, t.y += r, e.x -= i, e.y -= r)
    }

    function p(e) {
        I !== e && (F.globalAlpha = e, I = e)
    }

    function f(e) {
        N !== e && (e === THREE.NormalBlending ? F.globalCompositeOperation = "source-over" : e === THREE.AdditiveBlending ? F.globalCompositeOperation = "lighter" : e === THREE.SubtractiveBlending && (F.globalCompositeOperation = "darker"), N = e)
    }

    function m(e) {
        U !== e && (F.lineWidth = e, U = e)
    }

    function E(e) {
        G !== e && (F.lineCap = e, G = e)
    }

    function g(e) {
        W !== e && (F.lineJoin = e, W = e)
    }

    function v(e) {
        B !== e && (F.strokeStyle = e, B = e)
    }

    function y(e) {
        z !== e && (F.fillStyle = e, z = e)
    }

    function T(e) {
        q.length !== e.length && (F.setLineDash(e), q = e)
    }
    console.log("THREE.CanvasRenderer", THREE.REVISION), e = e || {};
    var x = this,
        R, w, b, H = new THREE.Projector,
        S = void 0 !== e.canvas ? e.canvas : document.createElement("canvas"),
        _ = S.width,
        M = S.height,
        C = Math.floor(_ / 2),
        A = Math.floor(M / 2),
        P = 0,
        k = 0,
        L = _,
        D = M,
        O = 1,
        F = S.getContext("2d", {
            alpha: e.alpha === !0
        }),
        j = new THREE.Color(0),
        V = e.alpha === !0 ? 0 : 1,
        I = 1,
        N = 0,
        B = null,
        z = null,
        U = null,
        G = null,
        W = null,
        q = [],
        X, Y, Z, K, Q, J = new THREE.RenderableVertex,
        ee = new THREE.RenderableVertex,
        te, ne, ie, re, oe, ae, se, le, ce, ue, he, de, pe = new THREE.Color,
        fe = new THREE.Color,
        me = new THREE.Color,
        Ee = new THREE.Color,
        ge = new THREE.Color,
        ve = new THREE.Color,
        ye = new THREE.Color,
        Te = new THREE.Color,
        xe = {},
        Re, we, be, He, Se, _e, Me, Ce, Ae = new THREE.Box2,
        Pe = new THREE.Box2,
        ke = new THREE.Box2,
        Le = new THREE.Color,
        De = new THREE.Color,
        Oe = new THREE.Color,
        Fe = new THREE.Vector3,
        je = new THREE.Vector3,
        Ve = new THREE.Vector3,
        Ie = new THREE.Matrix3;
    void 0 === F.setLineDash && (F.setLineDash = function() {}), this.domElement = S, this.autoClear = !0, this.sortObjects = !0, this.sortElements = !0, this.info = {
        render: {
            vertices: 0,
            faces: 0
        }
    }, this.supportsVertexTextures = function() {}, this.setFaceCulling = function() {}, this.getContext = function() {
        return F
    }, this.getContextAttributes = function() {
        return F.getContextAttributes()
    }, this.getPixelRatio = function() {
        return O
    }, this.setPixelRatio = function(e) {
        void 0 !== e && (O = e)
    }, this.setSize = function(e, t, n) {
        _ = e * O, M = t * O, S.width = _, S.height = M, C = Math.floor(_ / 2), A = Math.floor(M / 2), n !== !1 && (S.style.width = e + "px", S.style.height = t + "px"), Ae.min.set(-C, -A), Ae.max.set(C, A), Pe.min.set(-C, -A), Pe.max.set(C, A), I = 1, N = 0, B = null, z = null, U = null, G = null, W = null, this.setViewport(0, 0, e, t)
    }, this.setViewport = function(e, t, n, i) {
        P = e * O, k = t * O, L = n * O, D = i * O
    }, this.setScissor = function() {}, this.enableScissorTest = function() {}, this.setClearColor = function(e, t) {
        j.set(e), V = void 0 !== t ? t : 1, Pe.min.set(-C, -A), Pe.max.set(C, A)
    }, this.setClearColorHex = function(e, t) {
        console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."), this.setClearColor(e, t)
    }, this.getClearColor = function() {
        return j
    }, this.getClearAlpha = function() {
        return V
    }, this.getMaxAnisotropy = function() {
        return 0
    }, this.clear = function() {
        Pe.empty() === !1 && (Pe.intersect(Ae), Pe.expandByScalar(2), Pe.min.x = Pe.min.x + C, Pe.min.y = -Pe.min.y + A, Pe.max.x = Pe.max.x + C, Pe.max.y = -Pe.max.y + A, V < 1 && F.clearRect(0 | Pe.min.x, 0 | Pe.max.y, Pe.max.x - Pe.min.x | 0, Pe.min.y - Pe.max.y | 0), V > 0 && (f(THREE.NormalBlending), p(1), y("rgba(" + Math.floor(255 * j.r) + "," + Math.floor(255 * j.g) + "," + Math.floor(255 * j.b) + "," + V + ")"), F.fillRect(0 | Pe.min.x, 0 | Pe.max.y, Pe.max.x - Pe.min.x | 0, Pe.min.y - Pe.max.y | 0)), Pe.makeEmpty())
    }, this.clearColor = function() {}, this.clearDepth = function() {}, this.clearStencil = function() {}, this.render = function(e, n) {
        if (n instanceof THREE.Camera == !1) return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");
        this.autoClear === !0 && this.clear(), x.info.render.vertices = 0, x.info.render.faces = 0, F.setTransform(L / _, 0, 0, -D / M, P, M - k), F.translate(C, A), R = H.projectScene(e, n, this.sortObjects, this.sortElements), w = R.elements, b = R.lights, X = n, Ie.getNormalMatrix(n.matrixWorldInverse), t();
        for (var a = 0, s = w.length; a < s; a++) {
            var l = w[a],
                c = l.material;
            if (void 0 !== c && 0 !== c.opacity) {
                if (ke.makeEmpty(), l instanceof THREE.RenderableSprite) Y = l, Y.x *= C, Y.y *= A, i(Y, l, c);
                else if (l instanceof THREE.RenderableLine) Y = l.v1, Z = l.v2, Y.positionScreen.x *= C, Y.positionScreen.y *= A, Z.positionScreen.x *= C, Z.positionScreen.y *= A, ke.setFromPoints([Y.positionScreen, Z.positionScreen]), Ae.isIntersectionBox(ke) === !0 && r(Y, Z, l, c);
                else if (l instanceof THREE.RenderableFace) {
                    if (Y = l.v1, Z = l.v2, K = l.v3, Y.positionScreen.z < -1 || Y.positionScreen.z > 1) continue;
                    if (Z.positionScreen.z < -1 || Z.positionScreen.z > 1) continue;
                    if (K.positionScreen.z < -1 || K.positionScreen.z > 1) continue;
                    Y.positionScreen.x *= C, Y.positionScreen.y *= A, Z.positionScreen.x *= C, Z.positionScreen.y *= A, K.positionScreen.x *= C, K.positionScreen.y *= A, c.overdraw > 0 && (d(Y.positionScreen, Z.positionScreen, c.overdraw), d(Z.positionScreen, K.positionScreen, c.overdraw), d(K.positionScreen, Y.positionScreen, c.overdraw)), ke.setFromPoints([Y.positionScreen, Z.positionScreen, K.positionScreen]), Ae.isIntersectionBox(ke) === !0 && o(Y, Z, K, 0, 1, 2, l, c)
                }
                Pe.union(ke)
            }
        }
        F.setTransform(1, 0, 0, 1, 0, 0)
    }
}, THREE.RenderableObject = function() {
    this.id = 0, this.object = null, this.z = 0, this.renderOrder = 0
}, THREE.RenderableFace = function() {
    this.id = 0, this.v1 = new THREE.RenderableVertex, this.v2 = new THREE.RenderableVertex, this.v3 = new THREE.RenderableVertex, this.normalModel = new THREE.Vector3, this.vertexNormalsModel = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3], this.vertexNormalsLength = 0, this.color = new THREE.Color, this.material = null, this.uvs = [new THREE.Vector2, new THREE.Vector2, new THREE.Vector2], this.z = 0, this.renderOrder = 0
}, THREE.RenderableVertex = function() {
    this.position = new THREE.Vector3, this.positionWorld = new THREE.Vector3, this.positionScreen = new THREE.Vector4, this.visible = !0
}, THREE.RenderableVertex.prototype.copy = function(e) {
    this.positionWorld.copy(e.positionWorld), this.positionScreen.copy(e.positionScreen)
}, THREE.RenderableLine = function() {
    this.id = 0, this.v1 = new THREE.RenderableVertex, this.v2 = new THREE.RenderableVertex, this.vertexColors = [new THREE.Color, new THREE.Color], this.material = null, this.z = 0, this.renderOrder = 0
}, THREE.RenderableSprite = function() {
    this.id = 0, this.object = null, this.x = 0, this.y = 0, this.z = 0, this.rotation = 0, this.scale = new THREE.Vector2, this.material = null, this.renderOrder = 0
}, THREE.Projector = function() {
    function e() {
        if (l === u) {
            var e = new THREE.RenderableObject;
            return c.push(e), u++, l++, e
        }
        return c[l++]
    }

    function t() {
        if (d === f) {
            var e = new THREE.RenderableVertex;
            return p.push(e), f++, d++, e
        }
        return p[d++]
    }

    function n() {
        if (E === v) {
            var e = new THREE.RenderableFace;
            return g.push(e), v++, E++, e
        }
        return g[E++]
    }

    function i() {
        if (T === R) {
            var e = new THREE.RenderableLine;
            return x.push(e), R++, T++, e
        }
        return x[T++]
    }

    function r() {
        if (b === S) {
            var e = new THREE.RenderableSprite;
            return H.push(e), S++, b++, e
        }
        return H[b++]
    }

    function o(e, t) {
        return e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id !== t.id ? e.id - t.id : 0
    }

    function a(e, t) {
        var n = 0,
            i = 1,
            r = e.z + e.w,
            o = t.z + t.w,
            a = -e.z + e.w,
            s = -t.z + t.w;
        return r >= 0 && o >= 0 && a >= 0 && s >= 0 || !(r < 0 && o < 0 || a < 0 && s < 0) && (r < 0 ? n = Math.max(n, r / (r - o)) : o < 0 && (i = Math.min(i, r / (r - o))), a < 0 ? n = Math.max(n, a / (a - s)) : s < 0 && (i = Math.min(i, a / (a - s))), !(i < n) && (e.lerp(t, n), t.lerp(e, 1 - i), !0))
    }
    var s, l, c = [],
        u = 0,
        h, d, p = [],
        f = 0,
        m, E, g = [],
        v = 0,
        y, T, x = [],
        R = 0,
        w, b, H = [],
        S = 0,
        _ = {
            objects: [],
            lights: [],
            elements: []
        },
        M = new THREE.Vector3,
        C = new THREE.Vector4,
        A = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)),
        P = new THREE.Box3,
        k = new Array(3),
        L = new Array(4),
        D = new THREE.Matrix4,
        O = new THREE.Matrix4,
        F, j = new THREE.Matrix4,
        V = new THREE.Matrix3,
        I = new THREE.Frustum,
        N = new THREE.Vector4,
        B = new THREE.Vector4;
    this.projectVector = function(e, t) {
        console.warn("THREE.Projector: .projectVector() is now vector.project()."), e.project(t)
    }, this.unprojectVector = function(e, t) {
        console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), e.unproject(t)
    }, this.pickingRay = function(e, t) {
        console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
    };
    var z = function() {
            function e(e) {
                g = e, v = g.material, T.getNormalMatrix(g.matrixWorld), f.length = 0, E.length = 0
            }

            function r(e) {
                var t = e.position,
                    n = e.positionWorld,
                    i = e.positionScreen;
                n.copy(t).applyMatrix4(F), i.copy(n).applyMatrix4(O);
                var r = 1 / i.w;
                i.x *= r, i.y *= r, i.z *= r, e.visible = i.x >= -1 && i.x <= 1 && i.y >= -1 && i.y <= 1 && i.z >= -1 && i.z <= 1
            }

            function o(e, n, i) {
                h = t(), h.position.set(e, n, i), r(h)
            }

            function a(e, t, n) {
                f.push(e, t, n)
            }

            function s(e, t) {
                E.push(e, t)
            }

            function l(e, t, n) {
                return e.visible === !0 || t.visible === !0 || n.visible === !0 || (k[0] = e.positionScreen, k[1] = t.positionScreen, k[2] = n.positionScreen, A.intersectsBox(P.setFromPoints(k)))
            }

            function c(e, t, n) {
                return (n.positionScreen.x - e.positionScreen.x) * (t.positionScreen.y - e.positionScreen.y) - (n.positionScreen.y - e.positionScreen.y) * (t.positionScreen.x - e.positionScreen.x) < 0
            }

            function u(e, t) {
                var n = p[e],
                    r = p[t];
                y = i(), y.id = g.id, y.v1.copy(n), y.v2.copy(r), y.z = (n.positionScreen.z + r.positionScreen.z) / 2, y.renderOrder = g.renderOrder, y.material = g.material, _.elements.push(y)
            }

            function d(e, t, i) {
                var r = p[e],
                    o = p[t],
                    a = p[i];
                if (l(r, o, a) !== !1 && (v.side === THREE.DoubleSide || c(r, o, a) === !0)) {
                    m = n(), m.id = g.id, m.v1.copy(r), m.v2.copy(o), m.v3.copy(a), m.z = (r.positionScreen.z + o.positionScreen.z + a.positionScreen.z) / 3, m.renderOrder = g.renderOrder, m.normalModel.fromArray(f, 3 * e), m.normalModel.applyMatrix3(T).normalize();
                    for (var s = 0; s < 3; s++) {
                        var u = m.vertexNormalsModel[s];
                        u.fromArray(f, 3 * arguments[s]), u.applyMatrix3(T).normalize();
                        var h = m.uvs[s];
                        h.fromArray(E, 2 * arguments[s])
                    }
                    m.vertexNormalsLength = 3, m.material = g.material, _.elements.push(m)
                }
            }
            var f = [],
                E = [],
                g = null,
                v = null,
                T = new THREE.Matrix3;
            return {
                setObject: e,
                projectVertex: r,
                checkTriangleVisibility: l,
                checkBackfaceCulling: c,
                pushVertex: o,
                pushNormal: a,
                pushUv: s,
                pushLine: u,
                pushTriangle: d
            }
        },
        U = new z;
    this.projectScene = function(c, u, h, f) {
        E = 0, T = 0, b = 0, _.elements.length = 0, c.autoUpdate === !0 && c.updateMatrixWorld(), null === u.parent && u.updateMatrixWorld(), D.copy(u.matrixWorldInverse.getInverse(u.matrixWorld)), O.multiplyMatrices(u.projectionMatrix, D), I.setFromMatrix(O), l = 0, _.objects.length = 0, _.lights.length = 0, c.traverseVisible(function(t) {
            if (t instanceof THREE.Light) _.lights.push(t);
            else if (t instanceof THREE.Mesh || t instanceof THREE.Line || t instanceof THREE.Sprite) {
                var n = t.material;
                if (n.visible === !1) return;
                t.frustumCulled !== !1 && I.intersectsObject(t) !== !0 || (s = e(), s.id = t.id, s.object = t, M.setFromMatrixPosition(t.matrixWorld), M.applyProjection(O), s.z = M.z, s.renderOrder = t.renderOrder, _.objects.push(s))
            }
        }), h === !0 && _.objects.sort(o);
        for (var g = 0, v = _.objects.length; g < v; g++) {
            var x = _.objects[g].object,
                R = x.geometry;
            if (U.setObject(x), F = x.matrixWorld, d = 0, x instanceof THREE.Mesh) {
                if (R instanceof THREE.BufferGeometry) {
                    var H = R.attributes,
                        S = R.groups;
                    if (void 0 === H.position) continue;
                    for (var A = H.position.array, P = 0, k = A.length; P < k; P += 3) U.pushVertex(A[P], A[P + 1], A[P + 2]);
                    if (void 0 !== H.normal)
                        for (var L = H.normal.array, P = 0, k = L.length; P < k; P += 3) U.pushNormal(L[P], L[P + 1], L[P + 2]);
                    if (void 0 !== H.uv)
                        for (var z = H.uv.array, P = 0, k = z.length; P < k; P += 2) U.pushUv(z[P], z[P + 1]);
                    if (null !== R.index) {
                        var G = R.index.array;
                        if (S.length > 0)
                            for (var g = 0; g < S.length; g++)
                                for (var W = S[g], P = W.start, k = W.start + W.count; P < k; P += 3) U.pushTriangle(G[P], G[P + 1], G[P + 2]);
                        else
                            for (var P = 0, k = G.length; P < k; P += 3) U.pushTriangle(G[P], G[P + 1], G[P + 2])
                    } else
                        for (var P = 0, k = A.length / 3; P < k; P += 3) U.pushTriangle(P, P + 1, P + 2)
                } else if (R instanceof THREE.Geometry) {
                    var q = R.vertices,
                        X = R.faces,
                        Y = R.faceVertexUvs[0];
                    V.getNormalMatrix(F);
                    for (var Z = x.material, K = Z instanceof THREE.MultiMaterial, Q = K === !0 ? x.material : null, J = 0, ee = q.length; J < ee; J++) {
                        var te = q[J];
                        if (M.copy(te), Z.morphTargets === !0)
                            for (var ne = R.morphTargets, ie = x.morphTargetInfluences, re = 0, oe = ne.length; re < oe; re++) {
                                var ae = ie[re];
                                if (0 !== ae) {
                                    var se = ne[re],
                                        le = se.vertices[J];
                                    M.x += (le.x - te.x) * ae, M.y += (le.y - te.y) * ae, M.z += (le.z - te.z) * ae
                                }
                            }
                        U.pushVertex(M.x, M.y, M.z)
                    }
                    for (var ce = 0, ue = X.length; ce < ue; ce++) {
                        var he = X[ce];
                        if (Z = K === !0 ? Q.materials[he.materialIndex] : x.material, void 0 !== Z) {
                            var de = Z.side,
                                pe = p[he.a],
                                fe = p[he.b],
                                me = p[he.c];
                            if (U.checkTriangleVisibility(pe, fe, me) !== !1) {
                                var Ee = U.checkBackfaceCulling(pe, fe, me);
                                if (de !== THREE.DoubleSide) {
                                    if (de === THREE.FrontSide && Ee === !1) continue;
                                    if (de === THREE.BackSide && Ee === !0) continue
                                }
                                m = n(), m.id = x.id, m.v1.copy(pe), m.v2.copy(fe), m.v3.copy(me), m.normalModel.copy(he.normal), Ee !== !1 || de !== THREE.BackSide && de !== THREE.DoubleSide || m.normalModel.negate(), m.normalModel.applyMatrix3(V).normalize();
                                for (var ge = he.vertexNormals, ve = 0, ye = Math.min(ge.length, 3); ve < ye; ve++) {
                                    var Te = m.vertexNormalsModel[ve];
                                    Te.copy(ge[ve]), Ee !== !1 || de !== THREE.BackSide && de !== THREE.DoubleSide || Te.negate(), Te.applyMatrix3(V).normalize()
                                }
                                m.vertexNormalsLength = ge.length;
                                var xe = Y[ce];
                                if (void 0 !== xe)
                                    for (var Re = 0; Re < 3; Re++) m.uvs[Re].copy(xe[Re]);
                                m.color = he.color, m.material = Z, m.z = (pe.positionScreen.z + fe.positionScreen.z + me.positionScreen.z) / 3, m.renderOrder = x.renderOrder, _.elements.push(m)
                            }
                        }
                    }
                }
            } else if (x instanceof THREE.Line) {
                if (R instanceof THREE.BufferGeometry) {
                    var H = R.attributes;
                    if (void 0 !== H.position) {
                        for (var A = H.position.array, P = 0, k = A.length; P < k; P += 3) U.pushVertex(A[P], A[P + 1], A[P + 2]);
                        if (null !== R.index)
                            for (var G = R.index.array, P = 0, k = G.length; P < k; P += 2) U.pushLine(G[P], G[P + 1]);
                        else
                            for (var we = x instanceof THREE.LineSegments ? 2 : 1, P = 0, k = A.length / 3 - 1; P < k; P += we) U.pushLine(P, P + 1)
                    }
                } else if (R instanceof THREE.Geometry) {
                    j.multiplyMatrices(O, F);
                    var q = x.geometry.vertices;
                    if (0 === q.length) continue;
                    pe = t(), pe.positionScreen.copy(q[0]).applyMatrix4(j);
                    for (var we = x instanceof THREE.LineSegments ? 2 : 1, J = 1, ee = q.length; J < ee; J++) pe = t(), pe.positionScreen.copy(q[J]).applyMatrix4(j), (J + 1) % we > 0 || (fe = p[d - 2], N.copy(pe.positionScreen), B.copy(fe.positionScreen), a(N, B) === !0 && (N.multiplyScalar(1 / N.w), B.multiplyScalar(1 / B.w), y = i(), y.id = x.id, y.v1.positionScreen.copy(N), y.v2.positionScreen.copy(B), y.z = Math.max(N.z, B.z), y.renderOrder = x.renderOrder, y.material = x.material, x.material.vertexColors === THREE.VertexColors && (y.vertexColors[0].copy(x.geometry.colors[J]), y.vertexColors[1].copy(x.geometry.colors[J - 1])), _.elements.push(y)))
                }
            } else if (x instanceof THREE.Sprite) {
                C.set(F.elements[12], F.elements[13], F.elements[14], 1), C.applyMatrix4(O);
                var be = 1 / C.w;
                C.z *= be, C.z >= -1 && C.z <= 1 && (w = r(), w.id = x.id, w.x = C.x * be, w.y = C.y * be, w.z = C.z, w.renderOrder = x.renderOrder, w.object = x, w.rotation = x.rotation, w.scale.x = x.scale.x * Math.abs(w.x - (C.x + u.projectionMatrix.elements[0]) / (C.w + u.projectionMatrix.elements[12])), w.scale.y = x.scale.y * Math.abs(w.y - (C.y + u.projectionMatrix.elements[5]) / (C.w + u.projectionMatrix.elements[13])), w.material = x.material, _.elements.push(w))
            }
        }
        return f === !0 && _.elements.sort(o), _
    }
}, !inIframe() && window.location.href.indexOf("becomeavisionary") > 0 && (window.location = "/de/");
var $active, $loadingLayer;
(new Date).getTime() > 1459268408e3, window.updateFallback = !1, window.lookAtX = 0, window.lookAtY = 0, window.lookAtZ = 0, window.lookAtStrength = 0, window.clookAtStrength = 1, window.disableLookAt = !1, window.lookAtXOffset = 0, $("html").addClass("firstLoad");
var initAssetsLoaded = !1,
    initAssetsLoadedCount = 0,
    assetsToLoadDesktop = [],
    assetsToLoadMobile = [],
    initAssetsToLoad;
$(window).resize(function() {}), window.disableWebcam = !1, init();
var ParticleManager = function() {
        function e() {
            return i || (i = new THREE.Group), i
        }

        function t() {
            s && s.call(a)
        }

        function n() {
            this.registerHandler = function(e, t) {
                r[e] = t
            }, this.createGroup = function(n) {
                var i;
                i = window.useFallback ? new ParticleCanvasGroup(n) : new ParticleGroup(n), i.onUpdate(this, t);
                var r = e();
                return o[i.id] = i, r.add(i.getMesh()), i
            }, this.onUpdate = function(e, t) {
                a = e, s = t
            }, this.get3D = function() {
                return e()
            }
        }
        var i, r = [],
            o = [],
            a, s;
        return n
    }(),
    Particle = function() {
        function e(e) {
            var t = {
                    x: 0,
                    y: 0,
                    z: 1300
                },
                n = {
                    x: 10,
                    y: 10,
                    z: 10
                },
                i = {
                    x: 0,
                    y: 0,
                    z: 1300
                },
                r = {
                    x: 0,
                    y: 0,
                    z: 1300
                },
                o = {
                    r: 254,
                    g: 255,
                    b: 255
                },
                a = {
                    r: 5,
                    g: 5,
                    b: 5
                },
                s = {
                    r: 255,
                    g: 255,
                    b: 255
                },
                l = {
                    r: 255,
                    g: 255,
                    b: 255
                },
                c = !1,
                u = !1;
            this.vector = new THREE.Vector3(t.x, t.y, t.z), this.color = new THREE.Color(o.r, o.g, o.b), this.type = e, this.settings = {}, this.setPosition = function(e, n, i) {
                t = {
                    x: e,
                    y: n,
                    z: i
                }, r = {
                    x: e,
                    y: n,
                    z: i
                }, this.vector.x = t.x, this.vector.y = t.y, this.vector.z = t.z, c = !0
            }, this.setPositionDelay = function(e, t, i) {
                n = {
                    x: e,
                    y: t,
                    z: i
                }
            }, this.setPositionZDelay = function(e) {
                n.z = e
            }, this.setTargetPosition = function(e, t, n) {
                i = {
                    x: e,
                    y: t,
                    z: n
                }, r = {
                    x: e,
                    y: t,
                    z: n
                }, c = !0
            }, this.setModTargetPosition = function(e, t, n) {
                r = {
                    x: e,
                    y: t,
                    z: n
                }, c = !0
            }, this.setTargetPositionY = function(e) {
                r.y = e, c = !0
            }, this.setColor = function(e, t, n) {
                o = {
                    r: e,
                    g: t,
                    b: n
                }, u = !0
            }, this.setColorDelay = function(e, t, n) {
                a = {
                    r: e,
                    g: t,
                    b: n
                }
            }, this.setTargetColor = function(e, t, n) {
                s = {
                    r: e,
                    g: t,
                    b: n
                }, l = {
                    r: e,
                    g: t,
                    b: n
                }, u = !0
            }, this.setModTargetColor = function(e, t, n) {
                l = {
                    r: e,
                    g: t,
                    b: n
                }, u = !0
            }, this.getTargetColor = function() {
                return s
            }, this.getTargetPosition = function() {
                return i
            }, this.getColor = function() {
                return o
            }, this.getPosition = function() {
                return t
            }, this.update = function() {
                return c && (t.x = AstralHelper.delayTo(t.x, r.x, n.x), t.y = AstralHelper.delayTo(t.y, r.y, n.y), t.z = AstralHelper.delayTo(t.z, r.z, n.z), this.vector.x = t.x, this.vector.y = t.y, this.vector.z = t.z, Math.abs(t.x - r.x) < .05 && Math.abs(t.y - r.y) < .05 && Math.abs(t.z - r.z) < .05 && (c = !1)), u && (o.r = AstralHelper.delayTo(o.r, l.r, a.r), o.g = AstralHelper.delayTo(o.g, l.g, a.g), o.b = AstralHelper.delayTo(o.b, l.b, a.b), this.color.setRGB(o.r / 255, o.g / 255, o.b / 255), Math.abs(o.r - l.r) < .2 && Math.abs(o.g - l.g) < .2 && Math.abs(o.b - l.b) < .2 && (u = !1)), {
                    pos: c,
                    col: u
                }
            }
        }
        return e
    }(),
    ParticleCanvas = function() {
        function e(e) {
            var t = {
                    x: 0,
                    y: 0,
                    z: 1300
                },
                n = {
                    x: 10,
                    y: 10,
                    z: 10
                },
                i = {
                    x: 0,
                    y: 0,
                    z: 1300
                },
                r = {
                    x: 0,
                    y: 0,
                    z: 1300
                },
                o = {
                    r: 254,
                    g: 255,
                    b: 255
                },
                a = {
                    r: 5,
                    g: 5,
                    b: 5
                },
                s = {
                    r: 255,
                    g: 255,
                    b: 255
                },
                l = {
                    r: 255,
                    g: 255,
                    b: 255
                },
                c = !1,
                u = !1,
                h = function(e) {
                    e.beginPath(), e.arc(0, 0, 1, 0, 2 * Math.PI, !1), e.fill()
                },
                d = new THREE.SpriteCanvasMaterial({
                    color: 16777215,
                    program: h
                }),
                p = new THREE.Sprite(d);
            this.vector = new THREE.Vector3(t.x, t.y, t.z), this.color = new THREE.Color(o.r, o.g, o.b), this.type = e, this.dotSize = 10, this.settings = {}, p.scale.x = p.scale.y = this.dotSize / 25, this.get3D = function() {
                return p
            }, this.setPosition = function(e, n, i) {
                t = {
                    x: e,
                    y: n,
                    z: i
                }, r = {
                    x: e,
                    y: n,
                    z: i
                }, this.vector.x = t.x, this.vector.y = t.y, this.vector.z = t.z, c = !0
            }, this.setPositionDelay = function(e, t, i) {
                n = {
                    x: e,
                    y: t,
                    z: i
                }
            }, this.setPositionZDelay = function(e) {
                n.z = e
            }, this.setTargetPosition = function(e, t, n) {
                i = {
                    x: e,
                    y: t,
                    z: n
                }, r = {
                    x: e,
                    y: t,
                    z: n
                }, c = !0
            }, this.setModTargetPosition = function(e, t, n) {
                r = {
                    x: e,
                    y: t,
                    z: n
                }, c = !0
            }, this.setTargetPositionY = function(e) {
                r.y = e, c = !0
            }, this.setColor = function(e, t, n) {
                o = {
                    r: e,
                    g: t,
                    b: n
                }, u = !0
            }, this.setDotSize = function(e) {
                this.dotSize = e, p.scale.x = p.scale.y = this.dotSize / 25
            }, this.setColorDelay = function(e, t, n) {
                a = {
                    r: e,
                    g: t,
                    b: n
                }
            }, this.setTargetColor = function(e, t, n) {
                s = {
                    r: e,
                    g: t,
                    b: n
                }, l = {
                    r: e,
                    g: t,
                    b: n
                }, u = !0
            }, this.setModTargetColor = function(e, t, n) {
                l = {
                    r: e,
                    g: t,
                    b: n
                }, u = !0
            }, this.getTargetColor = function() {
                return s
            }, this.getTargetPosition = function() {
                return i
            }, this.getColor = function() {
                return o
            }, this.getPosition = function() {
                return t
            }, this.update = function() {
                return c && (t.x = r.x, t.y = r.y, t.z = r.z, this.vector.x = t.x, this.vector.y = t.y, this.vector.z = t.z, p.position.x = this.vector.x, p.position.y = this.vector.y, p.position.z = this.vector.z), u && (o.r = l.r, o.g = l.g, o.b = l.b, d.color.setRGB(o.r / 255, o.g / 255, o.b / 255)), {
                    pos: c,
                    col: u
                }
            }
        }
        return e
    }(),
    ParticleCanvasGroup = function() {
        function e(e) {
            var t, n, r, o, a, s, l = {
                    x: 0,
                    y: 0,
                    z: 0
                },
                c = {
                    x: 0,
                    y: 0,
                    z: 0
                },
                u = 25,
                h = 1,
                d = {
                    x: 0,
                    y: 0,
                    z: 0
                },
                p = {
                    x: 0,
                    y: 0,
                    z: 0
                },
                f = 25,
                m = 0;
            this.id = AstralHelper.uniqeID(), this.handlerFunction = !1, this.params = !1, this.particles = [], this.toRemove = [], this.settings = {}, this.positionDelay = 10, this.rotationDelay = 30, this.handlerID = "", this.modifyerFunctions = [], void 0 == e && (e = "dot");
            var E = function(e) {
                e.beginPath(), e.arc(0, 0, 1, 0, 2 * Math.PI, !1), e.fill()
            };
            r = new THREE.Group, o = RenderHandler.getInstance(), this.setHandler = function(e, t) {
                var n, i;
                for (this.handlerFunction = ParticleHandler.getHandler(e), this.params = t, this.handlerID = e, this.handlerFunction.initBefore.call(this), i = 0; i < this.particles.length; i++) this.handlerFunction.initSingle.call(this, i);
                n = this.handlerFunction.init.call(this), n && s.call(a), o.loop(this.id, this, this.update)
            }, this.addModifyer = function(e, t) {
                var n, i = AstralHelper.uniqeID(),
                    r = {
                        uuid: i,
                        id: e,
                        funcs: ParticleModifyer.getModifyer(e),
                        params: t
                    };
                for (this.modifyerFunctions = [], this.modifyerFunctions.push(r), r.funcs.initBefore.call(this), n = 0; n < this.particles.length; n++) r.funcs.initSingle.call(this, n);
                return r.funcs.init.call(this), i
            }, this.clearModifyer = function(e) {
                var t, n;
                n = !1;
                for (t in this.modifyerFunctions)
                    if (this.modifyerFunctions[t].id == e) {
                        this.modifyerFunctions.splice(t, 1);
                        break
                    }
                return n
            }, this.setParticleCount = function(e) {
                var t, n = 0,
                    i, o;
                if (this.particles.length == e)
                    for (t = 0; t < e; t++) this.particles[t].type = "default";
                else if (this.particles.length < e)
                    for (t = 0; t < e; t++) t < this.particles.length ? this.particles[t].type = "default" : (this.particles[t] = new ParticleCanvas("new"), r.add(this.particles[t].get3D()), n++);
                else {
                    var a = [];
                    for (t = 0; t < this.particles.length; t++) t < e ? (this.particles[t].type = "default", a[t] = this.particles[t]) : (this.particles[t].type = "remove", r.remove(this.particles[t].get3D()));
                    this.particles = a
                }
            }, this.update = function() {
                var e, t, n, i;
                if (window.updateFallback) {
                    var o = this.particles.length;
                    for (n = {
                            col: !1,
                            pos: !1
                        }, e = 0; e < o; e++) {
                        for (i = this.handlerFunction.updateSingle.call(this, e), t = 0; t < this.modifyerFunctions.length; t++) this.modifyerFunctions[t].funcs.updateSingle.call(this, e);
                        i.pos && (n.pos = !0), i.col && (n.col = !0)
                    }
                    var u, f;
                    for (this.handlerFunction.update.call(this), t = 0; t < this.modifyerFunctions.length; t++) this.modifyerFunctions[t].funcs.update.call(this);
                    h != m && (n.col = !0, h = m), l.x != d.x && (n.pos = !0, l.x = d.x, r.position.x = l.x), l.y != d.y && (n.pos = !0, l.y = d.y, r.position.y = l.y), l.z != d.z && (n.pos = !0, l.z = d.z, r.position.z = l.z), c.x != p.x && (n.pos = !0, c.x = p.x, r.rotation.x = c.x), c.y != p.y && (n.pos = !0, c.y = p.y, r.rotation.y = c.y), c.z != p.z && (n.pos = !0, c.z = p.z, r.rotation.z = c.z), n.pos, n.col, (n.pos || n.col) && s.call(a)
                }
            }, this.setTargetPosition = function(e, t, n) {
                d.x = e, d.y = t, d.z = n
            }, this.setPosition = function(e, t, n) {
                d.x = e, d.y = t, d.z = n, l.x = e, l.y = t, l.z = n
            }, this.setTargetZ = function(e) {
                d.z = e
            }, this.setZ = function(e) {
                d.z = e, l.z = e
            }, this.setTargetRotation = function(e, t, n) {
                p.x = e, p.y = t, p.z = n
            }, this.setTargetDotSize = function(e) {
                if (f = e, u = e, window.useFallback)
                    for (i = 0; i < this.particles.length; i++) this.particles[i].setDotSize(e)
            }, this.setTargetOpacity = function(e) {
                m = e
            }, this.setOpacity = function(e) {
                m = e, h = e
            }, this.updateHandlerParam = function(e, t, n) {
                if (this.params[e] = t, n && this.handlerFunction.paramUpdateBefore) {
                    for (this.handlerFunction.paramUpdateBefore.call(this, e), i = 0; i < this.particles.length; i++)
                        for (this.handlerFunction.paramUpdateSingle.call(this, i, e), mi = 0; mi < this.modifyerFunctions.length; mi++) this.modifyerFunctions[mi].funcs.updateSingle.call(this, i);
                    hasChanged = this.handlerFunction.paramUpdateInit.call(this, e)
                }
            }, this.getCSV = function() {
                var e, t, n, i, r;
                for (t = u + "," + h + "," + c.x + "," + c.y + "," + c.z + "\n", e = 0; e < this.particles.length; e++) n = this.particles[e], i = n.getPosition(), r = n.getColor(), t += this.roundPos(i.x) * -1 + "," + this.roundPos(i.y) * -1 + "," + this.roundPos(i.z) + "," + AstralHelper.rgb2Color(r.r, r.g, r.b), e != this.particles.length - 1 && (t += "\n");
                return t
            }, this.roundPos = function(e) {
                return Math.round(100 * e) / 100
            }, this.disableDeph = function(e, n) {
                e ? (t.depthWrite = !1, t.depthTest = !1, r.renderOrder = n) : (t.depthWrite = !0, t.depthTest = !0, r.renderOrder = 0)
            }, this.getMesh = function() {
                return r
            }, this.onUpdate = function(e, t) {
                a = e, s = t
            }
        }
        return e
    }(),
    ParticleGroup = function() {
        function e(e) {
            var t, n, r, o, a, s, l = {
                    x: 0,
                    y: 0,
                    z: 0
                },
                c = {
                    x: 0,
                    y: 0,
                    z: 0
                },
                u = 25,
                h = 1,
                d = {
                    x: 0,
                    y: 0,
                    z: 0
                },
                p = {
                    x: 0,
                    y: 0,
                    z: 0
                },
                f = 25,
                m = 0;
            this.id = AstralHelper.uniqeID(), this.handlerFunction = !1, this.params = !1, this.particles = [], this.toRemove = [], this.settings = {}, this.positionDelay = 10, this.rotationDelay = 30, this.handlerID = "", this.modifyerFunctions = [], void 0 == e && (e = "dot"), t = new THREE.PointsMaterial({
                size: u,
                map: window.loadedTextures[e],
                side: THREE.DoubleSide,
                transparent: !0,
                opacity: h,
                vertexColors: THREE.VertexColors
            }), n = new THREE.Geometry, r = new THREE.Points(n, t), window.geo = t, window.mesh = r, o = RenderHandler.getInstance(), this.setHandler = function(e, t) {
                var n, i;
                for (this.handlerFunction = ParticleHandler.getHandler(e), this.params = t, this.handlerID = e, this.handlerFunction.initBefore.call(this), i = 0; i < this.particles.length; i++) this.handlerFunction.initSingle.call(this, i);
                n = this.handlerFunction.init.call(this), n && s.call(a), o.loop(this.id, this, this.update)
            }, this.addModifyer = function(e, t) {
                var n, i = AstralHelper.uniqeID(),
                    r = {
                        uuid: i,
                        id: e,
                        funcs: ParticleModifyer.getModifyer(e),
                        params: t
                    };
                for (this.modifyerFunctions = [], this.modifyerFunctions.push(r), r.funcs.initBefore.call(this), n = 0; n < this.particles.length; n++) r.funcs.initSingle.call(this, n);
                return r.funcs.init.call(this), i
            }, this.clearModifyer = function(e) {
                var t, n;
                n = !1;
                for (t in this.modifyerFunctions)
                    if (this.modifyerFunctions[t].id == e) {
                        this.modifyerFunctions.splice(t, 1);
                        break
                    }
                return n
            }, this.setParticleCount = function(e) {
                var t, n = 0,
                    i, o;
                if (this.particles.length == e)
                    for (t = 0; t < e; t++) this.particles[t].type = "default";
                else if (this.particles.length < e)
                    for (i = r.geometry.vertices, o = r.geometry.colors, r.geometry = new THREE.Geometry, r.geometry.vertices = i, r.geometry.colors = o, t = 0; t < e; t++) t < this.particles.length ? this.particles[t].type = "default" : (this.particles[t] = new Particle("new"), r.geometry.vertices[t] = this.particles[t].vector, r.geometry.colors[t] = this.particles[t].color, n++);
                else
                    for (t = 0; t < this.particles.length; t++) t < e ? this.particles[t].type = "default" : this.particles[t].type = "remove"
            }, this.update = function() {
                var e, n, i, o, E = this.particles.length;
                for (i = {
                        col: !1,
                        pos: !1
                    }, e = 0; e < E; e++) {
                    for (o = this.handlerFunction.updateSingle.call(this, e), n = 0; n < this.modifyerFunctions.length; n++) this.modifyerFunctions[n].funcs.updateSingle.call(this, e);
                    o.pos && (i.pos = !0), o.col && (i.col = !0)
                }
                var g, v;
                for (e = this.toRemove.length - 1; e >= 0; e--) g = this.toRemove[e], v = r.geometry.vertices.length - 1, g == v ? (r.geometry.vertices.pop(), r.geometry.colors.pop(), this.particles.pop(), v = r.geometry.vertices.length - 1) : (r.geometry.vertices[g] = r.geometry.vertices[v], r.geometry.colors[g] = r.geometry.colors[v], this.particles[g] = this.particles[v], r.geometry.vertices.pop(), r.geometry.colors.pop(), this.particles.pop(), v = r.geometry.vertices.length - 1);
                for (this.toRemove = [], this.handlerFunction.update.call(this), n = 0; n < this.modifyerFunctions.length; n++) this.modifyerFunctions[n].funcs.update.call(this);
                u != f && (i.col = !0, u = Math.round(100 * AstralHelper.delayTo(u, f, this.positionDelay)) / 100, t.size = u), h != m && (i.col = !0, h = Math.round(100 * AstralHelper.delayTo(h, m, this.positionDelay)) / 100, t.opacity = h), l.x != d.x && (i.pos = !0, l.x = Math.round(100 * AstralHelper.delayTo(l.x, d.x, this.positionDelay)) / 100, r.position.x = l.x), l.y != d.y && (i.pos = !0, l.y = Math.round(100 * AstralHelper.delayTo(l.y, d.y, this.positionDelay)) / 100, r.position.y = l.y), l.z != d.z && (i.pos = !0, l.z = Math.round(100 * AstralHelper.delayTo(l.z, d.z, this.positionDelay)) / 100, r.position.z = l.z), c.x != p.x && (i.pos = !0, c.x = Math.round(1e4 * AstralHelper.delayTo(c.x, p.x, this.rotationDelay)) / 1e4, r.rotation.x = c.x), c.y != p.y && (i.pos = !0, c.y = Math.round(1e4 * AstralHelper.delayTo(c.y, p.y, this.rotationDelay)) / 1e4, r.rotation.y = c.y), c.z != p.z && (i.pos = !0, c.z = Math.round(1e4 * AstralHelper.delayTo(c.z, p.z, this.rotationDelay)) / 1e4, r.rotation.z = c.z), i.pos && (r.geometry.verticesNeedUpdate = !0, r.geometry.normalsNeedUpdate = !0), i.col && (r.geometry.colorsNeedUpdate = !0), (i.pos || i.col) && s.call(a)
            }, this.setTargetPosition = function(e, t, n) {
                d.x = e, d.y = t, d.z = n
            }, this.setPosition = function(e, t, n) {
                d.x = e, d.y = t, d.z = n, l.x = e, l.y = t, l.z = n
            }, this.setTargetZ = function(e) {
                d.z = e
            }, this.setZ = function(e) {
                d.z = e, l.z = e
            }, this.setTargetRotation = function(e, t, n) {
                p.x = e, p.y = t, p.z = n
            }, this.setTargetDotSize = function(e) {
                f = e
            }, this.setTargetOpacity = function(e) {
                m = e
            }, this.setOpacity = function(e) {
                m = e, h = e
            }, this.updateHandlerParam = function(e, t, n) {
                if (this.params[e] = t, n && this.handlerFunction.paramUpdateBefore) {
                    for (this.handlerFunction.paramUpdateBefore.call(this, e), i = 0; i < this.particles.length; i++)
                        for (this.handlerFunction.paramUpdateSingle.call(this, i, e), mi = 0; mi < this.modifyerFunctions.length; mi++) this.modifyerFunctions[mi].funcs.updateSingle.call(this, i);
                    hasChanged = this.handlerFunction.paramUpdateInit.call(this, e)
                }
            }, this.getCSV = function() {
                var e, t, n, i, r;
                for (t = u + "," + h + "," + c.x + "," + c.y + "," + c.z + "\n", e = 0; e < this.particles.length; e++) n = this.particles[e], i = n.getPosition(), r = n.getColor(), t += this.roundPos(i.x) * -1 + "," + this.roundPos(i.y) * -1 + "," + this.roundPos(i.z) + "," + AstralHelper.rgb2Color(r.r, r.g, r.b), e != this.particles.length - 1 && (t += "\n");
                return t
            }, this.roundPos = function(e) {
                return Math.round(100 * e) / 100
            }, this.disableDeph = function(e, n) {
                e ? (t.depthWrite = !1, t.depthTest = !1, r.renderOrder = n) : (t.depthWrite = !0, t.depthTest = !0, r.renderOrder = 0)
            }, this.getMesh = function() {
                return r
            }, this.onUpdate = function(e, t) {
                a = e, s = t
            }
        }
        return e
    }(),
    ParticleHandler = function() {
        return {
            handlers: [],
            registerHandler: function(e, t, n, i, r, o, a, s, l) {
                this.handlers[e] = {
                    initBefore: t,
                    initSingle: n,
                    init: i,
                    updateSingle: r,
                    update: o,
                    paramUpdateBefore: a,
                    paramUpdateSingle: s,
                    paramUpdateInit: l
                }
            },
            getHandler: function(e) {
                return this.handlers[e]
            }
        }
    }(),
    ParticleModifyer = function() {
        return {
            modifyer: [],
            registerModifyer: function(e, t, n, i, r, o) {
                this.modifyer[e] = {
                    initBefore: t,
                    initSingle: n,
                    init: i,
                    updateSingle: r,
                    update: o
                }
            },
            getModifyer: function(e) {
                return this.modifyer[e]
            }
        }
    }();
ParticleHandler.registerHandler("depthColor", function() {
    this.setParticleCount(this.params.data.count), void 0 == this.params.scaleZ && (this.params.scaleZ = 1), void 0 == this.params.scaleX && (this.params.scaleX = 1), void 0 == this.params.speed && (this.params.speed = 0), void 0 == this.params.offset && (this.params.offset = 0), void 0 == this.params.loop && (this.params.loop = !1), void 0 == this.params.morph && (this.params.morph = 0), void 0 == this.params.resModulo && (this.params.resModulo = 1), void 0 != this.params.dotsize && this.setTargetDotSize(this.params.dotsize), void 0 != this.params.opacity && (this.params.instant ? this.setOpacity(this.params.opacity) : this.setTargetOpacity(this.params.opacity))
}, function(e) {
    var t = this.particles[e],
        n, i, r, o, a = e % this.params.resModulo != 0;
    if (window.useFallback && t.setDotSize(this.params.dotsize), "new" == t.type || "default" == t.type) {
        o = this.params.data.particles[e], t.settings = {
            x: o.x,
            y: this.params.data.height - o.y
        };
        var s = 3,
            l = 4400;
        if (a) t.setPosition(0, 0, 1e8), t.setTargetPosition(0, 0, 1e8), o.hidden = !0;
        else if ("new" == t.type) {
            if (window.useFallback);
            else {
                var c = 360 * Math.random();
                t.setPosition(l * Math.cos(c), l * Math.sin(c), l)
            }
            o.hidden = !1
        }
        if (void 0 != this.params.delayZ ? t.setPositionDelay(1 + 10 * this.params.delayMulti * Math.random(), 1 + 10 * this.params.delayMulti * Math.random(), this.params.delayZ) : t.setPositionDelay(1 + 10 * this.params.delayMulti * Math.random(), 1 + 10 * this.params.delayMulti * Math.random(), 1 + 10 * this.params.delayMulti * Math.random()), void 0 != this.params.colorDelay ? t.setColorDelay(this.params.colorDelay, this.params.colorDelay, this.params.colorDelay) : t.setColorDelay(1 + 10 * this.params.delayMulti * Math.random(), 1 + 10 * this.params.delayMulti * Math.random(), 1 + 10 * this.params.delayMulti * Math.random()), n = t.settings.x - this.params.data.width / 2, i = t.settings.y - this.params.data.height / 2, r = o.d, 1 == this.params.morph ? r = o.d2 : this.params.morph > 0 && (r = o.d - (o.d - o.d2) * this.params.morph), r < 10 && void 0 != o.d2 && (r = -1e8), r *= this.params.scaleZ, n *= this.params.scaleX, a || (t.setTargetPosition(n, i, r), (this.params.instant || window.useFallback) && t.setPosition(n, i, r)), void 0 != this.params.colorFade) {
            var u = o.r - o.r2,
                h = o.g - o.g2,
                d = o.b - o.b2,
                p = o.r - u * this.params.colorFade,
                f = o.g - h * this.params.colorFade,
                m = o.b - d * this.params.colorFade;
            t.setTargetColor(p, f, m)
        } else if (this.params.useGrey && void 0 != this.params.tint) {
            var E = o.gs;
            if (this.params.tint.hard) var p = Math.round(E + (this.params.tint.r - E) * this.params.tint.strength),
                f = Math.round(E + (this.params.tint.g - E) * this.params.tint.strength),
                m = Math.round(E + (this.params.tint.b - E) * this.params.tint.strength);
            else var p = Math.round(E + (255 - E) * (this.params.tint.strength * (this.params.tint.r / 255))),
                f = Math.round(E + (255 - E) * (this.params.tint.strength * (this.params.tint.g / 255))),
                m = Math.round(E + (255 - E) * (this.params.tint.strength * (this.params.tint.b / 255)));
            p > 255 && (p = 255), f > 255 && (f = 255), m > 255 && (m = 255), t.setTargetColor(p, f, m)
        } else if (void 0 != this.params.tint) {
            if (this.params.tint.hard) var p = Math.round(o.r + (this.params.tint.r - o.r) * this.params.tint.strength),
                f = Math.round(o.g + (this.params.tint.g - o.g) * this.params.tint.strength),
                m = Math.round(o.b + (this.params.tint.b - o.b) * this.params.tint.strength);
            else var p = Math.round(o.r + (255 - o.r) * (this.params.tint.strength * (this.params.tint.r / 255))),
                f = Math.round(o.g + (255 - o.g) * (this.params.tint.strength * (this.params.tint.g / 255))),
                m = Math.round(o.b + (255 - o.b) * (this.params.tint.strength * (this.params.tint.b / 255)));
            p > 255 && (p = 255), f > 255 && (f = 255), m > 255 && (m = 255), t.setTargetColor(p, f, m)
        } else this.params.useGrey ? t.setTargetColor(o.gs, o.gs, o.gs) : t.setTargetColor(o.r, o.g, o.b)
    } else if ("remove" == t.type) {
        t.setColor(255, 255, 255), t.setTargetColor(255, 255, 255);
        var l = 44e5;
        t.setPositionDelay(1, 1, 1);
        var c = 360 * Math.random();
        t.setPosition(l * Math.cos(c), l * Math.sin(c), l)
    }
}, function() {
    return !0
}, function(e) {
    0 == e && this.params.loop && this.params.speed > 0 && (this.params.offset += this.params.speed, this.params.loopUpdate = !0);
    var t = this.particles[e],
        n = t.update(),
        i, r;
    return n.pos || n.col || "remove" != t.type ? this.params.loop && this.params.loopUpdate && (i = t.getTargetPosition(), r = {
        x: i.x,
        y: i.y,
        z: i.z
    }, r.z += this.params.offset, t.setModTargetPosition(r.x, r.y, r.z)) : this.toRemove.push(e), n
}, function() {
    this.params.loopUpdate = !1
}, function(e) {}, function(e, t) {
    if ("colorFade" == t) {
        var n = this.particles[e],
            i = this.params.data.particles[e],
            r = i.r - i.r2,
            o = i.g - i.g2,
            a = i.b - i.b2,
            s = i.r - r * this.params.colorFade,
            l = i.g - o * this.params.colorFade,
            c = i.b - a * this.params.colorFade;
        n.setTargetColor(s, l, c);
        var u = window.modColor,
            h = s + (u.r - s) * u.s,
            d = l + (u.g - l) * u.s,
            p = c + (u.b - c) * u.s;
        n.setModTargetColor(h, d, p)
    } else if ("scaleZ" == t || "scaleX" == t || "morph" == t) {
        var n = this.particles[e],
            i = this.params.data.particles[e];
        if (!i.hidden) {
            var f = n.settings.x - this.params.data.width / 2,
                m = n.settings.y - this.params.data.height / 2,
                E;
            E = i.d, 1 == this.params.morph ? E = i.d2 : this.params.morph > 0 && (E = i.d - (i.d - i.d2) * this.params.morph), E *= this.params.scaleZ, f *= this.params.scaleX, 0 == E && (E = -1e8), n.setTargetPosition(f, m, E)
        }
    } else if ("resModulo" == t) {
        var n = this.particles[e],
            g = e % this.params.resModulo != 0,
            i = this.params.data.particles[e];
        if (g && !i.hidden) n.setPosition(0, 0, 1e8), n.setTargetPosition(0, 0, 1e8), i.hidden = !0;
        else if (!g && i.hidden) {
            i.hidden = !1;
            var f = n.settings.x - this.params.data.width / 2,
                m = n.settings.y - this.params.data.height / 2,
                E;
            E = i.d, 1 == this.params.morph ? E = i.d2 : this.params.morph > 0 && (E = i.d - (i.d - i.d2) * this.params.morph), E *= this.params.scaleZ, f *= this.params.scaleX, E < 10 && (E = -1e8), n.setPosition(f, m, E), n.setTargetPosition(f, m, E)
        }
    }
}, function(e) {}), window.scrollOffset = 0, ParticleHandler.registerHandler("explore", function() {
    void 0 != this.params.dotsize && this.setTargetDotSize(this.params.dotsize), void 0 != this.params.opacity && this.setTargetOpacity(this.params.opacity), this.settings.posOffset = 1e14, this.settings.rowCount = this.params.data.particles[0].length, this.setParticleCount(this.params.data.count)
}, function(e) {
    var t = this.particles[e],
        n, i, r, o, a, s;
    if ("new" == t.type || "default" == t.type) {
        n = e % this.settings.rowCount, i = Math.floor(e / this.settings.rowCount), r = this.params.data.particles[i][n], t.settings = {
            originX: r.x,
            originY: r.y,
            originZ: r.d,
            originXX: r.xx,
            originYY: r.yy,
            originDD: r.dd,
            dataIndexX: n,
            dataIndexY: i
        };
        var l = 4400;
        if ("new" == t.type) {
            var c = 360 * Math.random();
            t.setPosition(l * Math.cos(c), l * Math.sin(c), l)
        }
        t.setPositionDelay(1 + 10 * this.params.delayMulti * Math.random(), 1 + 10 * this.params.delayMulti * Math.random(), 1 + 10 * this.params.delayMulti * Math.random()), t.setColorDelay(1 + 10 * this.params.delayMulti * Math.random(), 1 + 10 * this.params.delayMulti * Math.random(), 1 + 10 * this.params.delayMulti * Math.random()), o = t.settings.originX, a = t.settings.originY, s = t.settings.originZ, t.setTargetPosition(o + t.settings.originXX, a, s + r.dd), t.setTargetColor(255, 255, 255)
    } else if ("remove" == t.type) {
        var l = 44e5;
        t.setPositionDelay(20, 20, 5);
        var c = 360 * Math.random();
        t.setPosition(l * Math.cos(c), l * Math.sin(c), l)
    }
}, function() {
    return !0
}, function(e) {
    var t = this.particles[e],
        n = t.settings.dataIndexX,
        i = t.settings.dataIndexY,
        r = Math.round(10 * (i + this.settings.posOffset)) / 10,
        o = Math.floor(r) % this.settings.rowCount,
        a = Math.ceil(r) % this.settings.rowCount;
    if (o != a) {
        if (void 0 == this.params.data.particles[o]) return !1;
        var s = this.params.data.particles[o][n],
            l = this.params.data.particles[a][n],
            c = l.y - s.y,
            u = l.d - s.d,
            h = r - Math.floor(r),
            d = s.y + c * h,
            p = s.d + u * h
    } else var f = this.params.data.particles[o][n],
        d = f.y,
        p = f.d;
    var m = 2.5 * (50 + r % this.settings.rowCount / 2);
    t.setTargetColor(m, m, m), t.setTargetPosition(t.settings.originX + t.settings.originXX, d, p + t.settings.originDD);
    var E = t.update();
    return E.pos || E.col || "remove" != t.type || this.toRemove.push(e), E
}, function() {
    this.settings.posOffset = window.scrollOffset
}), ParticleHandler.registerHandler("flareEffects", function() {}, function(e) {}, function() {}, function(e) {}, function() {}), window.modColor = {
    r: 255,
    g: 255,
    b: 255,
    s: 0
};
var possibleColors = [{
    r: 255,
    g: 45,
    b: 33,
    s: .3
}, {
    r: 255,
    g: 255,
    b: 255,
    s: 0
}, {
    r: 0,
    g: 200,
    b: 255,
    s: .3
}];
window.colorHasUpdated = !1, window.colorPercent = 0, window.updateColor = function(e) {
    isNaN(e) ? e = 0 : e < 0 ? e = 0 : e > 100 && (e = 100), window.colorPercent = e;
    var t = e / (100 / (possibleColors.length - 1)),
        n = Math.floor(t);
    if (n == t) window.modColor = possibleColors[n];
    else {
        var i = possibleColors[n],
            r = possibleColors[n + 1],
            o = 100 * (t - n);
        window.modColor = {
            r: getBetween(i.r, r.r, o),
            g: getBetween(i.g, r.g, o),
            b: getBetween(i.b, r.b, o),
            s: getBetween(i.s, r.s, o)
        }
    }
    window.colorHasUpdated = !0
}, ParticleModifyer.registerModifyer("color", function() {}, function(e) {}, function() {}, function(e) {
    if (window.colorHasUpdated) {
        var t = this.particles[e],
            n = t.getTargetColor(),
            i = window.modColor,
            r = n.r + (i.r - n.r) * i.s,
            o = n.g + (i.g - n.g) * i.s,
            a = n.b + (i.b - n.b) * i.s;
        t.setModTargetColor(r, o, a)
    }
}, function() {
    window.colorHasUpdated && setTimeout(function() {
        window.colorHasUpdated = !1
    }, 0)
});
var AstralHelper = function() {
        function e() {
            return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
        }
        return {
            uniqeID: function() {
                return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e()
            },
            delayTo: function(e, t, n) {
                e *= 100, t *= 100;
                var i, n, r;
                return r = t, i = r - e, Math.round(Math.abs(i)) > 0 ? (e + i / n) / 100 : t / 100
            },
            rgb2Color: function(e, t, n) {
                return AstralHelper.byte2Hex(Math.round(e)) + AstralHelper.byte2Hex(Math.round(t)) + AstralHelper.byte2Hex(Math.round(n))
            },
            byte2Hex: function(e) {
                var t = "0123456789ABCDEF";
                return String(t.substr(e >> 4 & 15, 1)) + t.substr(15 & e, 1)
            },
            shuffleArray: function(e) {
                for (var t, n, i = e.length; i; t = Math.floor(Math.random() * i), n = e[--i], e[i] = e[t], e[t] = n);
                return e
            }
        }
    }(),
    RenderHandler = function() {
        function e() {
            return window.windowFocus = !0, $(window).on("focus", function() {
                window.windowFocus = !0
            }).on("blur", function() {
                window.windowFocus = !1
            }), {
                render: function(e, t, n, o) {
                    r++, i[e] = {
                        scope: t,
                        func: n,
                        params: o
                    }
                },
                loop: function(e, t, n) {
                    a++, o[e] = {
                        scope: t,
                        func: n
                    }
                },
                off: function(e) {
                    a--, delete o[e]
                },
                pause: function() {
                    s = !1
                },
                play: function() {
                    s = !0
                }
            }
        }
        var t = function() {
                return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e) {
                    window.setTimeout(e, 1e3 / 60)
                }
            }(),
            n, i = [],
            r = 0,
            o = [],
            a = 0,
            s = !0,
            l = function() {
                var e, n;
                if (window.windowFocus && s) {
                    if (r > 0) {
                        for (e in i) i[e].func.apply(i[e].scope, i[e].params);
                        r = 0, i = []
                    }
                    if (a > 0)
                        for (e in o) n = o[e].func.apply(o[e].scope), n && (delete o[e], a--)
                }
                t(l)
            };
        return {
            getInstance: function() {
                return n || (n = e(), l()), n
            }
        }
    }(),
    ResizeHandler = function() {
        function e() {
            return i = [], n = RenderHandler.getInstance(), a(), window.onresize = function(e) {
                var t;
                for (a(), t = 0; t < i.length; t++) n.render("resizeWindowEvent_" + t, i[t].scope, i[t].func, [r.width, r.height])
            }, {
                onResize: function(e, t) {
                    i.push({
                        scope: e,
                        func: t
                    })
                },
                getDimensions: function() {
                    return r
                },
                trigger: function() {
                    var e;
                    for (a(), e = 0; e < i.length; e++) n.render("resizeWindowEvent_" + e, i[e].scope, i[e].func, [r.width, r.height])
                }
            }
        }
        var t, n, i, r, o = [{
                from: 0,
                to: 767,
                minHeight: 550
            }, {
                from: 768,
                to: 1270,
                minHeight: 640
            }, {
                from: 1271,
                to: 9999999,
                minHeight: {}
            }],
            a = function() {
                var e = $(".contentWrapper").height(),
                    t = window.innerWidth,
                    n = window.innerHeight,
                    i;
                i = t < 768 ? 550 : t <= 1270 ? 640 : n < 940 ? 720 : 940, e < i && (e = i), e < window.innerHeight && (e = window.innerHeight), e = window.innerHeight, r = {
                    height: e,
                    width: window.innerWidth
                }
            };
        return {
            getInstance: function() {
                return t || (t = e()), t
            }
        }
    }();
window.allowCameraTouch = !0;
var SimpleThree = function() {
        function e(e, t) {
            a.width = e, a.height = t, u.setSize(a.width, a.height, !0), l.aspect = a.width / a.height, l.updateProjectionMatrix(), d = !0, window.updateFallback = !0
        }

        function t() {
            function e(e) {
                f = e.clientX - a.width / 2, m = e.clientY - a.height / 2, f *= -1, m *= -1, $(".content_explore").length > 0 ? window.lookAtXOffset = 0 : window.lookAtXOffset = 0
            }

            function t(e) {
                1 == e.touches.length && window.allowCameraTouch && (f = e.touches[0].pageX - a.width / 2, m = e.touches[0].pageY - a.height / 2)
            }

            function n(e) {
                1 == e.touches.length && window.allowCameraTouch && (f = e.touches[0].pageX - a.width / 2, m = e.touches[0].pageY - a.height / 2)
            }
            var r = 10,
                s = a.width / a.height,
                h = .1,
                d = 5e5;
            f = a.width / 2, m = a.height / 2, u = window.useFallback ? new THREE.CanvasRenderer({
                alpha: !0,
                antialias: !0,
                devicePixelRatio: window.devicePixelRatio || 1
            }) : new THREE.WebGLRenderer({
                alpha: !0,
                antialias: !0,
                devicePixelRatio: 2
            }), u.setPixelRatio(window.devicePixelRatio ? window.devicePixelRatio : 1), l = new THREE.PerspectiveCamera(r, s, h, d), window.camera = l, window.scene = l, c = new THREE.Scene, l.position.z = 5e3, u.setClearColor(5798280, 0), u.setSize(a.width, a.height, !0), o.render("addCanvasToDom", this, function() {
                i.appendChild(u.domElement)
            }), usePinch ? (gyro.frequency = 50, gyro.startTracking(function(e) {
                f = 100 * e.beta, m = 0, $(".content_explore").length > 0 ? window.lookAtXOffset = 0 : window.lookAtXOffset = 0
            })) : document.addEventListener("mousemove", e, !1)
        }

        function n() {
            o = RenderHandler.getInstance(), r = ResizeHandler.getInstance(), a = r.getDimensions(), r.onResize(this, e), this.renderTo = function(e) {
                i = document.getElementById(e), t()
            }, this.add = function(e) {
                e.onUpdate(this, this.makeChange), c.add(e.get3D()), o.loop("updateThreeScene", this, this.update)
            }, this.addToScene = function(e) {
                c.add(e)
            }, this.saveStill = function(t, n) {
                var i;
                t || (t = 2048, n = 1536), i = window.devicePixelRatio ? window.devicePixelRatio : 1, t /= i, n /= i;
                var r = {
                    x: l.position.x,
                    y: l.position.y,
                    z: l.position.z
                };
                y = {
                    width: a.width,
                    height: a.height
                }, e(t, n), l.position.x = 0, l.position.y = 50, l.position.z = 3e3, l.lookAt(new THREE.Vector3(0, 50, -1e3)), u.render(c, l);
                var o = u.domElement.toDataURL("image/png");
                return e(y.width, y.height), $("canvas").css({
                    width: $(window).width() + 1
                }), setTimeout(function() {
                    $("canvas").css({
                        width: $(window).width()
                    })
                }, 20), l.position.x = r.x, l.position.y = r.y, l.position.z = r.z, u.render(c, l), o
            }, this.removeFromScene = function(e) {
                c.remove(e)
            }, this.makeChange = function() {
                d = !0
            }, this.waitCount = 0, this.update = function(e) {
                var t = 60;
                return window.useFallback ? (window.updateFallback && (this.waitCount < 3 ? this.waitCount++ : (this.waitCount = 0, u.render(c, l), setTimeout(function() {
                    window.updateFallback = !1
                }, 0))), !1) : (window.makeRender = !0, void((!window.useFallback || window.useFallback && window.makeRender) && (e || (window.disableLookAt || window.useFallback ? (l.position.x = AstralHelper.delayTo(l.position.x, 0, 10), l.position.y = AstralHelper.delayTo(l.position.y, 0, 10)) : (l.position.x = AstralHelper.delayTo(l.position.x, f / 10 * window.lookAtStrength, t), l.position.y = AstralHelper.delayTo(l.position.y, -m / 10 * window.lookAtStrength, t)), E = AstralHelper.delayTo(E, window.lookAtX, t), g = AstralHelper.delayTo(g, window.lookAtY, t), v = AstralHelper.delayTo(v, window.lookAtZ, t), l.lookAt(new THREE.Vector3(E, g, v))), u.render(c, l), d && (d = !1))))
            }
        }
        var i, r, o, a, s = 2,
            l, c, u, h, d = !1,
            p, f, m, E = 0,
            g = 0,
            v = 0,
            y, T = 0;
        return n
    }(),
    dotTexture, $3dTrigger, three, is3DLoading = !1;
window.maxRotate = .2, window.useGeneric = !0;
var visionOverviewData = [],
    rndrHndlr = RenderHandler.getInstance(),
    particles_empty = {
        count: 0,
        width: 500,
        height: 500,
        particles: []
    },
    loadedCount = 0,
    loadedTextures = [];
window.greetingsID = findGetParameter("c");
var texturesToLoad = [{
        id: "dot",
        path: window.assetURL + "/assets/gfx/dot.png?c=1"
    }, {
        id: "flare",
        path: window.assetURL + "/assets/gfx/flare.png"
    }, {
        id: "c1",
        path: "/static/custom/" + window.greetingsID + "/claims/claim_0.png"
    }, {
        id: "c2",
        path: "/static/custom/" + window.greetingsID + "/claims/claim_1.png"
    }, {
        id: "c3",
        path: "/static/custom/" + window.greetingsID + "/claims/claim_2.png"
    }, {
        id: "c4",
        path: "/static/custom/" + window.greetingsID + "/claims/claim_3.png"
    }, {
        id: "c5",
        path: "/static/custom/" + window.greetingsID + "/claims/claim_4.png"
    }, {
        id: "c6",
        path: "/static/custom/" + window.greetingsID + "/claims/claim_5.png"
    }],
    three, pManager, mainGroup, secondGroup, effectGroup, lastAction, actions = [];
lastAction = !1, actions.world = function(e) {
    mainGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 13,
        opacity: 0
    }), mainGroup.setTargetPosition(0, 0, -5e3), secondGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 13,
        opacity: 0
    }), secondGroup.setTargetPosition(0, 0, -15e3)
};
var visionData = [];
window.isDetailLoading = !1, actions.vision_detail = function(e) {
    var t = window.jVisionID;
    window.jVisionID = void 0, t && (t = t.replace("/", ""), void 0 != visionData[t] ? showVisionDetail(visionData[t]) : window.useFallback ? void 0 != window.visionOverviewData[t] ? (window.isDetailLoading = !0, $("<img />").load(function() {
        visionData[t] = window.visionOverviewData[t], showVisionDetail(visionData[t])
    }).attr("src", window.visionOverviewData[t].imgLarge)) : showVisionNotFound() : $.ajax({
        dataType: "json",
        url: "/static/faces/" + t + ".json",
        complete: function(e) {
            var n = $.parseJSON(e.responseText);
            n.success ? (visionData[t] = $.parseJSON(e.responseText), showVisionDetail(visionData[t])) : showVisionNotFound()
        }
    }))
}, window.visionShowCount = 0, actions.generate_intro = function(e) {
    window.useFallback ? (mainGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 13,
        opacity: 0
    }), secondGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 13,
        opacity: 0
    })) : (mainGroup.setHandler("depthColor", {
        data: particles_intro_layer,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1
    }), mainGroup.positionDelay = 15, mainGroup.rotationDelay = 10, mainGroup.setTargetRotation(0, 0, 0), mainGroup.setTargetPosition(0, 0, -600), secondGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1
    }), window.lookAtZ = -600, window.lookAtStrength = 1)
}, actions.generate_select = function(e) {
    var t;
    window.useFallback ? (callAniGenerateSelect($3dTrigger), mainGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 13,
        opacity: 0
    }), secondGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 13,
        opacity: 0
    }), window.updateFallback = !0) : (e && "explore" != e && "vision_detail" != e || callAniGenerateSelect($3dTrigger), t = "explore" != e ? 10 : 100, mainGroup.positionDelay = 15, mainGroup.rotationDelay = 10, mainGroup.setTargetRotation(0, 0, 0), mainGroup.setTargetPosition(0, 0, -600), mainGroup.setHandler("depthColor", {
        data: particles_intro_layer,
        modulo: 1,
        delayMulti: 1,
        delayZ: t,
        colorDelay: 50,
        dotsize: 10,
        opacity: 1,
        scaleZ: 4
    }), secondGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1
    }), window.lookAtZ = -600, window.lookAtStrength = 4)
}, actions.generate_upload = function(e) {
    if (window.disableWebcam) {
        var t;
        window.useFallback ? (callAniGenerateSelect($3dTrigger), mainGroup.setHandler("depthColor", {
            data: particles_empty,
            modulo: 1,
            delayMulti: 1,
            dotsize: 13,
            opacity: 0
        }), secondGroup.setHandler("depthColor", {
            data: particles_empty,
            modulo: 1,
            delayMulti: 1,
            dotsize: 13,
            opacity: 0
        }), window.updateFallback = !0) : (e && "explore" != e && "vision_detail" != e || callAniGenerateSelect($3dTrigger), t = "explore" != e ? 10 : 100, mainGroup.positionDelay = 15, mainGroup.rotationDelay = 10, mainGroup.setTargetRotation(0, 0, 0), mainGroup.setTargetPosition(0, 0, -600), mainGroup.setHandler("depthColor", {
            data: particles_intro_layer,
            modulo: 1,
            delayMulti: 1,
            delayZ: t,
            colorDelay: 50,
            dotsize: 10,
            opacity: 1,
            scaleZ: 4
        }), secondGroup.setHandler("depthColor", {
            data: particles_empty,
            modulo: 1,
            delayMulti: 1,
            dotsize: 10,
            opacity: 1
        }), window.lookAtZ = -600, window.lookAtStrength = 4)
    } else mainGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1
    }), secondGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1
    }), window.updateFallback = !0
}, actions.generate_check = function(e) {
    mainGroup.positionDelay = 15, mainGroup.rotationDelay = 10, mainGroup.setTargetRotation(0, -.1, 0), mainGroup.setTargetPosition(0, 30, 1e3), secondGroup.setTargetRotation(0, -.1, 0), secondGroup.setTargetPosition(0, 30, 1e3), secondGroup.setHandler("depthColor", {
        data: particles_behind_face_layer_boost,
        modulo: 1,
        delayMulti: 1,
        dotsize: 13.475,
        opacity: 1,
        morph: .5
    }), window.updateFallback = !0, window.lookAtZ = 1e3, window.lookAtStrength = 12
}, actions.generate_claim = function(e) {
    secondGroup.addModifyer("color"), mainGroup.addModifyer("color"), secondGroup.setHandler("depthColor", {
        data: particles_behind_face_layer_boost,
        modulo: 1,
        delayMulti: 1,
        dotsize: 13.475,
        opacity: 1
    }), window.useGeneric && mainGroup.setHandler("depthColor", {
        data: particles_generic_face[0],
        modulo: 1,
        delayMulti: 1,
        dotsize: 13.475,
        opacity: 1
    }), secondGroup.positionDelay = 15, secondGroup.rotationDelay = 10, mainGroup.positionDelay = 15, mainGroup.rotationDelay = 10, secondGroup.setTargetRotation(0, -.15, 0), secondGroup.setTargetPosition(0, 30, 1e3), mainGroup.setTargetRotation(0, -.15, 0), mainGroup.setTargetPosition(0, 30, 1e3), window.lookAtZ = 1e3, window.lookAtStrength = 12
}, actions.generate_modify = function(e) {
    secondGroup.addModifyer("color"), mainGroup.addModifyer("color"), mainGroup.setTargetPosition(0, 30, 1e3), secondGroup.setTargetPosition(0, 30, 1e3), window.lookAtZ = 1e3, window.lookAtStrength = 12
}, actions.generate_save = function(e) {
    mainGroup.positionDelay = 15, mainGroup.rotationDelay = 10, mainGroup.setTargetPosition(0, 50, -1e3), secondGroup.positionDelay = 15, secondGroup.rotationDelay = 10, secondGroup.setTargetPosition(0, 50, -1e3), window.updateFallback = !0, window.lookAtZ = -1e3, window.lookAtStrength = 5
}, actions.generate_finished = function(e) {
    mainGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1
    }), secondGroup.setHandler("depthColor", {
        data: particles_empty,
        modulo: 1,
        delayMulti: 1,
        dotsize: 10,
        opacity: 1
    }), window.updateFallback = !0
};
var lastRandom = -.5,
    activeClaim, claimRot = [0, -0, 0, -0, 0, 0],
    claimRotationDelay = 70,
    camRotation = 0,
    isSlowingDown = !1,
    tmpVisions = [],
    pToIndex = [],
    audioIsActive = !1,
    sounds = [],
    globalVolume = 1,
    currentWindowFocus, soundIsActiveGlobal = !0;
$(window).focus(function() {
    currentWindowFocus = !0, soundIsActiveGlobal && replaySound("base_3_default")
}).blur(function() {
    currentWindowFocus = !1, soundIsActiveGlobal && pauseSound("base_3_default")
});
var randCount = 40,
    interactiveDots = [],
    maxCenterDistance = 70,
    activeHoverObj = !1,
    bmpCache = [];
actions.explore = function(e) {
    "world" != e && e ? window.useFallback ? exploreFallback() : (exploreScroll(), $(".app-container").addClass("noSelect")) : window.useFallback ? exploreFallbackIntro() : (exploreIntro(), $(".app-container").addClass("noSelect"))
};
var tSpeed = 0,
    cSpeed = 0,
    speedDelay = 30,
    exploreBaseSpeed = 1,
    isHelperHidden = !1,
    ua = navigator.userAgent.toLowerCase(),
    iOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform) || /iPad|iPhone|iPod/.test(navigator.userAgent),
    isAndroid = ua.indexOf("android") > -1,
    isWin = navigator.userAgent.match(/iemobile/i),
    usePinch = iOS || isAndroid || isWin,
    makeDesktopPinch = !1,
    autoHover = !0,
    dropper, rhndlr = RenderHandler.getInstance(),
    flkty;
window.baseModulo = 1;
var stepZero, stepOne, stepTwo;
stepZero = stepOne = stepTwo = function() {}, $.Velocity.RegisterEffect("transition.stretchIn", {
    defaultDuration: 2e3,
    calls: [
        [{
            width: "0"
        }, .5],
        [{
            width: "25%"
        }, .5]
    ]
}), $.Velocity.RegisterEffect("callout.upDown", {
    defaultDuration: 1200,
    calls: [
        [{
            translateY: -120
        }, .35, {
            easing: "easeInOutSine"
        }],
        [{
            translateY: 0
        }, .35, {
            easing: "easeInOutSine"
        }]
    ]
}), initSpriteAnimation = function(e) {
    var t = {
        fps: 25,
        columns: 7,
        totalFrames: 49,
        loop: !0,
        complete: function() {
            console.log("Animation complete!")
        }
    };
    e.find("#animated-helper").animateSprite(t)
}, destroySpriteAnimation = function(e) {
    e.find("#animated-scroll").length > 0 && (e.find("#animated-scroll").animateSprite("destroy"), e.find("#animated-scroll").css({
        display: "none"
    }))
};